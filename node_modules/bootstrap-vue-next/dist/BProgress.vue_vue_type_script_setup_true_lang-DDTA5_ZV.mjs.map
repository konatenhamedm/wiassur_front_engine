{"version":3,"file":"BProgress.vue_vue_type_script_setup_true_lang-DDTA5_ZV.mjs","sources":["../src/components/BProgress/BProgressBar.vue","../src/components/BProgress/BProgress.vue"],"sourcesContent":["<template>\n  <div class=\"progress-bar\" :class=\"computedClasses\" :style=\"{width: computedWidth}\">\n    <slot>\n      {{ computedLabel }}\n    </slot>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type {BProgressBarProps} from '../../types/ComponentProps'\nimport {useColorVariantClasses} from '../../composables/useColorVariantClasses'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {computed, inject} from 'vue'\nimport {progressInjectionKey} from '../../utils/keys'\nimport {useToNumber} from '@vueuse/core'\nimport type {BProgressBarSlots} from '../../types'\n\nconst _props = withDefaults(defineProps<BProgressBarProps>(), {\n  animated: false,\n  bgVariant: null,\n  label: undefined,\n  max: undefined,\n  precision: 0,\n  showProgress: false,\n  showValue: false,\n  striped: false,\n  textVariant: null,\n  value: 0,\n  variant: null,\n})\nconst props = useDefaults(_props, 'BProgressBar')\ndefineSlots<BProgressBarSlots>()\n\nconst parentData = inject(progressInjectionKey, null)\n\nconst colorClasses = useColorVariantClasses(props)\nconst computedClasses = computed(() => [\n  colorClasses.value,\n  {\n    'progress-bar-animated': props.animated || parentData?.animated.value,\n    'progress-bar-striped':\n      props.striped || parentData?.striped.value || props.animated || parentData?.animated.value,\n  },\n])\n\nconst numberPrecision = useToNumber(() => props.precision)\nconst numberValue = useToNumber(() => props.value)\nconst numberMax = useToNumber(() => props.max ?? NaN)\nconst parentMaxNumber = useToNumber(() => parentData?.max.value ?? NaN)\n\nconst computedLabel = computed(() =>\n  props.showValue || parentData?.showValue.value\n    ? numberValue.value.toFixed(numberPrecision.value)\n    : props.showProgress || parentData?.showProgress.value\n      ? ((numberValue.value * 100) / (numberMax.value || 100)).toFixed(numberPrecision.value)\n      : props.label !== undefined\n        ? props.label\n        : ''\n)\n\nconst computedWidth = computed(() =>\n  parentMaxNumber.value\n    ? `${(numberValue.value * 100) / parentMaxNumber.value}%`\n    : numberMax.value\n      ? `${(numberValue.value * 100) / numberMax.value}%`\n      : typeof props.value === 'string'\n        ? props.value\n        : `${props.value}%`\n)\n</script>\n","<template>\n  <div\n    class=\"progress\"\n    role=\"progressbar\"\n    :style=\"{height: props.height}\"\n    :aria-valuenow=\"props.value\"\n    aria-valuemin=\"0\"\n    :aria-valuemax=\"props.max\"\n  >\n    <slot>\n      <BProgressBar\n        :animated=\"props.animated\"\n        :max=\"props.max\"\n        :precision=\"props.precision\"\n        :show-progress=\"props.showProgress\"\n        :show-value=\"props.showValue\"\n        :striped=\"props.striped\"\n        :value=\"props.value\"\n        :variant=\"props.variant\"\n        :text-variant=\"props.textVariant\"\n        :bg-variant=\"props.bgVariant\"\n      />\n    </slot>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport BProgressBar from './BProgressBar.vue'\nimport type {BProgressProps} from '../../types/ComponentProps'\nimport {provide, toRef} from 'vue'\nimport {progressInjectionKey} from '../../utils/keys'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BProgressSlots} from '../../types'\n\nconst _props = withDefaults(defineProps<BProgressProps>(), {\n  height: undefined,\n  // BProgressBar props\n  animated: undefined,\n  bgVariant: undefined,\n  max: 100,\n  precision: undefined,\n  showProgress: undefined,\n  showValue: undefined,\n  striped: undefined,\n  textVariant: undefined,\n  value: undefined,\n  variant: undefined,\n  // End BProgressBar props\n})\nconst props = useDefaults(_props, 'BProgress')\ndefineSlots<BProgressSlots>()\n\nprovide(progressInjectionKey, {\n  animated: toRef(() => props.animated),\n  max: toRef(() => props.max),\n  showProgress: toRef(() => props.showProgress),\n  showValue: toRef(() => props.showValue),\n  striped: toRef(() => props.striped),\n})\n</script>\n"],"names":["_createElementBlock","_normalizeClass","_renderSlot","_normalizeStyle","_unref","_createVNode","BProgressBar"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAiBA,UAAM,SAAS;AAaf,UAAM,QAAQ,YAAY,QAAQ,cAAc;AAGhD,UAAM,aAAa,OAAO,sBAAsB,IAAI;AAEpD,UAAM,eAAe,uBAAuB,KAAK;AACjD,UAAM,kBAAkB,SAAS,MAAM;AAAA,MACrC,aAAa;AAAA,MACb;AAAA,QACE,yBAAyB,MAAM,YAAY,YAAY,SAAS;AAAA,QAChE,wBACE,MAAM,WAAW,YAAY,QAAQ,SAAS,MAAM,YAAY,YAAY,SAAS;AAAA,MAAA;AAAA,IACzF,CACD;AAED,UAAM,kBAAkB,YAAY,MAAM,MAAM,SAAS;AACzD,UAAM,cAAc,YAAY,MAAM,MAAM,KAAK;AACjD,UAAM,YAAY,YAAY,MAAM,MAAM,OAAO,GAAG;AACpD,UAAM,kBAAkB,YAAY,MAAM,YAAY,IAAI,SAAS,GAAG;AAEtE,UAAM,gBAAgB;AAAA,MAAS,MAC7B,MAAM,aAAa,YAAY,UAAU,QACrC,YAAY,MAAM,QAAQ,gBAAgB,KAAK,IAC/C,MAAM,gBAAgB,YAAY,aAAa,SAC3C,YAAY,QAAQ,OAAQ,UAAU,SAAS,MAAM,QAAQ,gBAAgB,KAAK,IACpF,MAAM,UAAU,SACd,MAAM,QACN;AAAA,IAAA;AAGV,UAAM,gBAAgB;AAAA,MAAS,MAC7B,gBAAgB,QACZ,GAAI,YAAY,QAAQ,MAAO,gBAAgB,KAAK,MACpD,UAAU,QACR,GAAI,YAAY,QAAQ,MAAO,UAAU,KAAK,MAC9C,OAAO,MAAM,UAAU,WACrB,MAAM,QACN,GAAG,MAAM,KAAK;AAAA,IAAA;;0BAlEtBA,mBAIM,OAAA;AAAA,QAJD,OAAKC,eAAA,CAAC,gBAAuB,gBAAA,KAAe,CAAA;AAAA,QAAG,+BAAe,cAAA,OAAa;AAAA,MAAA;QAC9EC,WAEO,4BAFP,MAEO;AAAA,0CADF,cAAA,KAAa,GAAA,CAAA;AAAA,QAAA;;;;;;;;;;;;;;;;;;;;;;AC+BtB,UAAM,SAAS;AAef,UAAM,QAAQ,YAAY,QAAQ,WAAW;AAG7C,YAAQ,sBAAsB;AAAA,MAC5B,UAAU,MAAM,MAAM,MAAM,QAAQ;AAAA,MACpC,KAAK,MAAM,MAAM,MAAM,GAAG;AAAA,MAC1B,cAAc,MAAM,MAAM,MAAM,YAAY;AAAA,MAC5C,WAAW,MAAM,MAAM,MAAM,SAAS;AAAA,MACtC,SAAS,MAAM,MAAM,MAAM,OAAO;AAAA,IAAA,CACnC;;0BAzDCF,mBAsBM,OAAA;AAAA,QArBJ,OAAM;AAAA,QACN,MAAK;AAAA,QACJ,OAAKG,eAAA,EAAA,QAAWC,MAAA,KAAA,EAAM,QAAM;AAAA,QAC5B,iBAAeA,MAAA,KAAA,EAAM;AAAA,QACtB,iBAAc;AAAA,QACb,iBAAeA,MAAA,KAAA,EAAM;AAAA,MAAA;QAEtBF,WAaO,4BAbP,MAaO;AAAA,UAZLG,YAWEC,aAAA;AAAA,YAVC,UAAUF,MAAA,KAAA,EAAM;AAAA,YAChB,KAAKA,MAAA,KAAA,EAAM;AAAA,YACX,WAAWA,MAAA,KAAA,EAAM;AAAA,YACjB,iBAAeA,MAAA,KAAA,EAAM;AAAA,YACrB,cAAYA,MAAA,KAAA,EAAM;AAAA,YAClB,SAASA,MAAA,KAAA,EAAM;AAAA,YACf,OAAOA,MAAA,KAAA,EAAM;AAAA,YACb,SAASA,MAAA,KAAA,EAAM;AAAA,YACf,gBAAcA,MAAA,KAAA,EAAM;AAAA,YACpB,cAAYA,MAAA,KAAA,EAAM;AAAA,UAAA;;;;;;"}