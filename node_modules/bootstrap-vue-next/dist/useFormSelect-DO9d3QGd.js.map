{"version":3,"file":"useFormSelect-DO9d3QGd.js","sources":["../src/components/BFormSelect/BFormSelectOption.vue","../src/composables/useFormSelect.ts"],"sourcesContent":["<template>\n  <option :value=\"props.value\" :disabled=\"props.disabled\" :selected=\"isSelected\">\n    <slot />\n  </option>\n</template>\n\n<script setup lang=\"ts\" generic=\"T\">\nimport type {BFormSelectOptionSlots} from '../../types'\nimport {computed, inject} from 'vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BFormSelectOptionProps} from '../../types/ComponentProps'\nimport {formSelectKey} from '../../utils/keys'\n\nconst _props = withDefaults(defineProps<BFormSelectOptionProps<T>>(), {\n  disabled: false,\n  value: undefined,\n})\nconst props = useDefaults<BFormSelectOptionProps<T>>(_props, 'BFormSelectOption')\ndefineSlots<BFormSelectOptionSlots>()\n\n// Inject the form select context to determine if this option is selected\nconst formSelectContext = inject(formSelectKey, null)\n\nconst isSelected = computed(() => {\n  if (!formSelectContext) return false\n  return formSelectContext.modelValue.value === props.value\n})\n</script>\n","import {computed, type MaybeRefOrGetter, toValue} from 'vue'\nimport {get} from '../utils/object'\nimport type {ComplexSelectOptionRaw, SelectOption} from '../types/SelectTypes'\n\nexport const useFormSelect = (\n  options: MaybeRefOrGetter<ReadonlyArray<unknown>>,\n  props: MaybeRefOrGetter<Record<string, unknown>>\n) => {\n  const isComplex = (option: unknown): option is ComplexSelectOptionRaw =>\n    typeof option === 'object' && option !== null && 'options' in option\n\n  const normalizeOption = (option: unknown): ComplexSelectOptionRaw | SelectOption => {\n    const propsValue = toValue(props)\n\n    if (typeof option === 'string') {\n      return {value: option, text: option}\n    }\n    if (typeof option === 'number') {\n      return {value: option, text: `${option}`}\n    }\n    if (option instanceof Date) {\n      return {value: option, text: option.toLocaleString()}\n    }\n\n    const value: unknown = get(option, propsValue.valueField as string)\n    const text: string = get(option, propsValue.textField as string)\n    const disabled: boolean = get(option, propsValue.disabledField as string)\n\n    const opts: undefined | unknown[] = propsValue.optionsField\n      ? get(option, propsValue.optionsField as string)\n      : undefined\n\n    if (opts !== undefined) {\n      return {\n        label: get(option, propsValue.labelField as string) || text,\n        options: opts,\n      } as ComplexSelectOptionRaw\n    }\n\n    return {\n      ...(typeof option === 'object' ? option : undefined),\n      value,\n      text,\n      disabled,\n    } as SelectOption\n  }\n\n  const normalizeOptions = (\n    opts: ReadonlyArray<unknown>\n  ): (ComplexSelectOptionRaw | SelectOption)[] => opts.map((option) => normalizeOption(option))\n\n  const normalizedOptions = computed(() => normalizeOptions(toValue(options)))\n\n  return {normalizedOptions, isComplex}\n}\n"],"names":["_props","__props","props","useDefaults","formSelectContext","inject","formSelectKey","isSelected","computed","modelValue","value","_createElementBlock","_unref","disabled","selected","_renderSlot","_ctx","$slots","options","normalizeOptions","opts","map","option","propsValue","toValue","text","Date","toLocaleString","get","valueField","textField","disabledField","optionsField","label","labelField","normalizeOption","normalizedOptions","isComplex"],"mappings":"0SAaA,MAAMA,EAASC,EAITC,EAAQC,EAAAA,YAAuCH,EAAQ,qBAIvDI,EAAoBC,EAAAA,OAAOC,EAAAA,cAAe,MAE1CC,EAAaC,EAAAA,SAAS,MACrBJ,GACEA,EAAkBK,WAAWC,QAAUR,EAAMQ,mCAxBpDC,EAAAA,mBAES,SAAA,CAFAD,MAAOE,EAAAA,MAAAV,GAAMQ,MAAQG,SAAUD,EAAAA,MAAAV,GAAMW,SAAWC,SAAUP,EAAAG,QACjEK,aAAQC,EAAAC,OAAA,+DCEiB,CAC3BC,EACAhB,KAEA,MAuCMiB,EACJC,GAC8CA,EAAKC,IAAKC,GAtClC,CAACA,IACvB,MAAMC,EAAaC,EAAAA,QAAQtB,GAE3B,GAAsB,iBAAXoB,EACT,MAAO,CAACZ,MAAOY,EAAQG,KAAMH,GAE/B,GAAsB,iBAAXA,EACT,MAAO,CAACZ,MAAOY,EAAQG,KAAM,GAAGH,KAElC,GAAIA,aAAkBI,KACpB,MAAO,CAAChB,MAAOY,EAAQG,KAAMH,EAAOK,kBAGtC,MAAMjB,EAAiBkB,EAAAA,IAAIN,EAAQC,EAAWM,YACxCJ,EAAeG,EAAAA,IAAIN,EAAQC,EAAWO,WACtCjB,EAAoBe,EAAAA,IAAIN,EAAQC,EAAWQ,eAE3CX,EAA8BG,EAAWS,aAC3CJ,EAAAA,IAAIN,EAAQC,EAAWS,mBACvB,EAEJ,YAAa,IAATZ,EACK,CACLa,MAAOL,EAAAA,IAAIN,EAAQC,EAAWW,aAAyBT,EACvDP,QAASE,GAIN,IACiB,iBAAXE,EAAsBA,OAAS,EAC1CZ,QACAe,OACAZ,aAMiEsB,CAAgBb,IAIrF,MAAO,CAACc,kBAFkB5B,EAAAA,SAAS,IAAMW,EAAiBK,EAAAA,QAAQN,KAEvCmB,UA7CRf,GACC,iBAAXA,GAAkC,OAAXA,GAAmB,YAAaA"}