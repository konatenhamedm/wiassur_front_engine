{"version":3,"file":"BTabs.vue_vue_type_script_setup_true_lang-BkZoZFUN.js","sources":["../src/components/BTabs/BTab.vue","../src/components/BTabs/BTabs.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"props.tag\"\n    :id=\"computedId\"\n    ref=\"_el\"\n    class=\"tab-pane\"\n    :class=\"computedClasses\"\n    role=\"tabpanel\"\n    :aria-labelledby=\"computedButtonId\"\n    v-bind=\"processedAttrs\"\n  >\n    <slot v-if=\"showSlot\" />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, inject, onUnmounted, ref, useAttrs, useTemplateRef, watch} from 'vue'\nimport {useId} from '../../composables/useId'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {TabType} from '../../types/Tab'\nimport type {BTabProps} from '../../types/ComponentProps'\nimport {tabsInjectionKey} from '../../utils/keys'\nimport type {BTabSlots} from '../../types/ComponentSlots'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst _props = withDefaults(defineProps<Omit<BTabProps, 'active'>>(), {\n  buttonId: undefined,\n  disabled: false,\n  id: undefined,\n  lazy: undefined,\n  unmountLazy: undefined,\n  noBody: false,\n  tag: 'div',\n  title: undefined,\n  titleItemClass: undefined,\n  titleLinkAttrs: undefined,\n  titleLinkClass: undefined,\n})\nconst props = useDefaults(_props, 'BTab')\nconst slots = defineSlots<BTabSlots>()\nconst attrs = useAttrs()\n\nconst activeModel = defineModel<Exclude<BTabProps['active'], undefined>>('active', {\n  default: false,\n})\n\nconst parentData = inject(tabsInjectionKey, null)\n\nconst localId = ref(props.id)\nconst internalId = useId('', 'tabpane')\nconst computedId = computed(() => props.id ?? localId.value ?? internalId.value)\nconst computedButtonId = useId(() => props.buttonId, 'tab')\n\nconst lazyRenderCompleted = ref(false)\nconst el = useTemplateRef('_el')\n\nconst processedAttrs = computed(() => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const {onClick: _, ...tabAttrs} = attrs\n  return tabAttrs\n})\n\nfunction updateTab() {\n  if (!parentData) return\n  const newId = parentData.registerTab(\n    computed(\n      () =>\n        ({\n          internalId: internalId.value,\n          id: computedId.value,\n          active: activeModel.value,\n          buttonId: computedButtonId.value,\n          disabled: props.disabled,\n          title: props.title,\n          titleComponent: slots.title,\n          titleItemClass: props.titleItemClass,\n          titleLinkAttrs: props.titleLinkAttrs,\n          titleLinkClass: props.titleLinkClass,\n          onClick: attrs.onClick,\n          el,\n        }) as TabType\n    )\n  )\n  if (newId !== localId.value) {\n    localId.value = newId\n  }\n}\n\nif (parentData) {\n  updateTab()\n  if (activeModel.value) {\n    parentData.activateTab(internalId.value)\n  }\n}\n\nonUnmounted(() => {\n  if (!parentData) return\n  parentData.unregisterTab(internalId.value)\n})\n\nconst isActive = computed(() => parentData?.activeId.value === computedId.value)\nconst show = ref(isActive.value)\n\nconst computedLazy = computed(() => !!(parentData?.lazy.value || props.lazy))\n\nconst computedActive = computed(() => isActive.value && !props.disabled)\nconst showSlot = computed(\n  () =>\n    computedActive.value ||\n    !computedLazy.value ||\n    (computedLazy.value && !props.unmountLazy && lazyRenderCompleted.value)\n)\n\nwatch(showSlot, (shown) => {\n  if (shown && !lazyRenderCompleted.value) lazyRenderCompleted.value = true\n})\n\nwatch(isActive, (active) => {\n  if (active) {\n    activeModel.value = true\n    setTimeout(() => {\n      show.value = true\n    }, 0)\n    return\n  }\n  show.value = false\n  activeModel.value = false\n})\n\nwatch(activeModel, (active) => {\n  if (props.disabled) {\n    activeModel.value = false\n    return\n  }\n  if (!parentData) return\n  if (!active) {\n    if (isActive.value) {\n      parentData.activateTab(undefined)\n    }\n    return\n  }\n  if (!isActive.value) {\n    parentData.activateTab(internalId.value)\n  }\n})\n\nconst computedClasses = computed(() => [\n  {\n    'active': isActive.value,\n    'show': show.value,\n    'card-body': parentData?.card.value && props.noBody === false,\n    'fade': !parentData?.noFade.value,\n  },\n  show.value ? parentData?.activeTabClass.value : parentData?.inactiveTabClass.value,\n  parentData?.tabClass.value,\n])\n\ndefineExpose({\n  activate: () => {\n    activeModel.value = true\n  },\n  deactivate: () => {\n    activeModel.value = false\n  },\n})\n</script>\n","<template>\n  <component :is=\"props.tag\" :id=\"props.id\" class=\"tabs\" :class=\"computedClasses\">\n    <ReusableEmptyTab.define>\n      <div class=\"tab-content\" :class=\"props.contentClass\">\n        <slot />\n        <div\n          v-if=\"showEmpty\"\n          key=\"bv-empty-tab\"\n          class=\"tab-pane active\"\n          :class=\"{'card-body': props.card}\"\n        >\n          <slot name=\"empty\" />\n        </div>\n      </div>\n    </ReusableEmptyTab.define>\n\n    <ReusableEmptyTab.reuse v-if=\"props.end\" />\n    <div\n      :class=\"[\n        props.navWrapperClass,\n        {'card-header': props.card, 'ms-auto': vertical && props.end},\n      ]\"\n    >\n      <ul\n        class=\"nav\"\n        :class=\"[navTabsClasses, props.navClass]\"\n        role=\"tablist\"\n        :aria-orientation=\"props.vertical ? 'vertical' : 'horizontal'\"\n      >\n        <slot name=\"tabs-start\" />\n        <li\n          v-for=\"(tab, idx) in tabs\"\n          :key=\"tab.id ?? tab.internalId\"\n          class=\"nav-item\"\n          :class=\"tab.titleItemClass\"\n          role=\"presentation\"\n        >\n          <button\n            :id=\"tab.buttonId\"\n            class=\"nav-link\"\n            :class=\"[tab.navItemClasses, tab.titleLinkClass]\"\n            role=\"tab\"\n            :aria-controls=\"tab.id\"\n            :aria-selected=\"tab.active\"\n            :disabled=\"tab.disabled\"\n            :tabindex=\"props.noKeyNav ? undefined : tab.active ? undefined : -1\"\n            type=\"button\"\n            v-bind=\"tab.titleLinkAttrs\"\n            @keydown.left.exact=\"!props.vertical && keynav($event, -1)\"\n            @keydown.left.shift=\"!props.vertical && keynav($event, -999)\"\n            @keydown.up.exact=\"props.vertical && keynav($event, -1)\"\n            @keydown.up.shift=\"props.vertical && keynav($event, -999)\"\n            @keydown.right.exact=\"!props.vertical && keynav($event, 1)\"\n            @keydown.right.shift=\"!props.vertical && keynav($event, 999)\"\n            @keydown.down.exact=\"props.vertical && keynav($event, 1)\"\n            @keydown.down.shift=\"props.vertical && keynav($event, 999)\"\n            @keydown.page-up=\"keynav($event, -999)\"\n            @keydown.page-down=\"keynav($event, 999)\"\n            @keydown.home=\"keynav($event, -999)\"\n            @keydown.end=\"keynav($event, 999)\"\n            @click.stop=\"(e) => handleClick(e, idx)\"\n          >\n            <component :is=\"tab.titleComponent\" v-if=\"tab.titleComponent\" />\n            <template v-else>\n              {{ tab.title }}\n            </template>\n          </button>\n        </li>\n        <slot name=\"tabs-end\" />\n      </ul>\n    </div>\n    <ReusableEmptyTab.reuse v-if=\"!props.end\" />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {\n  computed,\n  nextTick,\n  onMounted,\n  provide,\n  type Ref,\n  ref,\n  toRef,\n  unref,\n  type VNode,\n  watch,\n} from 'vue'\nimport {BvEvent} from '../../utils/classes'\nimport {useAlignment} from '../../composables/useAlignment'\nimport {useId} from '../../composables/useId'\nimport {createReusableTemplate} from '@vueuse/core'\nimport type {TabType} from '../../types/Tab'\nimport type {BTabsProps} from '../../types/ComponentProps'\nimport {tabsInjectionKey} from '../../utils/keys'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {sortSlotElementsByPosition} from '../../utils/dom'\nimport {flattenFragments} from '../../utils/flattenFragments'\nimport BTab from './BTab.vue'\nimport type {BTabsEmits, BTabsSlots} from '../../types'\n\nconst _props = withDefaults(defineProps<Omit<BTabsProps, 'modelValue' | 'activeIndex'>>(), {\n  activeNavItemClass: undefined,\n  activeTabClass: undefined,\n  align: undefined,\n  card: false,\n  contentClass: undefined,\n  end: false,\n  fill: false,\n  id: undefined,\n  inactiveNavItemClass: undefined,\n  inactiveTabClass: undefined,\n  justified: false,\n  lazy: false,\n  navClass: undefined,\n  navItemClass: undefined,\n  navWrapperClass: undefined,\n  noFade: false,\n  noKeyNav: false,\n  noNavStyle: false,\n  pills: false,\n  small: false,\n  tag: 'div',\n  tabClass: undefined,\n  underline: false,\n  vertical: false,\n})\nconst props = useDefaults(_props, 'BTabs')\nconst emit = defineEmits<BTabsEmits>()\nconst slots = defineSlots<BTabsSlots>()\n\nconst activeIndex = defineModel<Exclude<BTabsProps['index'], undefined>>('index', {\n  default: -1,\n})\nconst activeId = defineModel<BTabsProps['modelValue']>({\n  default: undefined,\n})\n\nconst ReusableEmptyTab = createReusableTemplate()\n\nconst tabsInternal = ref<Ref<TabType>[]>([])\n\nconst tabElementsArray = ref<VNode[]>([])\n\nconst isChildActive = ref(false)\nconst initialIds = ref<string[]>([])\n\nconst updateTabElementsArray = () => {\n  const tabElements = flattenFragments(slots.default?.({}) ?? [])\n  tabElementsArray.value = (Array.isArray(tabElements) ? tabElements : [tabElements]).filter(\n    (tab) => tab.type === BTab\n  )\n  // only get the ids once in setup context\n  if (initialIds.value.length === 0) {\n    // we need to get the ids of the tabs before they are registered. After that we use the internalId for the tabpane\n    initialIds.value = tabElementsArray.value.map((tab) =>\n      unref(useId(() => tab.props?.id, 'tabpane'))\n    )\n  }\n  isChildActive.value = tabElementsArray.value.some(\n    (tab) => tab.props?.active !== undefined && tab.props?.active !== false\n  )\n}\nupdateTabElementsArray()\n\nwatch(\n  () => slots.default?.({}),\n  () => {\n    updateTabElementsArray()\n    nextTick(() => {\n      sortTabs()\n    })\n  }\n)\n\nconst tabs = computed(() => {\n  if (tabsInternal.value.length === 0) {\n    // fail back on the slot elements, the children haven't been registered yet\n    const _activeIndex = tabElementsArray.value.findIndex(\n      (tab) =>\n        (tab.props?.active !== undefined &&\n          (tab.props.disabled === false || tab.props.disabled === undefined)) ||\n        (activeId.value && tab.props?.id === activeId.value)\n    )\n    return tabElementsArray.value.map((tab, index) => {\n      const active =\n        _activeIndex !== -1\n          ? index === _activeIndex\n          : activeIndex.value > -1\n            ? index === activeIndex.value\n            : index === 0\n      return {\n        id: tab.props?.id ?? initialIds.value[index],\n        internalId: `premount-${index}`, // temporary id for the tab\n        buttonId: tab.props?.buttonId,\n        disabled: tab.props?.disabled,\n        title: tab.props?.title,\n        titleComponent: (tab.children as {title: unknown})?.title,\n        titleItemClass: tab.props?.titleItemClass,\n        titleLinkAttrs: tab.props?.titleLinkAttrs,\n        titleLinkClass: tab.props?.titleLinkClass,\n        onClick: tab.props?.onClick,\n        active,\n        navItemClasses: [\n          {\n            active,\n            disabled: !(tab.props?.disabled === false || tab.props?.disabled === undefined),\n          },\n          active ? props.activeNavItemClass : props.inactiveNavItemClass,\n          props.navItemClass,\n        ],\n      }\n    })\n  }\n  return tabsInternal.value.map((_tab) => {\n    const tab = unref(_tab)\n    const active = tab.id === activeId.value\n\n    return {\n      ...tab,\n      active,\n      navItemClasses: [\n        {\n          active,\n          disabled: tab.disabled,\n        },\n        active ? props.activeNavItemClass : props.inactiveNavItemClass,\n        props.navItemClass,\n      ],\n    }\n  })\n})\n\nlet initialized = false\nlet updateInitialActiveIndex = false\nlet updateInitialActiveId = false\nif (activeIndex.value === -1 && activeId.value) {\n  if (tabs.value.findIndex((t) => t.id === activeId.value) !== -1) {\n    activeIndex.value = tabs.value.findIndex((t) => t.id === activeId.value)\n  } else {\n    updateInitialActiveIndex = true\n  }\n} else if (activeIndex.value > -1 && !activeId.value) {\n  if (tabs.value[activeIndex.value]?.id) {\n    activeId.value = tabs.value[activeIndex.value]?.id\n  } else {\n    updateInitialActiveId = true\n  }\n} else if (activeIndex.value === -1 && !activeId.value && !isChildActive.value) {\n  activeIndex.value = tabs.value.findIndex((t) => t.disabled === undefined || t.disabled === false)\n  activeId.value = tabs.value[activeIndex.value]?.id\n} else if (activeIndex.value === -1 && !activeId.value && isChildActive.value) {\n  activeIndex.value = tabs.value.findIndex(\n    (t) =>\n      t.active !== undefined &&\n      t.active !== false &&\n      (t.disabled === undefined || t.disabled === false)\n  )\n  activeId.value = tabs.value[activeIndex.value]?.id\n}\n\nfunction updateInitialIndexAndId() {\n  // we get the computedIds after registering the tabs\n  if (updateInitialActiveIndex) {\n    const index = tabs.value.findIndex((t) => t.id === activeId.value)\n    if (index !== -1) {\n      nextTick(() => {\n        activeIndex.value = index\n        updateInitialActiveIndex = false\n      })\n    }\n  }\n  if (updateInitialActiveId) {\n    if (activeIndex.value > -1 && tabs.value[activeIndex.value]?.id) {\n      nextTick(() => {\n        activeId.value = tabs.value[activeIndex.value]?.id\n        updateInitialActiveId = false\n      })\n    }\n  }\n}\n\nupdateInitialIndexAndId()\n\nconst showEmpty = computed(() => !(tabs?.value && tabs.value.length > 0))\n\nconst computedClasses = computed(() => ({\n  'd-flex': props.vertical,\n  'align-items-start': props.vertical,\n}))\n\nconst alignment = useAlignment(() => props.align)\n\nconst navTabsClasses = computed(() => ({\n  'nav-pills': props.pills,\n  'nav-underline': props.underline,\n  'flex-column me-3': props.vertical,\n  [alignment.value]: props.align !== undefined,\n  'nav-fill': props.fill,\n  'card-header-tabs': props.card && !props.pills && !props.underline,\n  'card-header-pills': props.card && props.pills,\n  'nav-justified': props.justified,\n  'nav-tabs': !props.noNavStyle && !props.pills && !props.underline,\n  'small': props.small,\n}))\n\nconst handleClick = (event: Readonly<MouseEvent>, index: number) => {\n  if (\n    index >= 0 &&\n    !tabs.value[index].disabled &&\n    tabs.value[index]?.onClick &&\n    typeof tabs.value[index].onClick === 'function'\n  ) {\n    tabs.value[index].onClick?.(event)\n    if (event.defaultPrevented) {\n      document.getElementById(tabs.value[index].buttonId)?.blur()\n      return\n    }\n  }\n  activeIndex.value = index\n}\n\nconst keynav = (e: Event, direction: number) => {\n  if (tabs.value.length <= 0 || props.noKeyNav) return\n  e.preventDefault()\n  e.stopPropagation()\n  activeIndex.value = nextIndex(activeIndex.value + direction, direction)\n  nextTick(() => {\n    if (activeIndex.value >= 0) {\n      document.getElementById(tabs.value[activeIndex.value]?.buttonId)?.focus()\n    }\n  })\n}\n\nconst nextIndex = (start: number, direction: number) => {\n  let index = start\n  let minIdx = -1\n  let maxIdx = -1\n\n  for (let i = 0; i < tabs.value.length; i++) {\n    if (!tabs.value[i].disabled) {\n      if (minIdx === -1) minIdx = i\n      maxIdx = i\n    }\n  }\n\n  while (index >= minIdx && index <= maxIdx && tabs.value[index].disabled) {\n    index += direction\n  }\n\n  if (index < minIdx) index = minIdx\n  if (index > maxIdx) index = maxIdx\n\n  return index\n}\n\nlet previousIndex: number | undefined\nlet isReverting = false\nwatch(activeIndex, (newValue, oldValue) => {\n  // Early exit if there are no tabs or all tabs are disabled\n  if (tabs.value.length <= 0 || tabs.value.filter((t) => !t.disabled).length <= 0) {\n    return\n  }\n\n  // If we're reverting due to a prevented event, don't process further\n  if (isReverting) {\n    isReverting = false\n    return\n  }\n  // Calculate the next valid index\n  const index = nextIndex(newValue, newValue > oldValue ? 1 : -1)\n  if (index !== newValue) {\n    // If the index is not the same as the new value, set the previous index to the old value\n    // this is to prevent the event from being emitted twice\n    previousIndex = oldValue\n    activeIndex.value = index\n    return\n  }\n  // Emit the activate-tab event\n  const tabEvent = new BvEvent('activate-tab', {cancelable: true})\n  emit(\n    'activate-tab',\n    tabs.value[index]?.id,\n    tabs.value[previousIndex ?? oldValue]?.id,\n    index,\n    previousIndex ?? oldValue,\n    tabEvent\n  )\n  // If the event is prevented, revert to the previous index\n  if (tabEvent.defaultPrevented) {\n    isReverting = true\n    const prev = previousIndex ?? oldValue ?? nextIndex(0, 1)\n    previousIndex = undefined\n    // Update the active id this will also trigger the activeId watch which will update the activeIndex\n    // this is to make sure we handle case that starts with id change.\n    if (activeId.value !== tabs.value[prev]?.id) {\n      activeId.value = tabs.value[prev]?.id\n    }\n    nextTick(() => {\n      if (prev >= 0) {\n        document.getElementById(tabs.value[prev]?.buttonId)?.focus()\n      }\n    })\n    return\n  }\n\n  // Update the active id\n  if (activeId.value !== tabs.value[index]?.id) {\n    activeId.value = tabs.value[index]?.id\n  }\n  previousIndex = undefined\n})\n\nwatch(activeId, (newValue, oldValue) => {\n  if (tabs.value.length <= 0 || tabs.value.filter((t) => !t.disabled).length <= 0) {\n    return\n  }\n  const index = tabs.value.findIndex((t) => t.id === newValue)\n  // If the new tab is the same as the current tab, do nothing\n  if (index === activeIndex.value) return\n  const oldIndex = tabs.value.findIndex((t) => t.id === oldValue)\n  // If the new tab is disabled, find the next enabled tab\n  if (tabs.value[index]?.disabled) {\n    // activeIndex watcher will update the activeId to the next enabled tab\n    activeIndex.value = nextIndex(index, index > oldIndex ? 1 : -1)\n    return\n  }\n  // If the new tab is not found, find the first enabled tab\n  if (index === -1) {\n    // activeIndex watcher will update the activeId to the first enabled tab\n    activeIndex.value = nextIndex(0, 1)\n    nextTick(() => {\n      activeId.value = tabs.value[activeIndex.value]?.id\n    })\n    return\n  }\n  // change to the next tab\n  activeIndex.value = index\n})\n\nconst registerTab = (tab: Ref<TabType>) => {\n  const idx = tabsInternal.value.findIndex((t) => t.value.internalId === tab.value.internalId)\n  if (idx === -1) {\n    tabsInternal.value.push(tab)\n    if (initialized) {\n      nextTick(() => {\n        sortTabs()\n      })\n    }\n  } else {\n    tabsInternal.value[idx] = tab\n    if (initialized) {\n      // sort just in case the tab was moved\n      sortTabs()\n    }\n  }\n  const idx2 = tabsInternal.value.findIndex((t) => t.value.internalId === tab.value.internalId)\n  return tab.value.id ?? (!initialized ? initialIds.value[idx2] : tab.value.internalId)\n}\n\nonMounted(() => {\n  updateInitialIndexAndId()\n  sortTabs()\n  initialized = true\n})\n\nconst sortTabs = () => {\n  tabsInternal.value.sort((a, b) => sortSlotElementsByPosition(a.value.el.value, b.value.el.value))\n  if (\n    activeId.value &&\n    activeIndex.value !== tabs.value.findIndex((t) => t.id === activeId.value)\n  ) {\n    activeIndex.value = tabs.value.findIndex((t) => t.id === activeId.value)\n  }\n}\n\nconst unregisterTab = (id: string) => {\n  tabsInternal.value = tabsInternal.value.filter((t) => t.value.internalId !== id)\n}\n\nprovide(tabsInjectionKey, {\n  lazy: toRef(() => props.lazy),\n  card: toRef(() => props.card),\n  noFade: toRef(() => props.noFade),\n  activeTabClass: toRef(() => props.activeTabClass),\n  inactiveTabClass: toRef(() => props.inactiveTabClass),\n  tabClass: toRef(() => props.tabClass),\n  registerTab,\n  unregisterTab,\n  activeId,\n  activateTab: (internalId) => {\n    const idx = tabs.value.findIndex((t) => t.internalId === internalId)\n    if (internalId === undefined || idx === -1) {\n      activeIndex.value = nextIndex(0, 1)\n      return\n    }\n    activeIndex.value = idx\n  },\n})\n</script>\n"],"names":["_props","__props","props","useDefaults","slots","_useSlots","attrs","useAttrs","activeModel","_useModel","parentData","inject","tabsInjectionKey","localId","ref","id","internalId","useId","computedId","computed","value","computedButtonId","buttonId","lazyRenderCompleted","el","useTemplateRef","processedAttrs","onClick","_","tabAttrs","newId","registerTab","active","disabled","title","titleComponent","titleItemClass","titleLinkAttrs","titleLinkClass","updateTab","activateTab","onUnmounted","unregisterTab","isActive","activeId","show","computedLazy","lazy","computedActive","showSlot","unmountLazy","watch","shown","setTimeout","computedClasses","card","noBody","fade","noFade","activeTabClass","inactiveTabClass","tabClass","__expose","activate","deactivate","_openBlock","_createBlock","_resolveDynamicComponent","_unref","tag","_mergeProps","class","role","_renderSlot","_ctx","$slots","key","emit","__emit","activeIndex","ReusableEmptyTab","createReusableTemplate","tabsInternal","tabElementsArray","isChildActive","initialIds","updateTabElementsArray","tabElements","flattenFragments","default","Array","isArray","filter","tab","type","BTab","length","map","unref","some","nextTick","sortTabs","tabs","_activeIndex","findIndex","index","children","navItemClasses","activeNavItemClass","inactiveNavItemClass","navItemClass","_tab","initialized","updateInitialActiveIndex","updateInitialActiveId","updateInitialIndexAndId","t","showEmpty","vertical","alignment","useAlignment","align","navTabsClasses","pills","underline","fill","justified","noNavStyle","small","keynav","e","direction","noKeyNav","preventDefault","stopPropagation","nextIndex","document","getElementById","focus","start","minIdx","maxIdx","i","previousIndex","isReverting","newValue","oldValue","tabEvent","BvEvent","cancelable","defaultPrevented","prev","oldIndex","onMounted","sort","a","b","sortSlotElementsByPosition","provide","toRef","idx","push","idx2","_normalizeClass","_createVNode","define","_createElementVNode","contentClass","_createElementBlock","end","reuse","navWrapperClass","navClass","_Fragment","_renderList","tabindex","ref_for","onKeydown","_cache","_withKeys","_withModifiers","$event","handleClick","event","blur","_createTextVNode","_toDisplayString"],"mappings":"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"}