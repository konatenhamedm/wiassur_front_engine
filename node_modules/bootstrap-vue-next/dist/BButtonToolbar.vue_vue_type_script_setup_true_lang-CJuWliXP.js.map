{"version":3,"file":"BButtonToolbar.vue_vue_type_script_setup_true_lang-CJuWliXP.js","sources":["../src/components/BButton/BButtonGroup.vue","../src/components/BButton/BButtonToolbar.vue"],"sourcesContent":["<template>\n  <component :is=\"props.tag\" :class=\"computedClasses\" role=\"group\" :aria-label=\"props.ariaLabel\">\n    <slot />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BButtonGroupProps} from '../../types/ComponentProps'\nimport {computed, provide} from 'vue'\nimport {buttonGroupKey} from '../../utils/keys'\nimport type {BButtonGroupSlots} from '../../types'\n\nprovide(buttonGroupKey, true)\n\nconst _props = withDefaults(defineProps<BButtonGroupProps>(), {\n  ariaLabel: 'Group',\n  size: 'md',\n  tag: 'div',\n  vertical: false,\n})\nconst props = useDefaults(_props, 'BButtonGroup')\ndefineSlots<BButtonGroupSlots>()\n\nconst computedClasses = computed(() => ({\n  'btn-group': !props.vertical,\n  [`btn-group-${props.size}`]: props.size !== 'md',\n  'btn-group-vertical': props.vertical,\n}))\n</script>\n","<template>\n  <div\n    ref=\"toolbarRef\"\n    :class=\"computedClasses\"\n    class=\"btn-toolbar\"\n    :role=\"props.role\"\n    :aria-label=\"props.ariaLabel\"\n    @keydown=\"handleKeyNav\"\n  >\n    <slot />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type {BButtonToolbarSlots} from '../../types'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BButtonToolbarProps} from '../../types/ComponentProps'\nimport {computed, nextTick, useTemplateRef} from 'vue'\nimport {CODE_DOWN, CODE_END, CODE_HOME, CODE_LEFT, CODE_RIGHT, CODE_UP} from '../../utils/constants'\nimport {stopEvent} from '../../utils/event'\nimport {getActiveElement} from '../../utils/dom'\n\nconst _props = withDefaults(defineProps<BButtonToolbarProps>(), {\n  ariaLabel: 'Group',\n  justify: false,\n  keyNav: false,\n  role: 'toolbar',\n})\nconst props = useDefaults(_props, 'BButtonToolbar')\ndefineSlots<BButtonToolbarSlots>()\n\nconst toolbarRef = useTemplateRef<HTMLElement>('toolbarRef')\n\nconst computedClasses = computed(() => ({\n  'justify-content-between': props.justify,\n}))\n\n// Get all focusable elements within the toolbar\nconst getFocusableElements = (): HTMLElement[] => {\n  if (!toolbarRef.value) return []\n\n  const selector =\n    'button:not(:disabled), [href]:not(:disabled), input:not(:disabled), select:not(:disabled), textarea:not(:disabled), [tabindex]:not([tabindex=\"-1\"]):not(:disabled)'\n  const elements = Array.from(toolbarRef.value.querySelectorAll(selector)) as HTMLElement[]\n\n  // Filter out elements that are not visible or have display:none\n  return elements.filter((el) => {\n    const style = window.getComputedStyle(el)\n    return style.display !== 'none' && style.visibility !== 'hidden'\n  })\n}\n\nconst isDisabled = (element: HTMLElement): boolean =>\n  element.hasAttribute('disabled') || element.getAttribute('aria-disabled') === 'true'\n\nconst focusFirst = () => {\n  nextTick(() => {\n    const elements = getFocusableElements()\n    const firstEnabled = elements.find((el) => !isDisabled(el))\n    firstEnabled?.focus()\n  })\n}\n\nconst focusLast = () => {\n  nextTick(() => {\n    const elements = getFocusableElements()\n    const lastEnabled = elements.reverse().find((el) => !isDisabled(el))\n    lastEnabled?.focus()\n  })\n}\n\nconst focusPrev = () => {\n  nextTick(() => {\n    const elements = getFocusableElements()\n    const activeElement = getActiveElement() as HTMLElement\n    const currentIndex = elements.indexOf(activeElement)\n\n    if (currentIndex > 0) {\n      // Look backwards for the first non-disabled element\n      for (let i = currentIndex - 1; i >= 0; i--) {\n        if (!isDisabled(elements[i])) {\n          elements[i]?.focus()\n          break\n        }\n      }\n    }\n  })\n}\n\nconst focusNext = () => {\n  nextTick(() => {\n    const elements = getFocusableElements()\n    const activeElement = getActiveElement() as HTMLElement\n    const currentIndex = elements.indexOf(activeElement)\n\n    if (currentIndex < elements.length - 1) {\n      // Look forwards for the first non-disabled element\n      for (let i = currentIndex + 1; i < elements.length; i++) {\n        if (!isDisabled(elements[i])) {\n          elements[i]?.focus()\n          break\n        }\n      }\n    }\n  })\n}\n\nconst handleKeyNav = (event: KeyboardEvent) => {\n  if (!props.keyNav) return\n\n  const {code, shiftKey} = event\n\n  if (code === CODE_LEFT || code === CODE_UP) {\n    stopEvent(event)\n    if (shiftKey) {\n      focusFirst()\n    } else {\n      focusPrev()\n    }\n  } else if (code === CODE_RIGHT || code === CODE_DOWN) {\n    stopEvent(event)\n    if (shiftKey) {\n      focusLast()\n    } else {\n      focusNext()\n    }\n  } else if (code === CODE_HOME) {\n    stopEvent(event)\n    focusFirst()\n  } else if (code === CODE_END) {\n    stopEvent(event)\n    focusLast()\n  }\n}\n</script>\n"],"names":["provide","buttonGroupKey","_props","__props","props","useDefaults","computedClasses","computed","vertical","size","_createBlock","_resolveDynamicComponent","_unref","tag","class","value","role","ariaLabel","_renderSlot","_ctx","$slots","toolbarRef","useTemplateRef","justify","getFocusableElements","Array","from","querySelectorAll","filter","el","style","window","getComputedStyle","display","visibility","isDisabled","element","hasAttribute","getAttribute","focusFirst","nextTick","firstEnabled","find","focus","focusLast","lastEnabled","reverse","handleKeyNav","event","keyNav","code","shiftKey","CODE_LEFT","CODE_UP","stopEvent","elements","activeElement","getActiveElement","currentIndex","indexOf","i","CODE_RIGHT","CODE_DOWN","length","CODE_HOME","CODE_END","_createElementBlock","ref","_normalizeClass","onKeydown"],"mappings":"mXAaAA,EAAAA,QAAQC,EAAAA,gBAAgB,GAExB,MAAMC,EAASC,EAMTC,EAAQC,EAAAA,YAAYH,EAAQ,gBAG5BI,EAAkBC,EAAAA,SAAS,KAAA,CAC/B,aAAcH,EAAMI,SACpB,CAAC,aAAaJ,EAAMK,QAAwB,OAAfL,EAAMK,KACnC,qBAAsBL,EAAMI,wCA1B5BE,cAEYC,EAAAA,wBAFIC,EAAAA,MAAAR,GAAMS,KAAG,CAAGC,uBAAOR,EAAAS,OAAiBC,KAAK,QAAS,aAAYJ,EAAAA,MAAAR,GAAMa,8BAClF,IAAQ,CAARC,aAAQC,EAAAC,OAAA,8PCoBZ,MAAMlB,EAASC,EAMTC,EAAQC,EAAAA,YAAYH,EAAQ,kBAG5BmB,EAAaC,EAAAA,eAA4B,cAEzChB,EAAkBC,EAAAA,SAAS,KAAA,CAC/B,0BAA2BH,EAAMmB,WAI7BC,EAAuB,KAC3B,IAAKH,EAAWN,MAAO,MAAO,GAO9B,OAHiBU,MAAMC,KAAKL,EAAWN,MAAMY,iBAD3C,uKAIcC,OAAQC,IACtB,MAAMC,EAAQC,OAAOC,iBAAiBH,GACtC,MAAyB,SAAlBC,EAAMG,SAA2C,WAArBH,EAAMI,cAIvCC,EAAcC,GAClBA,EAAQC,aAAa,aAAyD,SAA1CD,EAAQE,aAAa,iBAErDC,EAAa,KACjBC,EAAAA,SAAS,KACP,MACMC,EADWjB,IACakB,KAAMb,IAAQM,EAAWN,IACvDY,GAAcE,WAIZC,EAAY,KAChBJ,EAAAA,SAAS,KACP,MACMK,EADWrB,IACYsB,UAAUJ,KAAMb,IAAQM,EAAWN,IAChEgB,GAAaF,WAwCXI,EAAgBC,IACpB,IAAK5C,EAAM6C,OAAQ,OAEnB,MAAMC,KAACA,EAAAC,SAAMA,GAAYH,EAErBE,IAASE,EAAAA,WAAaF,IAASG,WACjCC,EAAAA,UAAUN,GACNG,EACFZ,IA3CJC,EAAAA,SAAS,KACP,MAAMe,EAAW/B,IACXgC,EAAgBC,EAAAA,mBAChBC,EAAeH,EAASI,QAAQH,GAEtC,GAAIE,EAAe,EAEjB,IAAA,IAASE,EAAIF,EAAe,EAAGE,GAAK,EAAGA,IACrC,IAAKzB,EAAWoB,EAASK,IAAK,CAC5BL,EAASK,IAAIjB,QACb,KACF,KAoCKO,IAASW,cAAcX,IAASY,EAAAA,WACzCR,EAAAA,UAAUN,GACNG,EACFP,IAhCJJ,EAAAA,SAAS,KACP,MAAMe,EAAW/B,IACXgC,EAAgBC,EAAAA,mBAChBC,EAAeH,EAASI,QAAQH,GAEtC,GAAIE,EAAeH,EAASQ,OAAS,EAEnC,IAAA,IAASH,EAAIF,EAAe,EAAGE,EAAIL,EAASQ,OAAQH,IAClD,IAAKzB,EAAWoB,EAASK,IAAK,CAC5BL,EAASK,IAAIjB,QACb,KACF,KAyBKO,IAASc,aAClBV,EAAAA,UAAUN,GACVT,KACSW,IAASe,aAClBX,EAAAA,UAAUN,GACVJ,kCAlIFsB,EAAAA,mBASM,MAAA,SARA,aAAJC,IAAI9C,EACHP,MAAKsD,EAAAA,eAAA,CAAE9D,EAAAS,MACF,gBACLC,KAAMJ,EAAAA,MAAAR,GAAMY,KACZ,aAAYJ,EAAAA,MAAAR,GAAMa,UAClBoD,UAAStB,IAEV7B,aAAQC,EAAAC,OAAA"}