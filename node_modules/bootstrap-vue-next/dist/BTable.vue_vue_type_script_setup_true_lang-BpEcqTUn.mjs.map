{"version":3,"file":"BTable.vue_vue_type_script_setup_true_lang-BpEcqTUn.mjs","sources":["../src/utils/formatItem.ts","../src/types/TableTypes.ts","../src/components/BTable/BTbody.vue","../src/components/BTable/BTd.vue","../src/components/BTable/BTfoot.vue","../src/components/BTable/BTh.vue","../src/components/BTable/BThead.vue","../src/components/BTable/BTr.vue","../src/utils/filterEvent.ts","../src/components/BTable/BTableLite.vue","../src/components/SortIcon.vue","../src/components/BTable/BTable.vue"],"sourcesContent":["import type {TableFieldFormatter} from '../types/TableTypes'\nimport {get} from './object'\n\nexport const formatItem = <T>(\n  item: T,\n  // Weakly type fieldKey because it can be a nested string, such as 'foo.bar.baz'\n  fieldKey: string,\n  formatter?: TableFieldFormatter<T>\n) => {\n  const val = get(item, fieldKey)\n  return formatter && typeof formatter === 'function' ? formatter(val, fieldKey, item) : val\n}\n","import type {StyleValue} from 'vue'\nimport type {ColorVariant} from './ColorTypes'\nimport type {MaybePromise} from './MaybePromise'\nimport type {LiteralUnion} from './LiteralUnion'\nimport type {AttrsValue, ClassValue} from './AnyValuedAttributes'\n\nexport type TableRowEvent<T> = [item: T, index: number, event: MouseEvent]\n\nexport type TableItem<T = Record<string, unknown>> = T & {\n  _rowVariant?: ColorVariant | null\n  _cellVariants?: Partial<Record<keyof T, ColorVariant>>\n  _showDetails?: boolean\n}\n\nexport const isTableItem = (value: unknown): value is TableItem =>\n  typeof value === 'object' && value !== null\n\n/**\n * `undefined` means it's not sorting this column. It is set to undefined rather than removed from the array because\n * we don't want to make updates that remove the comparer function from the value.\n */\nexport type BTableSortByOrder = 'desc' | 'asc' | undefined\n\n/**\n * Initial sort direction for table fields. Includes 'last' option to maintain the direction of the previously sorted column.\n */\nexport type BTableInitialSortDirection = 'desc' | 'asc' | 'last'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type BTableSortByComparerFunction<T = any> = (a: T, b: T, key: string) => number\n\nexport type BTableSortBy = {\n  order: BTableSortByOrder\n  key: string\n}\n\nexport type BTableProviderContext = {\n  sortBy: BTableSortBy[] | undefined\n  filter: string | undefined\n  currentPage: number\n  perPage: number\n}\n\nexport type BTableProvider<T> = (\n  context: Readonly<BTableProviderContext>\n) => MaybePromise<T[] | undefined>\n\nexport type TableFieldFormatter<T> = (value: unknown, key: string, item: T) => string\n\nexport type TableRowType = 'row' | 'row-details' | 'row-top' | 'row-bottom' | 'table-busy'\nexport type TableRowThead = 'top' | 'bottom'\n\nexport type TableStrictClassValue = string | unknown[] | Record<string, boolean>\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type TableField<T = any> = {\n  class?: ClassValue\n  filterByFormatted?: boolean | TableFieldFormatter<T>\n  formatter?: TableFieldFormatter<T>\n  isRowHeader?: boolean\n  key: LiteralUnion<keyof T>\n  headerTitle?: string\n  headerAbbr?: string\n  label?: string\n  sortable?: boolean\n  sortDirection?: string\n  sortByFormatted?: boolean | TableFieldFormatter<T>\n  sortCompare?: BTableSortByComparerFunction<T>\n  stickyColumn?: boolean\n  scope?: TableThScope\n  initialSortDirection?: BTableInitialSortDirection\n  tdClass?:\n    | TableStrictClassValue\n    | ((value: unknown, key: string, item: T) => TableStrictClassValue)\n  thClass?: ClassValue\n  thStyle?: StyleValue\n  tdAttr?: AttrsValue | ((value: unknown, key: string, item: T) => AttrsValue)\n  thAttr?:\n    | AttrsValue\n    | ((value: unknown, key: string, item: T | null, type: TableRowThead) => AttrsValue)\n  variant?: ColorVariant | null\n}\n\nexport type TableFieldRaw<T = unknown> = T extends object\n  ? LiteralUnion<keyof T> | TableField<T>\n  : string | TableField\n\nexport const isTableField = <T>(value: unknown): value is TableField<T> =>\n  typeof value === 'object' && value !== null && 'key' in value\n\nexport const isTableFieldRaw = <T>(value: unknown): value is TableFieldRaw<T> =>\n  typeof value === 'string' || isTableField(value)\n\nexport type NoProviderTypes = 'paging' | 'sorting' | 'filtering'\n\nexport type TableThScope = 'row' | 'col' | 'rowgroup' | 'colgroup'\n","<template>\n  <tbody :class=\"computedClasses\">\n    <slot />\n  </tbody>\n</template>\n\n<script setup lang=\"ts\">\nimport type {BTbodySlots} from '../../types'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BTbodyProps} from '../../types/ComponentProps'\nimport {computed} from 'vue'\n\nconst _props = withDefaults(defineProps<BTbodyProps>(), {\n  variant: null,\n})\nconst props = useDefaults(_props, 'BTbody')\ndefineSlots<BTbodySlots>()\n\nconst computedClasses = computed(() => ({\n  [`thead-${props.variant}`]: props.variant !== null,\n}))\n</script>\n","<template>\n  <td\n    :class=\"computedClasses\"\n    :colspan=\"props.colspan\"\n    :rowspan=\"props.rowspan\"\n    :data-label=\"props.stackedHeading\"\n  >\n    <div v-if=\"props.stackedHeading\">\n      <slot />\n    </div>\n    <slot v-else />\n  </td>\n</template>\n\n<script setup lang=\"ts\">\nimport type {BTdSlots} from '../../types'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BTdProps} from '../../types/ComponentProps'\nimport {computed} from 'vue'\n\nconst _props = withDefaults(defineProps<BTdProps>(), {\n  colspan: undefined,\n  rowspan: undefined,\n  stackedHeading: undefined,\n  stickyColumn: false,\n  variant: null,\n})\nconst props = useDefaults(_props, 'BTd')\ndefineSlots<BTdSlots>()\n\nconst computedClasses = computed(() => ({\n  [`table-${props.variant}`]: props.variant !== null,\n  'b-table-sticky-column': props.stickyColumn,\n  'table-b-table-default': props.stickyColumn && props.variant === null,\n}))\n</script>\n","<template>\n  <tfoot :class=\"computedClasses\">\n    <slot />\n  </tfoot>\n</template>\n\n<script setup lang=\"ts\">\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BTfootProps} from '../../types/ComponentProps'\nimport {computed} from 'vue'\nimport type {BTfootSlots} from '../../types/ComponentSlots'\n\nconst _props = withDefaults(defineProps<BTfootProps>(), {\n  variant: null,\n})\nconst props = useDefaults(_props, 'BTfoot')\ndefineSlots<BTfootSlots>()\n\nconst computedClasses = computed(() => ({\n  [`table-${props.variant}`]: props.variant !== null,\n}))\n</script>\n","<template>\n  <th\n    :scope=\"localScope\"\n    :class=\"computedClasses\"\n    :colspan=\"props.colspan\"\n    :rowspan=\"props.rowspan\"\n    :data-label=\"props.stackedHeading\"\n  >\n    <div v-if=\"props.stackedHeading !== undefined\">\n      <slot />\n    </div>\n    <slot v-else />\n  </th>\n</template>\n\n<script setup lang=\"ts\">\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BThProps} from '../../types/ComponentProps'\nimport {computed} from 'vue'\nimport type {BThSlots} from '../../types/ComponentSlots'\n\nconst _props = withDefaults(defineProps<BThProps>(), {\n  colspan: undefined,\n  rowspan: undefined,\n  stackedHeading: undefined,\n  stickyColumn: false,\n  variant: null,\n  scope: undefined,\n})\nconst props = useDefaults(_props, 'BTh')\ndefineSlots<BThSlots>()\n\nconst computedClasses = computed(() => ({\n  [`table-${props.variant}`]: props.variant !== null,\n  'b-table-sticky-column': props.stickyColumn,\n  'table-b-table-default': props.stickyColumn && props.variant === null,\n}))\n\nconst localScope = computed(() =>\n  props.scope ? props.scope : props.colspan ? 'colgroup' : props.rowspan ? 'rowgroup' : 'col'\n)\n</script>\n","<template>\n  <thead :class=\"computedClasses\">\n    <slot />\n  </thead>\n</template>\n\n<script setup lang=\"ts\">\nimport type {BTheadSlots} from '../../types'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BTheadProps} from '../../types/ComponentProps'\nimport {computed} from 'vue'\n\nconst _props = withDefaults(defineProps<BTheadProps>(), {\n  variant: null,\n})\nconst props = useDefaults(_props, 'BThead')\ndefineSlots<BTheadSlots>()\n\nconst computedClasses = computed(() => ({\n  [`table-${props.variant}`]: props.variant !== null,\n}))\n</script>\n","<template>\n  <tr :class=\"computedClasses\">\n    <slot />\n  </tr>\n</template>\n\n<script setup lang=\"ts\">\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BTrProps} from '../../types/ComponentProps'\nimport {computed} from 'vue'\nimport type {BTrSlots} from '../../types/ComponentSlots'\n\nconst _props = withDefaults(defineProps<BTrProps>(), {\n  variant: null,\n})\nconst props = useDefaults(_props, 'BTr')\ndefineSlots<BTrSlots>()\n\nconst computedClasses = computed(() => ({\n  [`table-${props.variant}`]: props.variant !== null,\n}))\n</script>\n","const TABLE_TAG_NAMES = ['TD', 'TH', 'TR']\n\n// Filter CSS selector for click/dblclick/etc. events\n// If any of these selectors match the clicked element, we ignore the event\nconst eventFilter = [\n  'a',\n  'a *', // Include content inside links\n  'button',\n  'button *', // Include content inside buttons\n  'input:not(.disabled):not([disabled])',\n  'select:not(.disabled):not([disabled])',\n  'textarea:not(.disabled):not([disabled])',\n  '[role=\"link\"]',\n  '[role=\"link\"] *',\n  '[role=\"button\"]',\n  '[role=\"button\"] *',\n  '[tabindex]:not(.disabled):not([disabled])',\n].join(',')\n\n// Returns `true` if we should ignore the click/double-click/keypress event\n// Avoids having the user need to use `@click.stop` on the form control\nexport const filterEvent = (event: Readonly<Event>) => {\n  // Exit early when we don't have a target element\n  if (!event || !event.target) {\n    return false\n  }\n  const el = event.target as HTMLElement\n  // Exit early when element is disabled or a table element\n  if (('disabled' in el && el.disabled) || TABLE_TAG_NAMES.indexOf(el.tagName) !== -1) {\n    return false\n  }\n  // Ignore the click when it was inside a dropdown menu\n  if (el.closest('.dropdown-menu')) return true\n\n  const label = el.tagName === 'LABEL' ? el : el.closest('label')\n  // If the label's form control is not disabled then we don't propagate event\n  // Modern browsers have `label.control` that references the associated input, but IE 11\n  // does not have this property on the label element, so we resort to DOM lookups\n  if (label) {\n    const labelFor = label.getAttribute('for')\n    const input = labelFor\n      ? document.getElementById(labelFor)\n      : label.querySelector('input, select, textarea')\n    if (input && !(input as HTMLInputElement).disabled) {\n      return true\n    }\n  }\n  // Otherwise check if the event target matches one of the selectors in the\n  // event filter (i.e. anchors, non disabled inputs, etc.)\n  // Return `true` if we should ignore the event\n  return el.matches(eventFilter)\n}\n","<template>\n  <BTableSimple v-bind=\"computedSimpleProps\">\n    <colgroup v-if=\"slots['table-colgroup']\">\n      <slot name=\"table-colgroup\" :fields=\"computedFields\" />\n    </colgroup>\n    <BThead v-show=\"showComputedHeaders\" :variant=\"props.headVariant\" :class=\"props.theadClass\">\n      <slot name=\"thead-top\" :columns=\"computedFieldsTotal\" :fields=\"computedFields\" />\n      <BTr :variant=\"props.headRowVariant\" :class=\"props.theadTrClass\">\n        <BTh\n          v-for=\"field in computedFields\"\n          :key=\"field.key\"\n          :scope=\"field.scope\"\n          :class=\"getFieldColumnClasses(field)\"\n          :title=\"field.headerTitle\"\n          :variant=\"field.variant\"\n          :abbr=\"field.headerAbbr\"\n          :style=\"field.thStyle\"\n          :tabindex=\"shouldHeaderBeFocusable(field) ? '0' : undefined\"\n          v-bind=\"callThAttr(null, field, 'top')\"\n          @click=\"headerClicked(field, $event)\"\n          @keydown=\"handleHeaderKeydown(field, $event)\"\n        >\n          <!-- eslint-disable prettier/prettier -->\n          <slot\n            :name=\"\n              slots[`head(${String(field.key)})`]\n                ? (`head(${String(field.key)})` as 'head()')\n                : 'head()'\n            \"\n            :label=\"field.label\"\n            :column=\"field.key as LiteralUnion<keyof Items>\"\n            :field\n            :is-foot=\"false\"\n          >\n            <!-- eslint-enable prettier/prettier -->\n            {{ getTableFieldHeadLabel(field) }}\n          </slot>\n        </BTh>\n      </BTr>\n      <BTr v-if=\"slots['thead-sub']\">\n        <BTd\n          v-for=\"field in computedFields\"\n          :key=\"field.key\"\n          scope=\"col\"\n          :variant=\"field.variant\"\n          :class=\"[field.class, field.thClass]\"\n        >\n          <slot name=\"thead-sub\" :items=\"props.items\" :fields=\"computedFields\" :field>\n            {{ field.label }}\n          </slot>\n        </BTd>\n      </BTr>\n    </BThead>\n    <BTbody :class=\"props.tbodyClass\">\n      <slot\n        name=\"custom-body\"\n        :fields=\"computedFields\"\n        :items=\"props.items\"\n        :columns=\"computedFieldsTotal\"\n      >\n        <BTr\n          v-if=\"!props.stacked && slots['top-row']\"\n          :class=\"getRowClasses(null, 'row-top')\"\n          v-bind=\"callTbodyTrAttrs(null, 'row-top')\"\n        >\n          <slot name=\"top-row\" :columns=\"computedFieldsTotal\" :fields=\"computedFields\" />\n        </BTr>\n\n        <template\n          v-for=\"(item, itemIndex) in props.items\"\n          :key=\"\n            props.primaryKey && get(item, props.primaryKey)\n              ? get(item, props.primaryKey)\n              : itemIndex\n          \"\n        >\n          <BTr\n            :id=\"\n              props.primaryKey && get(item, props.primaryKey)\n                ? generateTableRowId(get(item, props.primaryKey))\n                : undefined\n            \"\n            :class=\"getRowClasses(item, 'row')\"\n            :variant=\"isTableItem(item) ? item._rowVariant : undefined\"\n            :tabindex=\"shouldRowBeFocusable ? '0' : undefined\"\n            v-bind=\"callTbodyTrAttrs(item, 'row')\"\n            @click=\"!filterEvent($event) && emit('row-clicked', item, itemIndex, $event)\"\n            @dblclick=\"!filterEvent($event) && emit('row-dblclicked', item, itemIndex, $event)\"\n            @contextmenu=\"!filterEvent($event) && emit('row-contextmenu', item, itemIndex, $event)\"\n            @mouseenter=\"!filterEvent($event) && emit('row-hovered', item, itemIndex, $event)\"\n            @mouseleave=\"!filterEvent($event) && emit('row-unhovered', item, itemIndex, $event)\"\n            @mousedown=\"handleMiddleClick(item, itemIndex, $event)\"\n            @keydown=\"handleRowKeydown(item, itemIndex, $event)\"\n          >\n            <component\n              :is=\"getCellComponent(field)\"\n              v-for=\"field in computedFields\"\n              :key=\"field.key\"\n              :variant=\"\n                (isTableItem(item) ? item._cellVariants?.[field.key as string] : false)\n                  ? null\n                  : field.variant\n              \"\n              :class=\"getFieldRowClasses(field, item)\"\n              v-bind=\"itemAttributes(item, String(field.key), field.tdAttr)\"\n            >\n              <label v-if=\"props.stacked && props.labelStacked\" class=\"b-table-stacked-label\">\n                {{ getTableFieldHeadLabel(field) }}\n              </label>\n              <slot\n                :name=\"\n                  slots[`cell(${String(field.key)})`]\n                    ? (`cell(${String(field.key)})` as 'cell()')\n                    : 'cell()'\n                \"\n                :value=\"formatItem(item, String(field.key), field.formatter)\"\n                :unformatted=\"get(item, String(field.key))\"\n                :index=\"itemIndex\"\n                :item=\"item\"\n                :field=\"field\"\n                :items=\"items\"\n                :toggle-details=\"() => toggleRowDetails(item)\"\n                :details-showing=\"isTableItem(item) ? (detailsMap.get(item) ?? false) : false\"\n              >\n                <template v-if=\"!slots[`cell(${String(field.key)})`] && !slots['cell()']\">\n                  {{ formatItem(item, String(field.key), field.formatter) }}\n                </template>\n              </slot>\n            </component>\n          </BTr>\n\n          <template\n            v-if=\"isTableItem(item) && detailsMap.get(item) === true && slots['row-details']\"\n          >\n            <BTr aria-hidden=\"true\" role=\"presentation\" class=\"d-none\" />\n            <BTr\n              :class=\"getRowClasses(item, 'row-details')\"\n              :variant=\"item._rowVariant\"\n              v-bind=\"callTbodyTrAttrs(item, 'row-details')\"\n            >\n              <BTd :colspan=\"computedFieldsTotal\" :class=\"detailsTdClass\">\n                <slot\n                  name=\"row-details\"\n                  :item=\"item\"\n                  :toggle-details=\"() => toggleRowDetails(item)\"\n                  :fields=\"computedFields\"\n                  :index=\"itemIndex\"\n                />\n              </BTd>\n            </BTr>\n          </template>\n        </template>\n        <!-- This class is for specific targetting of this slot element -->\n        <BTr\n          v-if=\"!props.stacked && slots['bottom-row']\"\n          class=\"bottom-row\"\n          :class=\"getRowClasses(null, 'row-bottom')\"\n          v-bind=\"callTbodyTrAttrs(null, 'row-bottom')\"\n        >\n          <slot name=\"bottom-row\" :columns=\"computedFieldsTotal\" :fields=\"computedFields\" />\n        </BTr>\n      </slot>\n    </BTbody>\n    <BTfoot v-if=\"props.footClone\" v-bind=\"footerProps\">\n      <BTr\n        :variant=\"props.footRowVariant ?? props.headRowVariant\"\n        :class=\"props.tfootTrClass ?? props.theadTrClass\"\n      >\n        <BTh\n          v-for=\"field in computedFields\"\n          :key=\"field.key\"\n          scope=\"col\"\n          :class=\"getFieldColumnClasses(field)\"\n          :title=\"field.headerTitle\"\n          :abbr=\"field.headerAbbr\"\n          :style=\"field.thStyle\"\n          :variant=\"field.variant\"\n          :tabindex=\"shouldHeaderBeFocusable(field) ? '0' : undefined\"\n          v-bind=\"callThAttr(null, field, 'bottom')\"\n          @click=\"headerClicked(field, $event, true)\"\n          @keydown=\"handleHeaderKeydown(field, $event, true)\"\n        >\n          <div class=\"d-inline-flex flex-nowrap align-items-center gap-1\">\n            <div>\n              <!-- eslint-disable prettier/prettier -->\n              <!-- @vue-expect-error - typescript is generating 2322 errors for all properties after name, which is wrong -->\n              <slot\n                :name=\"calculatedFooterSlot(field.key)\"\n                :label=\"field.label\"\n                :column=\"field.key\"\n                :field=\"field as LiteralUnion<keyof Items>\"\n                :is-foot=\"true\"\n              >\n                <!-- eslint-enable prettier/prettier -->\n                {{ getTableFieldHeadLabel(field) }}\n              </slot>\n            </div>\n          </div>\n        </BTh>\n      </BTr>\n    </BTfoot>\n    <BTfoot v-else-if=\"slots['custom-foot']\" v-bind=\"footerProps\">\n      <slot\n        name=\"custom-foot\"\n        :fields=\"computedFields\"\n        :items=\"props.items\"\n        :columns=\"computedFieldsTotal\"\n      />\n    </BTfoot>\n    <caption v-if=\"slots['table-caption'] || props.caption\">\n      <slot name=\"table-caption\">\n        {{ props.caption }}\n      </slot>\n    </caption>\n  </BTableSimple>\n</template>\n\n<script setup lang=\"ts\" generic=\"Items\">\nimport {computed, inject, ref, watch} from 'vue'\nimport type {BTableLiteProps} from '../../types/ComponentProps'\nimport {\n  isTableField,\n  isTableItem,\n  type TableField,\n  type TableItem,\n  type TableRowThead,\n  type TableRowType,\n} from '../../types/TableTypes'\nimport BTableSimple from './BTableSimple.vue'\nimport BTbody from './BTbody.vue'\nimport BTd from './BTd.vue'\nimport BTfoot from './BTfoot.vue'\nimport BTh from './BTh.vue'\nimport BThead from './BThead.vue'\nimport BTr from './BTr.vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {get, pick} from '../../utils/object'\nimport {btableSimpleProps, getDataLabelAttr, getTableFieldHeadLabel} from '../../utils/tableUtils'\nimport {formatItem} from '../../utils/formatItem'\nimport {filterEvent} from '../../utils/filterEvent'\nimport {startCase} from '../../utils/stringUtils'\nimport type {LiteralUnion} from '../../types/LiteralUnion'\nimport {useId} from '../../composables/useId'\nimport type {BTableLiteEmits} from '../../types/ComponentEmits'\nimport type {BTableLiteSlots} from '../../types'\nimport {CODE_DOWN, CODE_END, CODE_HOME, CODE_UP} from '../../utils/constants'\nimport {stopEvent} from '../../utils/event'\nimport {tableKeyboardNavigationKey} from '../../utils/keys'\n\nconst _props = withDefaults(defineProps<BTableLiteProps<Items>>(), {\n  caption: undefined,\n  align: undefined,\n  fields: () => [],\n  footClone: false,\n  items: () => [],\n  labelStacked: false,\n  fieldColumnClass: undefined,\n  tbodyTrClass: undefined,\n  detailsTdClass: undefined,\n  headVariant: undefined,\n  headRowVariant: undefined,\n  footRowVariant: undefined,\n  footVariant: undefined,\n  modelValue: undefined,\n  primaryKey: undefined,\n  tbodyClass: undefined,\n  tbodyTrAttrs: undefined,\n  tfootClass: undefined,\n  tfootTrClass: undefined,\n  theadClass: undefined,\n  theadTrClass: undefined,\n  // BTableSimpleProps props\n  borderVariant: undefined,\n  tableClass: undefined,\n  variant: undefined,\n  bordered: undefined,\n  borderless: undefined,\n  captionTop: undefined,\n  dark: undefined,\n  hover: undefined,\n  id: undefined,\n  noBorderCollapse: undefined,\n  outlined: undefined,\n  fixed: undefined,\n  responsive: undefined,\n  stacked: undefined,\n  striped: undefined,\n  stripedColumns: undefined,\n  small: undefined,\n  stickyHeader: undefined,\n  // End BTableSimpleProps props\n})\nconst props = useDefaults(_props, 'BTableLite')\nconst emit = defineEmits<BTableLiteEmits<Items>>()\nconst slots = defineSlots<BTableLiteSlots<Items>>()\n\n// Inject keyboard navigation state from parent BTable\nconst keyboardNavigation = inject(tableKeyboardNavigationKey, null)\n\nconst computedId = useId(() => props.id)\n\nconst generateDetailsItem = (item: TableItem): [object, boolean | undefined] => [\n  item,\n  item._showDetails,\n]\nconst detailsMap = ref(new WeakMap<object, boolean | undefined>())\nwatch(\n  () => props.items,\n  (items) => {\n    items.forEach((item) => {\n      if (!isTableItem(item)) return\n      detailsMap.value.set(...generateDetailsItem(item))\n    })\n  },\n  {deep: true, immediate: true}\n)\n\nconst computedTableClasses = computed(() => [\n  props.tableClass,\n  {\n    [`align-${props.align}`]: props.align !== undefined,\n  },\n])\n\nconst computedFields = computed<(TableField<Items> & {_noHeader?: true})[]>(() => {\n  if (!props.fields.length && props.items.length) {\n    const [firstItem] = props.items\n    if (firstItem && (isTableItem(firstItem) || Array.isArray(firstItem))) {\n      return Object.keys(firstItem).map((k) => {\n        const label = startCase(k)\n        return {\n          key: k,\n          label,\n          tdAttr: getDataLabelAttr(props, label),\n        }\n      })\n    }\n    // The items are primitives, so we just return a single empty field\n    // No header will be shown, as we don't know what to show\n    return [{key: '', _noHeader: true}]\n  }\n\n  return props.fields.map((f) => {\n    if (isTableField(f)) {\n      const label = f.label ?? startCase(f.key as string)\n      return {\n        ...(f as TableField<Items>),\n        tdAttr: {...getDataLabelAttr(props, label), ...f.tdAttr},\n      }\n    }\n    const label = startCase(f as string)\n    return {\n      key: f as string,\n      label,\n      tdAttr: getDataLabelAttr(props, label),\n    }\n  })\n})\nconst computedFieldsTotal = computed(() => computedFields.value.length)\nconst showComputedHeaders = computed(() => {\n  // We only hide the header if all fields have _noHeader set to true. Which would be our doing\n  // This usually happens under a circumstance of displaying an array of primitives\n  // Under any other circumstance, I'm not sure how this would apply\n  if (computedFieldsTotal.value > 0 && computedFields.value.every((el) => el._noHeader === true))\n    return false\n  return true\n})\n\nconst footerProps = computed(() => ({\n  variant: props.footVariant ?? props.headVariant,\n  class: props.tfootClass ?? props.theadClass,\n}))\n\nconst calculatedFooterSlot = (key: LiteralUnion<keyof Items>): keyof typeof slots =>\n  slots[`foot(${String(key)})`]\n    ? `foot(${String(key)})`\n    : slots['foot()']\n      ? 'foot()'\n      : slots[`head(${String(key)})`]\n        ? `head(${String(key)})`\n        : 'head()'\n\nconst itemAttributes = (item: Items, fieldKey: string, attr?: unknown) => {\n  const val = get(item, fieldKey)\n  return attr && typeof attr === 'function' ? attr(val, fieldKey, item) : attr\n}\n\nconst callThAttr = (item: Items | null, field: TableField<Items>, type: TableRowThead) => {\n  const fieldKey = String(field.key)\n  const val = get(item, fieldKey)\n  return field.thAttr && typeof field.thAttr === 'function'\n    ? field.thAttr(val, fieldKey, item, type)\n    : field.thAttr\n}\n\nconst headerClicked = (field: TableField<Items>, event: Readonly<MouseEvent>, isFooter = false) => {\n  emit('head-clicked', field.key as string, field, event, isFooter)\n}\n\nconst toggleRowDetails = (tr: Items) => {\n  if (isTableItem(tr)) {\n    const prevValue = detailsMap.value.get(tr)\n    detailsMap.value.set(tr, !prevValue)\n    tr._showDetails = !prevValue\n  }\n}\n\nconst getFieldColumnClasses = (field: TableField) => [\n  field.class,\n  field.thClass,\n  {\n    'b-table-sticky-column': field.stickyColumn,\n  },\n  props.fieldColumnClass\n    ? typeof props.fieldColumnClass === 'function'\n      ? props.fieldColumnClass(field)\n      : props.fieldColumnClass\n    : null,\n]\n\nconst getFieldRowClasses = (field: Readonly<TableField>, tr: Items) => {\n  const val = get(tr, String(field.key))\n  return [\n    field.class,\n    typeof field.tdClass === 'function' ? field.tdClass(val, String(field.key), tr) : field.tdClass,\n    (isTableItem(tr) ? tr._cellVariants?.[field.key as string] : false)\n      ? `table-${(tr as TableItem)._cellVariants?.[field.key as string]}`\n      : null,\n    {\n      'b-table-sticky-column': field.stickyColumn,\n    },\n  ]\n}\n\nconst handleMiddleClick = (item: Items, itemIndex: number, event: MouseEvent) => {\n  if (event.button === 1 && !filterEvent(event)) {\n    emit('row-middle-clicked', item, itemIndex, event)\n  }\n}\nconst callTbodyTrAttrs = (item: Items | null, type: TableRowType) =>\n  props.tbodyTrAttrs\n    ? typeof props.tbodyTrAttrs === 'function'\n      ? props.tbodyTrAttrs(item, type)\n      : props.tbodyTrAttrs\n    : null\n\nconst getRowClasses = (item: Items | null, type: TableRowType) =>\n  props.tbodyTrClass\n    ? typeof props.tbodyTrClass === 'function'\n      ? props.tbodyTrClass(item, type)\n      : props.tbodyTrClass\n    : null\n\nconst generateTableRowId = (primaryKeyValue: string) =>\n  `${computedId.value}__row_${primaryKeyValue}`\n\nconst getCellComponent = (field: Readonly<TableField>) => {\n  if (field?.isRowHeader) {\n    return BTh\n  }\n  return BTd\n}\n\n// Keyboard navigation support\nconst shouldHeaderBeFocusable = (field: TableField<Items>) =>\n  !!(keyboardNavigation?.headerNavigation.value && field.sortable === true)\n\nconst shouldRowBeFocusable = computed(\n  () => !!(keyboardNavigation?.rowNavigation.value && props.items.length > 0)\n)\n\nconst handleHeaderKeydown = (field: TableField<Items>, event: KeyboardEvent, isFooter = false) => {\n  const {target, code} = event\n\n  if (target && (target as Element).tagName !== 'TH' && document.activeElement === target) return\n\n  if (code === 'Enter' || code === 'Space') {\n    stopEvent(event)\n    headerClicked(field, event as unknown as MouseEvent, isFooter)\n  }\n}\n\nconst handleRowKeydown = (item: Items, itemIndex: number, event: KeyboardEvent) => {\n  const {target, code, shiftKey} = event\n\n  if (target && (target as Element).tagName !== 'TR' && document.activeElement === target) return\n\n  if (code === 'Enter' || code === 'Space') {\n    stopEvent(event)\n    emit('row-clicked', item, itemIndex, event as unknown as MouseEvent)\n    return\n  }\n\n  if (code === CODE_DOWN || code === CODE_UP || code === CODE_HOME || code === CODE_END) {\n    stopEvent(event)\n    handleRowNavigation(code, shiftKey, itemIndex)\n  }\n}\n\nconst handleRowNavigation = (code: string, shiftKey: boolean, currentIndex: number) => {\n  const rows = Array.from(\n    document.querySelectorAll(`#${computedId.value} tbody tr[tabindex]`)\n  ) as HTMLTableRowElement[]\n\n  if (rows.length === 0) return\n\n  let targetIndex = currentIndex\n\n  if (code === CODE_DOWN) {\n    if (shiftKey) {\n      targetIndex = rows.length - 1 // Go to last row\n    } else {\n      targetIndex = Math.min(currentIndex + 1, rows.length - 1) // Go to next row\n    }\n  } else if (code === CODE_UP) {\n    if (shiftKey) {\n      targetIndex = 0 // Go to first row\n    } else {\n      targetIndex = Math.max(currentIndex - 1, 0) // Go to previous row\n    }\n  } else if (code === CODE_END) {\n    targetIndex = rows.length - 1 // Go to last row\n  } else if (code === CODE_HOME) {\n    targetIndex = 0 // Go to first row\n  }\n\n  if (targetIndex !== currentIndex && rows[targetIndex]) {\n    rows[targetIndex].focus()\n  }\n}\n\nconst computedSimpleProps = computed(() => ({\n  ...pick(props, btableSimpleProps),\n  tableClass: computedTableClasses.value,\n  id: computedId.value,\n}))\n</script>\n","<template>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    fill=\"currentColor\"\n    :class=\"iconClass\"\n    :style=\"{opacity: iconOpacity}\"\n    viewBox=\"0 0 16 16\"\n    aria-hidden=\"true\"\n  >\n    <path fill-rule=\"evenodd\" :d=\"iconPath\" />\n  </svg>\n</template>\n\n<script setup lang=\"ts\" generic=\"Items\">\nimport {computed} from 'vue'\nimport type {BTableInitialSortDirection, BTableSortBy, TableField} from '../types/TableTypes'\n\nconst props = defineProps<{\n  fieldInfo: TableField<Items>\n  sortBy?: BTableSortBy[]\n  initialSortDirection?: BTableInitialSortDirection\n}>()\n\nconst currentSort = computed(() => props.sortBy?.find((el) => el.key === props.fieldInfo.key))\n\nconst ascPath =\n  'M8 12a.5.5 0 0 0 .5-.5V5.707l2.146 2.147a.5.5 0 0 0 .708-.708l-3-3a.5.5 0 0 0-.708 0l-3 3a.5.5 0 1 0 .708.708L7.5 5.707V11.5a.5.5 0 0 0 .5.5z'\nconst descPath =\n  'M8 4a.5.5 0 0 1 .5.5v5.793l2.146-2.147a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L7.5 10.293V4.5A.5.5 0 0 1 8 4z'\n\nconst resolvedDirection = computed(() => {\n  if (currentSort.value?.order) return currentSort.value.order\n\n  const fieldInitialDirection = props.fieldInfo.initialSortDirection || props.initialSortDirection\n\n  if (fieldInitialDirection === 'last') {\n    const lastSorted = [...(props.sortBy ?? [])].reverse().find((sort) => sort.order !== undefined)\n    return lastSorted?.order || 'asc'\n  }\n\n  return fieldInitialDirection === 'desc' ? 'desc' : 'asc'\n})\n\nconst iconPath = computed(() => (resolvedDirection.value === 'desc' ? descPath : ascPath))\n\nconst iconClass = computed(() =>\n  resolvedDirection.value === 'desc' ? 'bi bi-arrow-down-short' : 'bi bi-arrow-up-short'\n)\n\nconst iconOpacity = computed(() => (currentSort.value?.order ? 1 : 0.4))\n</script>\n","<template>\n  <!-- eslint-disable prettier/prettier -->\n  <BTableLite v-bind=\"computedLiteProps\">\n    <template v-if=\"slots['table-colgroup']\" #table-colgroup=\"scope\">\n      <slot name=\"table-colgroup\" v-bind=\"scope\" />\n    </template>\n    <!-- eslint-enable prettier/prettier -->\n    <template v-if=\"slots['thead-top']\" #thead-top=\"scope\">\n      <slot\n        name=\"thead-top\"\n        v-bind=\"scope\"\n        :clear-selected=\"exposedSelectableUtilities.clearSelected\"\n        :select-all-rows=\"exposedSelectableUtilities.selectAllRows\"\n        :fields=\"computedFields\"\n      />\n    </template>\n    <template v-if=\"slots['thead-sub']\" #thead-sub=\"scope\">\n      <slot name=\"thead-sub\" v-bind=\"scope\" :fields=\"computedFields\" />\n    </template>\n    <template v-if=\"slots['top-row']\" #top-row=\"scope\">\n      <slot name=\"top-row\" v-bind=\"scope\" :fields=\"computedFields\" />\n    </template>\n    <template v-if=\"slots['row-details']\" #row-details=\"scope\">\n      <slot\n        name=\"row-details\"\n        v-bind=\"scope\"\n        :fields=\"computedFields\"\n        :select-row=\"(index = scope.index) => exposedSelectableUtilities.selectRow(index)\"\n        :unselect-row=\"(index = scope.index) => exposedSelectableUtilities.unselectRow(index)\"\n        :row-selected=\"exposedSelectableUtilities.isRowSelected(scope.index)\"\n      />\n    </template>\n    <template v-if=\"slots['bottom-row']\" #bottom-row=\"scope\">\n      <slot name=\"bottom-row\" v-bind=\"scope\" :fields=\"computedFields\" />\n    </template>\n    <template v-if=\"slots['custom-foot']\" #custom-foot=\"scope\">\n      <slot name=\"custom-foot\" v-bind=\"scope\" :fields=\"computedFields\" />\n    </template>\n    <template v-if=\"slots['table-caption']\" #table-caption>\n      <slot name=\"table-caption\" />\n    </template>\n    <template v-for=\"name in dynamicCellSlots\" #[name]=\"scope\">\n      <slot\n        :name\n        v-bind=\"scope\"\n        :select-row=\"(index = scope.index) => exposedSelectableUtilities.selectRow(index)\"\n        :unselect-row=\"(index = scope.index) => exposedSelectableUtilities.unselectRow(index)\"\n        :row-selected=\"exposedSelectableUtilities.isRowSelected(scope.index)\"\n      />\n    </template>\n    <template v-for=\"name in dynamicFootSlots\" #[name]=\"scope\">\n      <slot\n        :name\n        v-bind=\"scope\"\n        :select-all-rows=\"exposedSelectableUtilities.selectAllRows\"\n        :clear-selected=\"exposedSelectableUtilities.clearSelected\"\n      />\n    </template>\n\n    <template\n      v-for=\"field in computedFields\"\n      :key=\"field.key\"\n      #[`head(${String(field.key)})`]=\"scope\"\n    >\n      <slot\n        :name=\"\n          slots[`head(${String(field.key)})`]\n            ? (`head(${String(field.key)})` as 'head()')\n            : 'head()'\n        \"\n        v-bind=\"scope\"\n        :select-all-rows=\"exposedSelectableUtilities.selectAllRows\"\n        :clear-selected=\"exposedSelectableUtilities.clearSelected\"\n      >\n        {{ getTableFieldHeadLabel(field) }}\n      </slot>\n      <template v-if=\"isSortable && !!scope.field.sortable && props.noSortableIcon === false\">\n        <slot\n          v-if=\"sortByModel?.find((el) => el.key === scope.field.key)?.order === 'asc'\"\n          v-bind=\"scope\"\n          :name=\"\n            slots[`sortAsc(${String(scope.field.key)})`]\n              ? (`sortAsc(${String(scope.field.key)})` as 'sortAsc()')\n              : 'sortAsc()'\n          \"\n        >\n          <SortIcon\n            :field-info=\"scope.field\"\n            :sort-by=\"sortByModel\"\n            :initial-sort-direction=\"props.initialSortDirection\"\n          />\n        </slot>\n        <slot\n          v-else-if=\"sortByModel?.find((el) => el.key === scope.field.key)?.order === 'desc'\"\n          v-bind=\"scope\"\n          :name=\"\n            slots[`sortDesc(${String(scope.field.key)})`]\n              ? (`sortDesc(${String(scope.field.key)})` as 'sortDesc()')\n              : 'sortDesc()'\n          \"\n        >\n          <SortIcon\n            :field-info=\"scope.field\"\n            :sort-by=\"sortByModel\"\n            :initial-sort-direction=\"props.initialSortDirection\"\n          />\n        </slot>\n        <slot\n          v-else\n          v-bind=\"scope\"\n          :name=\"\n            slots[`sortDefault(${String(scope.field.key)})`]\n              ? (`sortDefault(${String(scope.field.key)})` as 'sortDefault()')\n              : 'sortDefault()'\n          \"\n        >\n          <SortIcon\n            :field-info=\"scope.field\"\n            :sort-by=\"sortByModel\"\n            :initial-sort-direction=\"props.initialSortDirection\"\n          />\n        </slot>\n      </template>\n    </template>\n    <template #custom-body=\"scope\">\n      <BTr\n        v-if=\"busyModel && slots['table-busy']\"\n        class=\"b-table-busy-slot\"\n        :class=\"getBusyRowClasses\"\n      >\n        <BTd :colspan=\"scope.fields.length\">\n          <slot name=\"table-busy\" />\n        </BTd>\n      </BTr>\n\n      <BTr\n        v-else-if=\"props.showEmpty === true && computedItems.length === 0\"\n        class=\"b-table-empty-row\"\n      >\n        <BTd :colspan=\"computedFields.length\">\n          <div role=\"alert\" aria-live=\"polite\">\n            <div class=\"text-center my-2\">\n              <slot v-if=\"isFilterableTable\" name=\"empty-filtered\" v-bind=\"emptySlotScope\">\n                {{ props.emptyFilteredText }}\n              </slot>\n              <slot v-else name=\"empty\" v-bind=\"emptySlotScope\">\n                {{ props.emptyText }}\n              </slot>\n            </div>\n          </div>\n        </BTd>\n      </BTr>\n    </template>\n  </BTableLite>\n</template>\n\n<script setup lang=\"ts\" generic=\"Items\">\nimport {useToNumber} from '@vueuse/core'\nimport {computed, onMounted, provide, type Ref, ref, watch} from 'vue'\nimport {formatItem} from '../../utils/formatItem'\nimport BTableLite from './BTableLite.vue'\nimport BTd from './BTd.vue'\nimport BTr from './BTr.vue'\nimport SortIcon from '../SortIcon.vue'\nimport {\n  type BTableSortBy,\n  type BTableSortByOrder,\n  isTableField,\n  isTableItem,\n  type NoProviderTypes,\n  type TableField,\n  type TableFieldFormatter,\n  type TableFieldRaw,\n  type TableItem,\n  type TableRowType,\n  type TableStrictClassValue,\n} from '../../types/TableTypes'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BTableProps} from '../../types/ComponentProps'\nimport type {BTableEmits, BTableLiteEmits} from '../../types/ComponentEmits'\nimport {deepEqual, get, pick, set} from '../../utils/object'\nimport {startCase} from '../../utils/stringUtils'\nimport {\n  btableLiteProps,\n  btableSimpleProps,\n  getDataLabelAttr,\n  getTableFieldHeadLabel,\n} from '../../utils/tableUtils'\nimport {useId} from '../../composables/useId'\nimport type {BTableSlots, CamelCase} from '../../types'\nimport {tableKeyboardNavigationKey} from '../../utils/keys'\n\nconst _props = withDefaults(\n  defineProps<Omit<BTableProps<Items>, 'sortBy' | 'busy' | 'selectedItems'>>(),\n  {\n    noSortableIcon: false,\n    perPage: Number.POSITIVE_INFINITY,\n    filter: undefined,\n    filterFunction: undefined,\n    mustSort: false,\n    initialSortDirection: 'asc',\n    filterable: undefined,\n    provider: undefined,\n    noProvider: undefined,\n    noProviderPaging: false,\n    noProviderSorting: false,\n    multisort: false,\n    noProviderFiltering: false,\n    noLocalSorting: false,\n    noSelectOnClick: false,\n    selectable: false,\n    stickySelect: false,\n    selectHead: true,\n    selectMode: 'multi',\n    selectionVariant: 'primary',\n    busyLoadingText: 'Loading...',\n    currentPage: 1,\n    sortCompare: undefined,\n    // BTableLite props\n    items: () => [],\n    fields: () => [],\n    // All others use defaults\n    caption: undefined,\n    align: undefined,\n    footClone: undefined,\n    labelStacked: undefined,\n    showEmpty: false,\n    emptyText: 'There are no records to show',\n    emptyFilteredText: 'There are no records matching your request',\n    fieldColumnClass: undefined,\n    tbodyTrClass: undefined,\n    detailsTdClass: undefined,\n    headVariant: undefined,\n    headRowVariant: undefined,\n    footRowVariant: undefined,\n    footVariant: undefined,\n    modelValue: undefined,\n    primaryKey: undefined,\n    tbodyClass: undefined,\n    tfootClass: undefined,\n    tfootTrClass: undefined,\n    theadClass: undefined,\n    theadTrClass: undefined,\n    // End BTableLite props\n    // BTableSimple props\n    borderVariant: undefined,\n    variant: undefined,\n    bordered: undefined,\n    borderless: undefined,\n    captionTop: undefined,\n    dark: undefined,\n    hover: undefined,\n    id: undefined,\n    noBorderCollapse: undefined,\n    outlined: undefined,\n    fixed: undefined,\n    responsive: undefined,\n    stacked: undefined,\n    striped: undefined,\n    stripedColumns: undefined,\n    small: undefined,\n    stickyHeader: undefined,\n    // End BTableSimple props\n  }\n)\nconst props = useDefaults(_props, 'BTable')\nconst emit = defineEmits<BTableEmits<Items>>()\nconst slots = defineSlots<BTableSlots<Items>>()\n\nconst dynamicCellSlots = computed(\n  () => Object.keys(slots).filter((key) => key.startsWith('cell(')) as 'cell()'[]\n)\nconst dynamicFootSlots = computed(\n  () => Object.keys(slots).filter((key) => key.startsWith('foot(')) as 'foot()'[]\n)\n\nconst sortByModel = defineModel<BTableProps<Items>['sortBy']>('sortBy', {\n  default: undefined,\n})\nconst busyModel = defineModel<Exclude<BTableProps<Items>['busy'], undefined>>('busy', {\n  default: false,\n})\nconst selectedItemsModel = defineModel<Exclude<BTableProps<Items>['selectedItems'], undefined>>(\n  'selectedItems',\n  {\n    default: () => [],\n  }\n)\n\nconst computedId = useId(() => props.id)\n\nconst selectedItemsToSet = computed({\n  get: () => new Set(selectedItemsModel.value),\n  set: (val) => {\n    selectedItemsModel.value = [...val]\n  },\n})\n\nwatch(selectedItemsToSet, (newValue, oldValue) => {\n  Array.from(oldValue)\n    .filter((item) => !newValue.has(item))\n    .forEach((item) => {\n      emit('row-unselected', item)\n    })\n  Array.from(newValue)\n    .filter((item) => !oldValue.has(item))\n    .forEach((item) => {\n      emit('row-selected', item)\n    })\n})\n/**\n * This is to avoid the issue of directly mutating the array structure and to properly trigger the computed setter.\n * The utils also conveniently emit the proper events after\n */\nconst selectedItemsSetUtilities = {\n  add: (item: Items) => {\n    const value = new Set(selectedItemsToSet.value)\n    value.add(item)\n    selectedItemsToSet.value = value\n  },\n  clear: () => {\n    selectedItemsToSet.value.forEach((item) => {\n      selectedItemsSetUtilities.delete(item)\n    })\n  },\n  delete: (item: Items) => {\n    const value = new Set(selectedItemsToSet.value)\n    if (props.primaryKey) {\n      const pkey: string = props.primaryKey\n      selectedItemsModel.value.forEach((v, i) => {\n        const selectedKey = get(v, pkey)\n        const itemKey = get(item, pkey)\n\n        if (!!selectedKey && !!itemKey && selectedKey === itemKey) {\n          value.delete(selectedItemsModel.value[i])\n        }\n      })\n    } else {\n      value.delete(item)\n    }\n    selectedItemsToSet.value = value\n  },\n  set: (items: Items[]) => {\n    selectedItemsToSet.value = new Set(items)\n  },\n  has: (item: Items) => {\n    if (!props.primaryKey) return selectedItemsToSet.value.has(item)\n\n    // Resolver for when we are using primary keys\n    const pkey: string = props.primaryKey\n    for (const selected of selectedItemsToSet.value) {\n      const selectedKey = get(selected, pkey)\n      const itemKey = get(item, pkey)\n\n      if (!!selectedKey && !!itemKey && selectedKey === itemKey) return true\n    }\n    return false\n  },\n} as const\n\n/**\n * Only stores data that is fetched when using the provider\n */\nconst internalItems: Ref<Items[]> = ref([])\n\nconst perPageNumber = useToNumber(() => props.perPage, {method: 'parseInt'})\nconst currentPageNumber = useToNumber(() => props.currentPage, {method: 'parseInt'})\n\nconst isFilterableTable = computed(() => !!props.filter)\nconst usesProvider = computed(() => props.provider !== undefined)\nconst isSelecting = computed(() => selectedItemsToSet.value.size > 0)\n\nconst isSortable = computed(\n  () =>\n    sortByModel.value !== undefined ||\n    props.fields.some(\n      (field) => typeof field === 'object' && field !== null && field.sortable === true\n    )\n)\n\n// Provide keyboard navigation state to child components\nconst keyboardRowNavigation = computed(() => !!(props.selectable && !props.noSelectOnClick))\nconst keyboardHeaderNavigation = computed(() => !!isSortable.value)\n\nprovide(tableKeyboardNavigationKey, {\n  rowNavigation: keyboardRowNavigation,\n  headerNavigation: keyboardHeaderNavigation,\n})\n\nconst computedFields = computed<TableField<Items>[]>(() =>\n  props.fields.map((el) => {\n    if (!isTableField<Items>(el)) {\n      const label = startCase(el as string)\n      return {\n        key: el as string,\n        label,\n        tdAttr: getDataLabelAttr(props, label),\n      }\n    }\n\n    const value = sortByModel.value?.find((sb) => el.key === sb.key)\n    const sortValue =\n      isSortable.value === false\n        ? undefined\n        : value === undefined\n          ? 'none'\n          : value.order === 'desc'\n            ? 'descending'\n            : value.order === 'asc'\n              ? 'ascending'\n              : 'none'\n\n    return {\n      ...(el as TableField<Items>),\n      thAttr: {\n        'aria-sort': sortValue,\n        ...el.thAttr,\n      },\n    }\n  })\n)\n\nconst tableClasses = computed(() => ({\n  'b-table-busy': busyModel.value,\n  'b-table-selectable': props.selectable,\n  'user-select-none': props.selectable && isSelecting.value,\n  'b-table-fixed': props.fixed,\n  'b-table-no-border-collapse': props.noBorderCollapse,\n}))\n\nconst getBusyRowClasses = computed(() => [\n  props.tbodyTrClass\n    ? typeof props.tbodyTrClass === 'function'\n      ? props.tbodyTrClass(null, 'table-busy')\n      : props.tbodyTrClass\n    : null,\n])\nconst getFieldColumnClasses = (field: TableField) => [\n  {\n    'b-table-sortable-column': isSortable.value && field.sortable,\n  },\n]\n// TODO this class has issues if the table has a variant already applied\n// Also the row should technically have aria-selected. Both things could probably just use a function with tbodyTrAttrs\n// But functional tbodyTrAttrs are not supported yet\n// Also the stuff for resolving functions could probably be made a util\nconst getRowClasses = (item: Items | null, type: TableRowType): TableStrictClassValue => [\n  {\n    [`selected table-${props.selectionVariant}`]:\n      props.selectable && !!item && selectedItemsSetUtilities.has(item),\n  },\n  props.tbodyTrClass\n    ? typeof props.tbodyTrClass === 'function'\n      ? props.tbodyTrClass(item, type)\n      : props.tbodyTrClass\n    : null,\n]\n\nconst getFormatter = (value: TableField<Items>): TableFieldFormatter<Items> | undefined =>\n  typeof value.sortByFormatted === 'function' ? value.sortByFormatted : value.formatter\n\nconst getStringValue = (ob: Items, key: string): string => {\n  if (!isTableItem(ob)) return String(ob)\n\n  const sortField = computedFields.value.find((el) => {\n    if (isTableField<Items>(el)) return el.key === key\n\n    return false\n  })\n  const val = get(ob, key as keyof TableItem)\n  if (isTableField<Items>(sortField) && !!sortField.sortByFormatted) {\n    const formatter = getFormatter(sortField)\n    if (formatter) {\n      return String(formatItem(ob, String(sortField.key), formatter))\n    }\n  }\n  return typeof val === 'object' && val !== null ? JSON.stringify(val) : (val?.toString() ?? '')\n}\n\nconst fieldByKey = computed(() => {\n  const map = new Map<string | number | symbol, TableField<Items>>()\n  for (const f of computedFields.value) if (isTableField<Items>(f)) map.set(f.key, f)\n  return map\n})\n\nconst computedItems = computed<Items[]>(() => {\n  const sortByItems = sortByModel.value?.filter((el) => !!el.order)\n\n  const mapItem = (item: Items): Items => {\n    if (\n      typeof item === 'object' &&\n      item !== null &&\n      Object.keys(item).some((key) => key.includes('.'))\n    ) {\n      let newItem: Partial<Items> = {}\n      for (const key in item) {\n        if (key.includes('.')) {\n          newItem = set(newItem, key, item[key])\n        } else {\n          newItem[key] = item[key]\n        }\n      }\n      return newItem as Items // This should be an items at this point\n    }\n    return item\n  }\n\n  const filterItem = (item: Items): boolean => {\n    if (!isTableItem(item)) return true\n\n    return Object.entries(item).some(([key, val]) => {\n      if (\n        val === null ||\n        val === undefined ||\n        key[0] === '_' ||\n        (!props.filterable?.includes(key) && !!props.filterable?.length)\n      )\n        return false\n\n      if (props.filterFunction && typeof props.filterFunction === 'function') {\n        return props.filterFunction(item, props.filter)\n      }\n\n      const realVal = (): string => {\n        const filterField = computedFields.value.find((el) => {\n          if (isTableField<Items>(el)) return el.key === key\n          return false\n        })\n        if (isTableField<Items>(filterField) && !!filterField.filterByFormatted) {\n          const formatter = getFormatter(filterField)\n          if (formatter) {\n            return String(formatter(val, String(filterField.key), item))\n          }\n        }\n        return typeof val === 'object' ? JSON.stringify(Object.values(val)) : val.toString()\n      }\n      const itemValue: string = realVal()\n      return itemValue.toLowerCase().includes(props.filter?.toLowerCase() ?? '')\n    })\n  }\n\n  const mappedItems = (usesProvider.value ? internalItems.value : props.items).reduce(\n    (acc, val) => {\n      const item = mapItem(val)\n      const shouldFilter =\n        isFilterableTable.value && (!usesProvider.value || props.noProviderFiltering)\n\n      if (!shouldFilter || filterItem(item)) acc.push(item)\n\n      return acc\n    },\n    [] as Items[]\n  )\n\n  if (\n    sortByItems?.length &&\n    ((isSortable.value === true && !usesProvider.value && !props.noLocalSorting) ||\n      (isSortable.value === true && usesProvider.value && props.noProviderSorting))\n  ) {\n    // Multi-sort\n    return mappedItems.sort((a, b) => {\n      for (let i = 0; i < sortByItems.length; i++) {\n        const {key, order} = sortByItems[i]\n        const field = fieldByKey.value.get(key)\n        const comparer = field?.sortCompare || props.sortCompare\n        const comparison = comparer\n          ? comparer(a, b, key)\n          : getStringValue(a, key).localeCompare(getStringValue(b, key), undefined, {numeric: true})\n\n        if (comparison !== 0) {\n          return order === 'asc' ? comparison : -comparison\n        }\n      }\n      return 0 // items are equal\n    })\n  }\n\n  return mappedItems\n})\n\nconst emptySlotScope = computed(() => ({\n  emptyFilteredText: props.emptyFilteredText,\n  emptyText: props.emptyText,\n  fields: computedFields.value,\n  items: computedItems.value,\n}))\n\nconst computedDisplayItems = computed<Items[]>(() => {\n  if (Number.isNaN(perPageNumber.value) || (usesProvider.value && !props.noProviderPaging)) {\n    return computedItems.value\n  }\n\n  return computedItems.value.slice(\n    (currentPageNumber.value - 1) * (perPageNumber.value || Number.POSITIVE_INFINITY),\n    currentPageNumber.value * (perPageNumber.value || Number.POSITIVE_INFINITY)\n  )\n})\n\nwatch(computedDisplayItems, (v) => {\n  emit('change', v)\n})\n\nconst handleRowSelection = (\n  row: Items,\n  index: number,\n  shiftClicked = false,\n  ctrlClicked = false,\n  metaClicked = false\n) => {\n  if (!props.selectable) return\n\n  if (props.selectMode === 'single' || props.selectMode === 'multi') {\n    // Do nothing when these items are held\n    if (shiftClicked || ctrlClicked) return\n    // Delete if item is in\n    if (selectedItemsSetUtilities.has(row)) {\n      selectedItemsSetUtilities.delete(row)\n    } else {\n      if (props.selectMode === 'single') {\n        selectedItemsSetUtilities.set([row])\n      } else {\n        selectedItemsSetUtilities.add(row)\n      }\n    }\n  } else {\n    if (ctrlClicked || metaClicked) {\n      // Delete if in the object\n      if (selectedItemsSetUtilities.has(row)) {\n        selectedItemsSetUtilities.delete(row)\n        // Otherwise add. Functions similarly to 'multi' at this point\n      } else {\n        selectedItemsSetUtilities.add(row)\n      }\n      // This is where range is different, due to the difference in shift\n    } else if (shiftClicked) {\n      const lastSelectedItem = [...selectedItemsToSet.value].pop()\n      const lastSelectedIndex = computedItems.value.findIndex((i) => i === lastSelectedItem)\n      const selectStartIndex = Math.min(lastSelectedIndex, index)\n      const selectEndIndex = Math.max(lastSelectedIndex, index)\n      const items = computedItems.value.slice(selectStartIndex, selectEndIndex + 1)\n      selectedItemsSetUtilities.set(items)\n      // If nothing is being held, then we just behave like it's single mode\n    } else {\n      selectedItemsSetUtilities.set([row])\n    }\n  }\n}\n\nconst handleFieldSorting = (field: TableField<Items>) => {\n  if (!isSortable.value) return\n\n  const fieldKey = typeof field === 'object' && field !== null ? field.key : field\n  const fieldSortable = typeof field === 'object' && field !== null ? field.sortable : false\n\n  if (!(isSortable.value === true && fieldSortable === true)) return\n\n  // Get the last sorted direction from the current sort model (last entry with a defined order)\n  //   Exclude the current column if it's already in the sortBy array\n  const getLastSortDirection = (): BTableSortByOrder => {\n    const lastSorted = [...(sortByModel.value ?? [])]\n      .reverse()\n      .find((sort) => sort.order !== undefined && sort.key !== fieldKey)\n    return lastSorted?.order ?? 'asc'\n  }\n\n  // Determine initial sort direction for new sorts\n  const getInitialSortDirection = (): BTableSortByOrder => {\n    // Handle field-level prop\n    if (typeof field === 'object' && field !== null && field.initialSortDirection) {\n      if (field.initialSortDirection === 'last') {\n        return getLastSortDirection()\n      }\n      return field.initialSortDirection\n    }\n    // Handle table-level prop\n    if (props.initialSortDirection) {\n      if (props.initialSortDirection === 'last') {\n        return getLastSortDirection()\n      }\n      return props.initialSortDirection\n    }\n    return 'asc'\n  }\n\n  const resolveOrder = (val: BTableSortByOrder | undefined): BTableSortByOrder | undefined => {\n    // New sort: honor the configured initial direction\n    if (val === undefined) return getInitialSortDirection()\n    // Determine initial direction for this field\n    const initial = getInitialSortDirection()\n    const must =\n      props.mustSort === true ||\n      (Array.isArray(props.mustSort) && props.mustSort.includes(fieldKey as string))\n    if (val === 'asc') {\n      if (initial === 'desc') {\n        // If mustSort, cycle asc -> desc, else asc -> undefined\n        return must ? 'desc' : undefined\n      }\n      // If initial is asc, cycle asc -> desc -> undefined (or asc if mustSort)\n      return 'desc'\n    }\n    if (val === 'desc') {\n      if (initial === 'desc') {\n        return 'asc'\n      }\n      // If mustSort, cycle desc -> asc, else desc -> undefined\n      return must ? 'asc' : undefined\n    }\n    return undefined\n  }\n\n  const index = sortByModel.value?.findIndex((el) => el.key === fieldKey) ?? -1\n  const originalValue = sortByModel.value?.[index]\n  const updatedValue: BTableSortBy =\n    // If value is new, we use the field's initialSortDirection or default to ascending\n    // Otherwise we make a temp copy of the value\n    index === -1 || !originalValue\n      ? {key: fieldKey as string, order: getInitialSortDirection()}\n      : {...originalValue}\n\n  /**\n   * @returns the updated value to emit for sorted\n   */\n  const handleMultiSort = (): BTableSortBy => {\n    const tmp = [...(sortByModel.value ?? [])]\n    const val = updatedValue\n    if (index === -1) {\n      tmp.push(val)\n    } else {\n      const order = resolveOrder(val.order)\n      if (order) {\n        val.order = order\n        tmp.splice(index, 1, val)\n      } else {\n        // Remove the value from the array and emit cleared sort for this key\n        val.order = undefined\n        tmp.splice(index, 1)\n      }\n    }\n    sortByModel.value = tmp\n    return val\n  }\n\n  /**\n   * @returns the updated value to emit for sorted\n   */\n  const handleSingleSort = (): BTableSortBy => {\n    const order = index === -1 ? updatedValue.order : resolveOrder(updatedValue.order)\n    const val = {\n      ...updatedValue,\n      order,\n    }\n    sortByModel.value = order ? [val] : []\n    return val\n  }\n\n  // Then emit the returned updated value\n  emit('sorted', props.multisort === true ? handleMultiSort() : handleSingleSort())\n}\n\nconst callItemsProvider = async () => {\n  if (!usesProvider.value || props.provider === undefined || busyModel.value) return\n  busyModel.value = true\n  const response = props.provider({\n    currentPage: currentPageNumber.value,\n    filter: props.filter,\n    sortBy: sortByModel.value,\n    perPage: perPageNumber.value,\n  })\n  try {\n    const items = response instanceof Promise ? await response : response\n\n    if (items === undefined) return\n    internalItems.value = items\n  } finally {\n    // Potential race condition could occur if the user explicitly sets the busy value to a different value while the response promise is executing\n    // which would have been the users choice.\n    // eslint-disable-next-line require-atomic-updates\n    busyModel.value = false\n  }\n}\n\nconst providerPropsWatch = async (prop: string, val: unknown, oldVal: unknown) => {\n  if (deepEqual(val, oldVal)) return\n\n  //stop provide when paging\n  const inNoProvider = (key: NoProviderTypes) => props.noProvider?.includes(key) === true\n  const noProvideWhenPaging =\n    (prop === 'currentPage' || prop === 'perPage') &&\n    (inNoProvider('paging') || props.noProviderPaging === true)\n  const noProvideWhenFiltering =\n    prop === 'filter' && (inNoProvider('filtering') || props.noProviderFiltering === true)\n  const noProvideWhenSorting =\n    (prop === 'sortBy' || prop === 'sortDesc') &&\n    (inNoProvider('sorting') || props.noProviderSorting === true)\n\n  if (noProvideWhenPaging || noProvideWhenFiltering || noProvideWhenSorting) return\n\n  if (usesProvider.value === true) {\n    await callItemsProvider()\n  }\n\n  if (!(prop === 'currentPage' || prop === 'perPage')) {\n    emit('filtered', [...computedItems.value])\n  }\n}\n\nwatch(\n  () => props.filter,\n  (filter, oldFilter) => {\n    providerPropsWatch('filter', filter, oldFilter)\n\n    if (filter === oldFilter || usesProvider.value) return\n    if (!filter) {\n      emit('filtered', [...computedItems.value])\n    }\n  }\n)\nwatch(currentPageNumber, (val, oldVal) => {\n  providerPropsWatch('currentPage', val, oldVal)\n})\nwatch(perPageNumber, (val, oldVal) => {\n  providerPropsWatch('perPage', val, oldVal)\n})\nwatch(\n  sortByModel,\n  (val, oldVal) => {\n    providerPropsWatch('sortBy', val, oldVal)\n  },\n  {deep: true}\n)\n\nwatch(\n  () => props.provider,\n  (newValue) => {\n    // Reset the internal values if the provider stops getting used\n    if (newValue === undefined) {\n      internalItems.value = []\n      return\n    }\n    // Otherwise we should refresh the table on such a change\n    callItemsProvider()\n  }\n)\n\nonMounted(callItemsProvider)\n\nconst exposedSelectableUtilities = {\n  clearSelected: () => {\n    if (!props.selectable) return\n    selectedItemsSetUtilities.clear()\n  },\n  selectAllRows: () => {\n    if (!props.selectable || props.selectMode === 'single') return\n    selectedItemsToSet.value = new Set(computedItems.value)\n  },\n  selectRow: (index: number) => {\n    if (!props.selectable) return\n    const item = computedItems.value[index]\n    if (!item || selectedItemsSetUtilities.has(item)) return\n    if (props.selectMode === 'single') {\n      selectedItemsSetUtilities.set([item])\n    } else {\n      selectedItemsSetUtilities.add(item)\n    }\n  },\n  unselectRow: (index: number) => {\n    if (!props.selectable) return\n    const item = computedItems.value[index]\n    if (!item || !selectedItemsSetUtilities.has(item)) return\n    selectedItemsSetUtilities.delete(item)\n  },\n  isRowSelected: (index: number) => {\n    if (!props.selectable) return false\n    const item = computedItems.value[index]\n    return selectedItemsSetUtilities.has(item)\n  },\n} as const\n\nconst boundBTableLiteEmits = {\n  onHeadClicked: (fieldKey, field, event, isFooter = false) => {\n    emit('head-clicked', fieldKey, field, event, isFooter)\n    handleFieldSorting(field)\n  },\n  onRowClicked: (row, index, e) => {\n    if (props.noSelectOnClick === false) {\n      handleRowSelection(row, index, e.shiftKey, e.ctrlKey, e.metaKey)\n    }\n    emit('row-clicked', row, index, e)\n  },\n  onRowDblclicked: (...args) => emit('row-dblclicked', ...args),\n  onRowContextmenu: (...args) => emit('row-contextmenu', ...args),\n  onRowHovered: (...args) => emit('row-hovered', ...args),\n  onRowUnhovered: (...args) => emit('row-unhovered', ...args),\n  onRowMiddleClicked: (...args) => emit('row-middle-clicked', ...args),\n} as const satisfies {\n  [K in keyof BTableLiteEmits<Items> as CamelCase<`on-${K & string}`>]: (\n    ...args: BTableLiteEmits<Items>[K]\n  ) => void\n}\nconst computedLiteProps = computed(() => ({\n  ...pick(props, [...btableLiteProps, ...btableSimpleProps]),\n  tableAttrs: {\n    ariaBusy: busyModel.value,\n  },\n  items: computedDisplayItems.value,\n  fields: computedFields.value as TableFieldRaw<Items>[],\n  tableClass: tableClasses.value,\n  tbodyTrClass: getRowClasses,\n  fieldColumnClass: getFieldColumnClasses,\n  id: computedId.value,\n  ...boundBTableLiteEmits,\n}))\n\ndefineExpose({\n  // The row selection methods are really for compat. Users should probably use the v-model though\n  ...exposedSelectableUtilities,\n  items: computedItems,\n  displayItems: computedDisplayItems,\n  getStringValue,\n  refresh: callItemsProvider,\n})\n</script>\n"],"names":["_createElementBlock","_renderSlot","_unref","_hoisted_2","_useSlots","label","BTh","BTd","_openBlock","_createBlock","BTableSimple","_hoisted_1","_createVNode","BThead","_normalizeClass","BTr","_Fragment","_renderList","_mergeProps","_createTextVNode","_toDisplayString","BTbody","_resolveDynamicComponent","items","detailsTdClass","BTfoot","_createElementVNode","_useModel","BTableLite","_createSlots","_withCtx","_normalizeProps","SortIcon"],"mappings":"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"}