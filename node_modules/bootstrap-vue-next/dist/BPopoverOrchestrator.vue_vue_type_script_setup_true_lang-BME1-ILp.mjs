import { defineComponent, createBlock, openBlock, unref, withCtx, createCommentVNode, normalizeProps, mergeProps } from "vue";
import { u as useDefaults } from "./useDefaults-DESCdb0p.mjs";
import { _ as _sfc_main$2 } from "./BOrchestrator.vue_vue_type_script_setup_true_lang-Dz_rJ4Bq.mjs";
import { _ as _sfc_main$1 } from "./ConditionalTeleport.vue_vue_type_script_lang-Cp-egLmm.mjs";
import "./BootstrapVueOptions-DSytNWdb.mjs";
import "./ConditionalWrapper.vue_vue_type_script_lang-IX_NpHH-.mjs";
import "./useTransitions-BAT154ve.mjs";
import "./tableUtils-Jp7dzXjS.mjs";
import { usePopover } from "./src/composables/usePopover/index.mjs";
const _sfc_main = /* @__PURE__ */ defineComponent({
  __name: "BPopoverOrchestrator",
  props: {
    teleportDisabled: { type: Boolean, default: false },
    teleportTo: { default: "body" }
  },
  setup(__props, { expose: __expose }) {
    const _props = __props;
    const props = useDefaults(_props, "BPopoverOrchestrator");
    const tools = usePopover();
    let renderOrchestrator = false;
    if (!tools._isOrchestratorInstalled.value) {
      renderOrchestrator = true;
    }
    if (process.env.NODE_ENV === "development") {
      console.warn("BPopoverOrchestrator is deprecated, use BOrchestrator instead");
    }
    __expose({
      ...tools
    });
    return (_ctx, _cache) => {
      return openBlock(), createBlock(_sfc_main$1, {
        to: unref(props).teleportTo,
        disabled: unref(props).teleportDisabled
      }, {
        default: withCtx(() => [
          unref(renderOrchestrator) ? (openBlock(), createBlock(_sfc_main$2, normalizeProps(mergeProps({ key: 0 }, _ctx.$attrs)), null, 16)) : createCommentVNode("", true)
        ]),
        _: 1
      }, 8, ["to", "disabled"]);
    };
  }
});
export {
  _sfc_main as _
};
//# sourceMappingURL=BPopoverOrchestrator.vue_vue_type_script_setup_true_lang-BME1-ILp.mjs.map
