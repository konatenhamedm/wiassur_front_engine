{"version":3,"file":"BFormGroup.vue_vue_type_script_setup_true_lang-BmZN8qcE.mjs","sources":["../src/utils/props.ts","../src/components/BFormGroup/BFormGroup.vue"],"sourcesContent":["// Suffix can be a falsey value so nothing is appended to string\n// (helps when looping over props & some shouldn't change)\n\nimport {upperFirst} from './stringUtils'\n\n/**\n * Use data last parameters to allow for currying\n *\n * @param suffix\n * @param value\n * @returns\n */\nexport const suffixPropName = (suffix: string, value: string): string =>\n  value + (suffix ? upperFirst(suffix) : '')\n","<template>\n  <component\n    :is=\"isFieldset ? 'fieldset' : 'div'\"\n    :id=\"computedId\"\n    :disabled=\"isFieldset ? props.disabled : null\"\n    :role=\"isFieldset ? null : 'group'\"\n    :aria-invalid=\"computedAriaInvalid\"\n    :aria-labelledby=\"isFieldset && isHorizontal ? labelId : null\"\n    :class=\"[stateClass, {'was-validated': props.validated}]\"\n    class=\"b-form-group\"\n  >\n    <ContentTemplate.define>\n      <BFormInvalidFeedback\n        v-if=\"slots['invalid-feedback'] || props.invalidFeedback\"\n        :id=\"invalidFeedbackId\"\n        :aria-live=\"props.feedbackAriaLive\"\n        :state=\"computedState\"\n        :tooltip=\"props.tooltip\"\n      >\n        <slot name=\"invalid-feedback\">{{ props.invalidFeedback }}</slot>\n      </BFormInvalidFeedback>\n      <BFormValidFeedback\n        v-if=\"slots['valid-feedback'] || props.validFeedback\"\n        :id=\"validFeedbackId\"\n        :aria-live=\"props.feedbackAriaLive\"\n        :state=\"computedState\"\n        :tooltip=\"props.tooltip\"\n      >\n        <slot name=\"valid-feedback\">{{ props.validFeedback }}</slot>\n      </BFormValidFeedback>\n      <BFormText v-if=\"slots.description || props.description\" :id=\"descriptionId\">\n        <slot name=\"description\">{{ props.description }}</slot>\n      </BFormText>\n    </ContentTemplate.define>\n    <LabelContentTemplate.define>\n      <template v-if=\"slots.label || props.label || isHorizontal\">\n        <BCol v-if=\"isHorizontal\" v-bind=\"labelColProps\">\n          <component\n            :is=\"labelTag\"\n            :id=\"labelId\"\n            :for=\"computedLabelFor || null\"\n            :tabindex=\"isFieldset ? '-1' : null\"\n            :class=\"labelClasses\"\n            @click=\"isFieldset ? onLegendClick : null\"\n          >\n            <slot name=\"label\">{{ props.label }}</slot>\n          </component>\n        </BCol>\n        <component\n          :is=\"labelTag\"\n          v-else\n          :id=\"labelId\"\n          :for=\"computedLabelFor || null\"\n          :tabindex=\"isFieldset ? '-1' : null\"\n          :class=\"labelClasses\"\n          @click=\"isFieldset ? onLegendClick : null\"\n        >\n          <slot name=\"label\">{{ props.label }}</slot>\n        </component>\n      </template>\n    </LabelContentTemplate.define>\n    <!-- End of definitions -->\n    <BFormRow v-if=\"isHorizontal\">\n      <LabelContentTemplate.reuse />\n      <BCol v-bind=\"contentColProps\" ref=\"_content\">\n        <slot\n          :id=\"computedId\"\n          :aria-describedby=\"null\"\n          :description-id=\"descriptionId\"\n          :label-id=\"labelId\"\n        />\n        <ContentTemplate.reuse />\n      </BCol>\n    </BFormRow>\n    <template v-else>\n      <div v-if=\"props.floating && !isHorizontal\" ref=\"_content\" class=\"form-floating\">\n        <slot\n          :id=\"computedId\"\n          :aria-describedby=\"null\"\n          :description-id=\"descriptionId\"\n          :label-id=\"labelId\"\n        />\n        <LabelContentTemplate.reuse />\n        <ContentTemplate.reuse />\n      </div>\n      <template v-else>\n        <LabelContentTemplate.reuse />\n        <slot\n          :id=\"computedId\"\n          :aria-describedby=\"null\"\n          :description-id=\"descriptionId\"\n          :label-id=\"labelId\"\n        />\n        <ContentTemplate.reuse />\n      </template>\n    </template>\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, provide, type Ref, ref, toRef, useTemplateRef} from 'vue'\nimport {useAriaInvalid} from '../../composables/useAriaInvalid'\nimport {attemptFocus, isVisible} from '../../utils/dom'\nimport BCol from '../BContainer/BCol.vue'\nimport BFormInvalidFeedback from '../BForm/BFormInvalidFeedback.vue'\nimport BFormRow from '../BForm/BFormRow.vue'\nimport BFormText from '../BForm/BFormText.vue'\nimport BFormValidFeedback from '../BForm/BFormValidFeedback.vue'\nimport {suffixPropName} from '../../utils/props'\nimport {useStateClass} from '../../composables/useStateClass'\nimport {useId} from '../../composables/useId'\nimport {createReusableTemplate} from '@vueuse/core'\nimport type {BFormGroupProps, BFormGroupSlots} from '../../types'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {formGroupKey} from '../../utils/keys'\n\nconst INPUTS = ['input', 'select', 'textarea']\n\nconst _props = withDefaults(defineProps<BFormGroupProps>(), {\n  ariaInvalid: undefined,\n  contentCols: undefined,\n  contentColsLg: undefined,\n  contentColsMd: undefined,\n  contentColsSm: undefined,\n  contentColsXl: undefined,\n  description: undefined,\n  disabled: false,\n  feedbackAriaLive: 'assertive',\n  floating: false,\n  id: undefined,\n  invalidFeedback: undefined,\n  label: undefined,\n  labelAlign: undefined,\n  labelAlignLg: undefined,\n  labelAlignMd: undefined,\n  labelAlignSm: undefined,\n  labelAlignXl: undefined,\n  labelClass: undefined,\n  labelCols: undefined,\n  labelColsLg: undefined,\n  labelColsMd: undefined,\n  labelColsSm: undefined,\n  labelColsXl: undefined,\n  labelFor: undefined,\n  labelSize: undefined,\n  labelVisuallyHidden: false,\n  state: null,\n  tooltip: false,\n  validFeedback: undefined,\n  validated: false,\n})\nconst props = useDefaults(_props, 'BFormGroup')\nconst slots = defineSlots<BFormGroupSlots>()\n\nconst LabelContentTemplate = createReusableTemplate()\nconst ContentTemplate = createReusableTemplate()\n\nconst computedState = toRef(() => props.state)\nconst childId = ref<Ref<string>[]>([])\nprovide(formGroupKey, (id) => {\n  childId.value = [id]\n\n  return {\n    state: computedState,\n  }\n})\nconst computedLabelFor = computed(() => {\n  if (props.labelFor !== undefined) return props.labelFor\n  if (childId.value[0] && childId.value[0].value) return childId.value[0].value\n  return null\n})\n\nconst breakPoints = ['xs', 'sm', 'md', 'lg', 'xl']\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst getColProps = (props: any, prefix: string) =>\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  breakPoints.reduce((result: any, breakpoint: string) => {\n    const suffix = suffixPropName(breakpoint === 'xs' ? '' : breakpoint, `${prefix}Cols`)\n    let propValue = props[suffix]\n    propValue = propValue === '' ? true : propValue || false\n\n    if (!(typeof propValue === 'boolean') && propValue !== 'auto') {\n      const val = Number.parseInt(propValue)\n      propValue = Number.isNaN(val) ? 0 : val\n      propValue = propValue > 0 ? propValue : false\n    }\n\n    if (propValue) {\n      if (breakpoint === 'xs') {\n        result[typeof propValue === 'boolean' ? 'col' : 'cols'] = propValue\n      } else {\n        result[breakpoint || (typeof propValue === 'boolean' ? 'col' : 'cols')] = propValue\n      }\n    }\n    return result\n  }, {})\n\nconst content = useTemplateRef<HTMLDivElement | null>('_content')\n\nconst contentColProps = computed(() => getColProps(props, 'content'))\nconst labelAlignClasses = computed(() =>\n  ((props: BFormGroupProps, prefix: string) =>\n    breakPoints.reduce((result: string[], breakpoint) => {\n      const suffix = suffixPropName(\n        breakpoint === 'xs' ? '' : breakpoint,\n        `${prefix}Align`\n      ) as keyof BFormGroupProps\n      const propValue: string = props[suffix] || null\n      if (propValue) {\n        if (breakpoint === 'xs') {\n          result.push(`text-${propValue}`)\n        } else {\n          result.push(`text-${breakpoint}-${propValue}`)\n        }\n      }\n      return result\n    }, []))(props, 'label')\n)\nconst labelColProps = computed(() => getColProps(props, 'label'))\nconst isHorizontal = computed(\n  () => Object.keys(contentColProps.value).length > 0 || Object.keys(labelColProps.value).length > 0\n)\n\nconst stateClass = useStateClass(computedState)\nconst computedAriaInvalid = useAriaInvalid(() => props.ariaInvalid, computedState)\n\nconst onLegendClick = (event: Readonly<MouseEvent>) => {\n  if (computedLabelFor.value || content.value === null) return\n\n  const {target} = event\n  const tagName = target ? (target as HTMLElement).tagName : ''\n\n  if ([...INPUTS, 'a', 'button', 'label'].indexOf(tagName) !== -1) return\n\n  const inputs = [\n    ...content.value.querySelectorAll(INPUTS.map((v) => `${v}:not([disabled])`).join()),\n  ].filter(isVisible)\n  const [inp] = inputs\n  if (inputs.length === 1 && inp instanceof HTMLElement) {\n    attemptFocus(inp)\n  }\n}\n\nconst computedId = useId(() => props.id)\nconst labelId = useId(undefined, '_BV_label_')\nconst labelTag = computed(() => (!computedLabelFor.value ? 'legend' : 'label'))\nconst labelClasses = computed(() => [\n  isHorizontal.value ? 'col-form-label' : 'form-label',\n  {\n    'bv-no-focus-ring': !computedLabelFor.value,\n    'col-form-label': isHorizontal.value || !computedLabelFor.value,\n    'pt-0': !isHorizontal.value && !computedLabelFor.value,\n    'd-block': !isHorizontal.value && computedLabelFor.value,\n    [`col-form-label-${props.labelSize}`]: !!props.labelSize,\n    'visually-hidden': props.labelVisuallyHidden,\n  },\n  labelAlignClasses.value,\n  props.labelClass,\n])\n\nconst invalidFeedbackId = useId(undefined, '_BV_feedback_invalid_')\n\nconst validFeedbackId = useId(undefined, '_BV_feedback_valid_')\nconst descriptionId = useId(undefined, '_BV_description_')\n\nconst isFieldset = computed(() => !computedLabelFor.value)\n</script>\n"],"names":["_useSlots","props","_openBlock","_createBlock","_resolveDynamicComponent","_unref","_createVNode","BFormInvalidFeedback","_renderSlot","_createTextVNode","_toDisplayString","BFormValidFeedback","BFormText","_createElementBlock","_Fragment","BCol","BFormRow","_mergeProps"],"mappings":"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"}