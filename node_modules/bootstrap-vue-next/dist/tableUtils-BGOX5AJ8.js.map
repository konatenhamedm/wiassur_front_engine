{"version":3,"file":"tableUtils-BGOX5AJ8.js","sources":["../src/utils/tableUtils.ts"],"sourcesContent":["import {titleCase} from './stringUtils'\nimport type {TableFieldRaw} from '../types/TableTypes'\nimport type {Breakpoint, BTableLiteProps, BTableSimpleProps} from '../types'\n\nexport const getTableFieldHeadLabel = (field: Readonly<TableFieldRaw<unknown>>) =>\n  typeof field === 'string'\n    ? titleCase(field)\n    : field.label !== undefined\n      ? field.label\n      : typeof field.key === 'string'\n        ? titleCase(field.key)\n        : field.key\n\nexport const btableSimpleProps = Object.freeze(\n  Object.keys({\n    bordered: 0,\n    borderless: 0,\n    borderVariant: 0,\n    captionTop: 0,\n    dark: 0,\n    fixed: 0,\n    hover: 0,\n    id: 0,\n    noBorderCollapse: 0,\n    outlined: 0,\n    responsive: 0,\n    small: 0,\n    stacked: 0,\n    stickyHeader: 0,\n    striped: 0,\n    stripedColumns: 0,\n    variant: 0,\n    tableAttrs: 0,\n    tableClass: 0,\n  } satisfies Record<keyof BTableSimpleProps, 0>)\n) as readonly (keyof BTableSimpleProps)[]\n\nexport const btableLiteProps = Object.freeze(\n  Object.keys({\n    align: 0,\n    caption: 0,\n    detailsTdClass: 0,\n    fieldColumnClass: 0,\n    fields: 0,\n    footClone: 0,\n    footRowVariant: 0,\n    footVariant: 0,\n    headRowVariant: 0,\n    headVariant: 0,\n    items: 0,\n    labelStacked: 0,\n    modelValue: 0,\n    primaryKey: 0,\n    tbodyClass: 0,\n    tbodyTrAttrs: 0,\n    tbodyTrClass: 0,\n    tfootClass: 0,\n    tfootTrClass: 0,\n    theadClass: 0,\n    theadTrClass: 0,\n  } satisfies Record<keyof Omit<BTableLiteProps<unknown>, keyof BTableSimpleProps>, 0>)\n) as readonly (keyof Omit<BTableLiteProps<unknown>, keyof BTableSimpleProps>)[]\n\nexport const getDataLabelAttr = (\n  props: {stacked: boolean | Breakpoint | undefined; labelStacked: boolean | undefined},\n  label: string\n) => (props.stacked && props.labelStacked !== true ? {'data-label': label} : undefined)\n"],"names":["btableSimpleProps","Object","freeze","keys","bordered","borderless","borderVariant","captionTop","dark","fixed","hover","id","noBorderCollapse","outlined","responsive","small","stacked","stickyHeader","striped","stripedColumns","variant","tableAttrs","tableClass","btableLiteProps","align","caption","detailsTdClass","fieldColumnClass","fields","footClone","footRowVariant","footVariant","headRowVariant","headVariant","items","labelStacked","modelValue","primaryKey","tbodyClass","tbodyTrAttrs","tbodyTrClass","tfootClass","tfootTrClass","theadClass","theadTrClass","props","label","field","titleCase","key"],"mappings":"0DAaaA,EAAoBC,OAAOC,OACtCD,OAAOE,KAAK,CACVC,SAAU,EACVC,WAAY,EACZC,cAAe,EACfC,WAAY,EACZC,KAAM,EACNC,MAAO,EACPC,MAAO,EACPC,GAAI,EACJC,iBAAkB,EAClBC,SAAU,EACVC,WAAY,EACZC,MAAO,EACPC,QAAS,EACTC,aAAc,EACdC,QAAS,EACTC,eAAgB,EAChBC,QAAS,EACTC,WAAY,EACZC,WAAY,KAIHC,EAAkBtB,OAAOC,OACpCD,OAAOE,KAAK,CACVqB,MAAO,EACPC,QAAS,EACTC,eAAgB,EAChBC,iBAAkB,EAClBC,OAAQ,EACRC,UAAW,EACXC,eAAgB,EAChBC,YAAa,EACbC,eAAgB,EAChBC,YAAa,EACbC,MAAO,EACPC,aAAc,EACdC,WAAY,EACZC,WAAY,EACZC,WAAY,EACZC,aAAc,EACdC,aAAc,EACdC,WAAY,EACZC,aAAc,EACdC,WAAY,EACZC,aAAc,oFAIc,CAC9BC,EACAC,IACID,EAAM7B,UAAkC,IAAvB6B,EAAMV,aAAwB,CAAC,aAAcW,QAAS,iCA9DtCC,GACpB,iBAAVA,EACHC,EAAAA,UAAUD,QACM,IAAhBA,EAAMD,MACJC,EAAMD,MACe,iBAAdC,EAAME,IACXD,EAAAA,UAAUD,EAAME,KAChBF,EAAME"}