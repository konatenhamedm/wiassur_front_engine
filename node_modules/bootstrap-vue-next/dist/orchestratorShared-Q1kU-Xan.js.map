{"version":3,"file":"orchestratorShared-Q1kU-Xan.js","sources":["../src/composables/orchestratorShared.ts"],"sourcesContent":["import {\n  type ComponentPublicInstance,\n  inject,\n  nextTick,\n  provide,\n  type Ref,\n  ref,\n  toValue,\n  type WatchHandle,\n} from 'vue'\nimport type {\n  ControllerKey,\n  OrchestratorArrayValue,\n  PromiseWithComponent,\n  PromiseWithComponentInternal,\n} from '../types/ComponentOrchestratorTypes'\nimport type {BvTriggerableEvent} from '../utils'\nimport {orchestratorRegistryKey} from '../utils/keys'\n\nexport function buildPromise<TComponent, TParam, TArrayValue extends OrchestratorArrayValue>(\n  _id: ControllerKey,\n  store: Ref<TArrayValue[]>\n): {\n  value: PromiseWithComponent<TComponent, TParam>\n  resolve: (value: BvTriggerableEvent | boolean | null) => void\n  stop: WatchHandle | undefined\n} {\n  let resolveFunc: (value: BvTriggerableEvent | boolean | null) => void = () => {}\n\n  const promise = new Promise<BvTriggerableEvent | boolean | null>((resolve) => {\n    resolveFunc = resolve\n  }) as PromiseWithComponent<TComponent, TParam>\n\n  type RefWithMethods = ComponentPublicInstance<TComponent> & {\n    show?: () => void\n    hide?: (trigger?: string, noEmit?: boolean) => void\n    toggle?: () => void\n  }\n  Object.assign(promise, {\n    id: _id,\n    ref: null as ComponentPublicInstance<TComponent> | null,\n    show() {\n      const refWithMethods = this.ref as RefWithMethods | null\n      if (refWithMethods?.show) {\n        refWithMethods.show()\n      } else return this.set({modelValue: true} as unknown as Partial<TParam>)\n      return promise\n    },\n    hide(trigger?: string) {\n      const refWithMethods = this.ref as RefWithMethods | null\n      if (refWithMethods?.hide) {\n        refWithMethods.hide(trigger, true)\n      } else return this.set({modelValue: false} as unknown as Partial<TParam>)\n      return promise\n    },\n    toggle() {\n      const currentItem = this.get() as TParam & {modelValue?: unknown}\n      const refWithMethods = this.ref as RefWithMethods | null\n      if (refWithMethods?.toggle) {\n        refWithMethods.toggle()\n      } else return this.set({modelValue: !currentItem?.modelValue} as unknown as Partial<TParam>)\n      return promise\n    },\n    get(): TParam | undefined {\n      return store.value.find((el) => el._self === _id) as TParam | undefined\n    },\n    set(val: Partial<TParam>) {\n      const itemIndex = store.value.findIndex((el) => el._self === _id)\n      const item = store.value[itemIndex]\n      if (item) {\n        const v = {...toValue(item), ...toValue(val)}\n        if (item.modelValue !== v.modelValue) {\n          item['onUpdate:modelValue']?.(v.modelValue as boolean)\n        }\n        store.value.splice(itemIndex, 1, {\n          ...v,\n          title: toValue((v as Record<string, unknown>).title),\n          body: toValue((v as Record<string, unknown>).body),\n          modelValue: toValue(v.modelValue),\n        } as TArrayValue)\n      }\n      return promise\n    },\n    async destroy() {\n      const item = store.value.find((el) => el._self === _id)\n      if (!item) return\n      item.promise.stop?.()\n      if (item.modelValue) {\n        await new Promise((resolve) => {\n          const prev = item['onHidden']\n          item['onHidden'] = (e) => {\n            prev?.(e)\n            resolve(e)\n          }\n          nextTick(() => {\n            this.hide('destroy')\n          })\n        })\n      }\n      store.value.splice(\n        store.value.findIndex((el) => el._self === _id),\n        1\n      )\n    },\n    async [Symbol.asyncDispose]() {\n      await this.destroy()\n    },\n  } as PromiseWithComponentInternal<TComponent, TParam>)\n\n  return {\n    value: promise,\n    resolve: resolveFunc,\n    stop: undefined as WatchHandle | undefined,\n  }\n}\n\nexport const _newOrchestratorRegistry = (): {\n  store: Ref<OrchestratorArrayValue[]>\n  _isOrchestratorInstalled: Ref<boolean>\n  _isToastAppend: Ref<boolean>\n} => ({\n  store: ref<OrchestratorArrayValue[]>([]),\n  _isOrchestratorInstalled: ref(false),\n  _isToastAppend: ref(false),\n})\n\nexport const useOrchestratorRegistry = () => {\n  const orchestratorRegistry = inject(orchestratorRegistryKey, undefined)\n\n  if (orchestratorRegistry) {\n    return orchestratorRegistry\n  }\n  const newOrchestratorRegistry = _newOrchestratorRegistry()\n  provide(orchestratorRegistryKey, newOrchestratorRegistry)\n  return newOrchestratorRegistry\n}\n"],"names":["_newOrchestratorRegistry","store","ref","_isOrchestratorInstalled","_isToastAppend","_id","resolveFunc","promise","Promise","resolve","Object","assign","id","show","refWithMethods","this","set","modelValue","hide","trigger","toggle","currentItem","get","value","find","el","_self","val","itemIndex","findIndex","item","v","toValue","splice","title","body","destroy","stop","prev","e","nextTick","Symbol","asyncDispose","orchestratorRegistry","inject","orchestratorRegistryKey","newOrchestratorRegistry","provide"],"mappings":"oEAoHO,MAAMA,EAA2B,KAAA,CAKtCC,MAAOC,EAAAA,IAA8B,IACrCC,yBAA0BD,EAAAA,KAAI,GAC9BE,eAAgBF,EAAAA,KAAI,6DAxGf,SACLG,EACAJ,GAMA,IAAIK,EAAoE,OAExE,MAAMC,EAAU,IAAIC,QAA8CC,IAChEH,EAAcG,IA+EhB,OAvEAC,OAAOC,OAAOJ,EAAS,CACrBK,GAAIP,EACJH,IAAK,KACL,IAAAW,GACE,MAAMC,EAAiBC,KAAKb,IAC5B,OAAIY,GAAgBD,MAClBC,EAAeD,OAEVN,GADOQ,KAAKC,IAAI,CAACC,YAAY,GAEtC,EACA,IAAAC,CAAKC,GACH,MAAML,EAAiBC,KAAKb,IAC5B,OAAIY,GAAgBI,MAClBJ,EAAeI,KAAKC,GAAS,GAExBZ,GADOQ,KAAKC,IAAI,CAACC,YAAY,GAEtC,EACA,MAAAG,GACE,MAAMC,EAAcN,KAAKO,MACnBR,EAAiBC,KAAKb,IAC5B,OAAIY,GAAgBM,QAClBN,EAAeM,SAEVb,GADOQ,KAAKC,IAAI,CAACC,YAAaI,GAAaJ,YAEpD,EACAK,IAAA,IACSrB,EAAMsB,MAAMC,KAAMC,GAAOA,EAAGC,QAAUrB,GAE/C,GAAAW,CAAIW,GACF,MAAMC,EAAY3B,EAAMsB,MAAMM,UAAWJ,GAAOA,EAAGC,QAAUrB,GACvDyB,EAAO7B,EAAMsB,MAAMK,GACzB,GAAIE,EAAM,CACR,MAAMC,EAAI,IAAIC,EAAAA,QAAQF,MAAUE,EAAAA,QAAQL,IACpCG,EAAKb,aAAec,EAAEd,YACxBa,EAAK,yBAAyBC,EAAEd,YAElChB,EAAMsB,MAAMU,OAAOL,EAAW,EAAG,IAC5BG,EACHG,MAAOF,EAAAA,QAASD,EAA8BG,OAC9CC,KAAMH,EAAAA,QAASD,EAA8BI,MAC7ClB,WAAYe,EAAAA,QAAQD,EAAEd,aAE1B,CACA,OAAOV,CACT,EACA,aAAM6B,GACJ,MAAMN,EAAO7B,EAAMsB,MAAMC,KAAMC,GAAOA,EAAGC,QAAUrB,GAC9CyB,IACLA,EAAKvB,QAAQ8B,SACTP,EAAKb,kBACD,IAAIT,QAASC,IACjB,MAAM6B,EAAOR,EAAe,SAC5BA,EAAe,SAAKS,IAClBD,IAAOC,GACP9B,EAAQ8B,IAEVC,EAAAA,SAAS,KACPzB,KAAKG,KAAK,eAIhBjB,EAAMsB,MAAMU,OACVhC,EAAMsB,MAAMM,UAAWJ,GAAOA,EAAGC,QAAUrB,GAC3C,GAEJ,EACA,MAAOoC,OAAOC,sBACN3B,KAAKqB,SACb,IAGK,CACLb,MAAOhB,EACPE,QAASH,EACT+B,UAAM,EAEV,kCAYuC,KACrC,MAAMM,EAAuBC,EAAAA,OAAOC,EAAAA,6BAAyB,GAE7D,GAAIF,EACF,OAAOA,EAET,MAAMG,EAA0B9C,IAEhC,OADA+C,EAAAA,QAAQF,EAAAA,wBAAyBC,GAC1BA"}