{"version":3,"file":"BFormCheckboxGroup.vue_vue_type_script_setup_true_lang-DZLhUeb2.js","sources":["../src/components/BFormCheckbox/BFormCheckbox.vue","../src/components/BFormCheckbox/BFormCheckboxGroup.vue"],"sourcesContent":["<template>\n  <ConditionalWrapper\n    :skip=\"isButtonGroup\"\n    v-bind=\"props.wrapperAttrs\"\n    :class=\"computedWrapperClasses\"\n  >\n    <input\n      :id=\"computedId\"\n      ref=\"_input\"\n      v-model=\"localValue\"\n      :class=\"computedInputClasses\"\n      type=\"checkbox\"\n      :disabled=\"props.disabled || parentData?.disabled.value\"\n      :required=\"computedRequired || undefined\"\n      :name=\"props.name || parentData?.name.value\"\n      :form=\"props.form || parentData?.form.value\"\n      :aria-label=\"props.ariaLabel\"\n      :aria-labelledby=\"props.ariaLabelledby\"\n      :aria-required=\"computedRequired || undefined\"\n      :value=\"props.value\"\n      :true-value=\"props.value\"\n      :false-value=\"props.uncheckedValue\"\n      :indeterminate=\"indeterminate || undefined\"\n      v-bind=\"processedAttrs.inputAttrs\"\n    />\n    <label v-if=\"hasDefaultSlot || props.plain === false\" :for=\"computedId\" :class=\"labelClasses\">\n      <slot />\n    </label>\n  </ConditionalWrapper>\n</template>\n\n<script setup lang=\"ts\">\nimport {useFocus} from '@vueuse/core'\nimport {computed, inject, useAttrs, useTemplateRef} from 'vue'\nimport {getClasses, getInputClasses, getLabelClasses} from '../../composables/useFormCheck'\nimport type {BFormCheckboxProps} from '../../types/ComponentProps'\nimport {checkboxGroupKey} from '../../utils/keys'\nimport ConditionalWrapper from '../ConditionalWrapper.vue'\nimport {isEmptySlot} from '../../utils/dom'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {CheckboxValue} from '../../types/CheckboxTypes'\nimport {useId} from '../../composables/useId'\nimport type {BFormCheckboxSlots} from '../../types'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst _props = withDefaults(\n  defineProps<Omit<BFormCheckboxProps, 'modelValue' | 'indeterminate'>>(),\n  {\n    wrapperAttrs: undefined,\n    inputClass: undefined,\n    ariaLabel: undefined,\n    ariaLabelledby: undefined,\n    autofocus: false,\n    button: false,\n    buttonGroup: false,\n    buttonVariant: null,\n    disabled: false,\n    form: undefined,\n    id: undefined,\n    inline: false,\n    name: undefined,\n    plain: false,\n    required: undefined,\n    reverse: false,\n    size: undefined,\n    state: null,\n    switch: false,\n    uncheckedValue: false,\n    value: true,\n  }\n)\nconst props = useDefaults(_props, 'BFormCheckbox')\nconst slots = defineSlots<BFormCheckboxSlots>()\nconst attrs = useAttrs()\n\nconst modelValue = defineModel<BFormCheckboxProps['modelValue']>({\n  default: undefined,\n})\nconst indeterminate = defineModel<Exclude<BFormCheckboxProps['indeterminate'], undefined>>(\n  'indeterminate',\n  {\n    default: false,\n  }\n)\n\nconst processedAttrs = computed(() => {\n  const {class: wrapperClass, ...inputAttrs} = attrs\n  return {wrapperClass, inputAttrs}\n})\n\nconst computedId = useId(() => props.id, 'form-check')\n\nconst parentData = inject(checkboxGroupKey, null)\n\nconst input = useTemplateRef('_input')\n\nconst {focused} = useFocus(input, {\n  initialValue: props.autofocus,\n})\n\nconst hasDefaultSlot = computed(() => !isEmptySlot(slots.default))\n\nconst localValue = computed({\n  get: () => (parentData ? parentData.modelValue.value : modelValue.value),\n  set: (newVal) => {\n    if (newVal === undefined) return\n    // Indeterminate is implicitly cleared when the checked state is changed to any value\n    //  by the user.  We reflect that here by setting our indetermiate model to false\n    //  which will emit the indeterminate event to the parent\n    indeterminate.value = false\n    if (parentData !== null && Array.isArray(newVal)) {\n      // The type cast isn't perfect. Array.isArray detects CheckboxValue.unknown[],\n      // but since it's parentData, it should always be CheckboxValue[]\n      // It doesn't quite work when props.value is an [], but this is more of a Vue issue\n      parentData.modelValue.value = newVal as CheckboxValue[]\n      return\n    }\n    modelValue.value = newVal as CheckboxValue\n  },\n})\n\nconst computedRequired = computed(\n  () => !!(props.name ?? parentData?.name.value) && (props.required || parentData?.required.value)\n)\n\nconst isButtonGroup = computed(() => props.buttonGroup || (parentData?.buttons.value ?? false))\n\nconst classesObject = computed(() => ({\n  plain: props.plain || (parentData?.plain.value ?? false),\n  button: props.button || (parentData?.buttons.value ?? false),\n  inline: props.inline || (parentData?.inline.value ?? false),\n  reverse: props.reverse || (parentData?.reverse.value ?? false),\n  switch: props.switch || (parentData?.switch.value ?? false),\n  state:\n    props.state === true || props.state === false ? props.state : (parentData?.state.value ?? null),\n  size: props.size ?? parentData?.size.value ?? 'md', // This is where the true default is made\n  buttonVariant: props.buttonVariant ?? parentData?.buttonVariant.value ?? 'secondary', // This is where the true default is made\n  hasDefaultSlot: hasDefaultSlot.value,\n}))\nconst wrapperClasses = getClasses(classesObject)\nconst computedWrapperClasses = computed(() => [\n  wrapperClasses.value,\n  processedAttrs.value.wrapperClass,\n])\nconst inputClasses = getInputClasses(classesObject)\nconst computedInputClasses = computed(() => [inputClasses.value, props.inputClass])\nconst labelClasses = getLabelClasses(classesObject)\n\ndefineExpose({\n  blur: () => {\n    focused.value = false\n  },\n  element: input,\n  focus: () => {\n    focused.value = true\n  },\n})\n</script>\n","<template>\n  <div\n    v-bind=\"computedAttrs\"\n    :id=\"computedId\"\n    ref=\"_element\"\n    role=\"group\"\n    :class=\"computedClasses\"\n    class=\"bv-no-focus-ring\"\n    tabindex=\"-1\"\n  >\n    <slot name=\"first\" />\n    <BFormCheckbox v-for=\"(item, index) in normalizeOptions\" :key=\"index\" v-bind=\"item\">\n      <slot name=\"option\" v-bind=\"item\">\n        {{ item.text }}\n      </slot>\n    </BFormCheckbox>\n    <slot />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, provide, toRef, useTemplateRef} from 'vue'\nimport BFormCheckbox from './BFormCheckbox.vue'\nimport {checkboxGroupKey} from '../../utils/keys'\nimport {useFocus} from '@vueuse/core'\nimport type {BFormCheckboxGroupProps} from '../../types/ComponentProps'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useId} from '../../composables/useId'\nimport {getGroupAttr, getGroupClasses} from '../../composables/useFormCheck'\nimport type {BFormCheckboxGroupSlots} from '../../types'\n\nconst _props = withDefaults(defineProps<Omit<BFormCheckboxGroupProps, 'modelValue'>>(), {\n  ariaInvalid: undefined,\n  autofocus: false,\n  buttonVariant: 'secondary',\n  buttons: false,\n  disabled: false,\n  disabledField: 'disabled',\n  form: undefined,\n  id: undefined,\n  name: undefined,\n  options: () => [],\n  plain: false,\n  required: false,\n  reverse: false,\n  size: 'md',\n  stacked: false,\n  state: null,\n  switches: false,\n  textField: 'text',\n  validated: false,\n  valueField: 'value',\n})\nconst props = useDefaults(_props, 'BFormCheckboxGroup')\ndefineSlots<BFormCheckboxGroupSlots>()\n\nconst modelValue = defineModel<Exclude<BFormCheckboxGroupProps['modelValue'], undefined>>({\n  default: () => [],\n})\n\nconst computedId = useId(() => props.id, 'checkbox')\nconst computedName = useId(() => props.name, 'checkbox')\n\nconst element = useTemplateRef('_element')\n\nconst {focused} = useFocus(element, {\n  initialValue: props.autofocus,\n})\n\nprovide(checkboxGroupKey, {\n  modelValue,\n  switch: toRef(() => props.switches),\n  buttonVariant: toRef(() => props.buttonVariant),\n  form: toRef(() => props.form),\n  name: computedName,\n  state: toRef(() => props.state),\n  plain: toRef(() => props.plain),\n  size: toRef(() => props.size),\n  inline: toRef(() => !props.stacked),\n  reverse: toRef(() => props.reverse),\n  required: toRef(() => props.required),\n  buttons: toRef(() => props.buttons),\n  disabled: toRef(() => props.disabled),\n})\n\nconst normalizeOptions = computed<\n  {\n    text: string | undefined\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    value: any\n    disabled: boolean | undefined\n    [key: string]: unknown\n  }[]\n>(() =>\n  props.options.map((el) =>\n    typeof el === 'string' || typeof el === 'number'\n      ? {\n          value: el,\n          disabled: props.disabled,\n          text: el.toString(),\n        }\n      : {\n          ...el,\n          value: el[props.valueField],\n          disabled: el[props.disabledField] as boolean | undefined,\n          text: el[props.textField] as string | undefined,\n        }\n  )\n)\n\nconst classesObject = computed(() => ({\n  required: props.required,\n  ariaInvalid: props.ariaInvalid,\n  state: props.state,\n  validated: props.validated,\n  buttons: props.buttons,\n  stacked: props.stacked,\n  size: props.size,\n}))\nconst computedAttrs = getGroupAttr(classesObject)\nconst computedClasses = getGroupClasses(classesObject)\n\ndefineExpose({\n  blur: () => {\n    focused.value = false\n  },\n  focus: () => {\n    focused.value = true\n  },\n})\n</script>\n"],"names":["_props","__props","props","useDefaults","slots","_useSlots","attrs","useAttrs","modelValue","_useModel","indeterminate","processedAttrs","computed","class","wrapperClass","inputAttrs","computedId","useId","id","parentData","inject","checkboxGroupKey","input","useTemplateRef","focused","useFocus","initialValue","autofocus","hasDefaultSlot","isEmptySlot","default","localValue","get","value","set","newVal","Array","isArray","computedRequired","name","required","isButtonGroup","buttonGroup","buttons","classesObject","plain","button","inline","reverse","switch","state","size","buttonVariant","wrapperClasses","getClasses","computedWrapperClasses","inputClasses","getInputClasses","computedInputClasses","inputClass","labelClasses","getLabelClasses","__expose","blur","element","focus","_openBlock","_createBlock","ConditionalWrapper","_mergeProps","skip","_unref","wrapperAttrs","_withDirectives","_createElementVNode","ref","$event","type","disabled","form","ariaLabel","ariaLabelledby","uncheckedValue","_hoisted_1","_createElementBlock","for","_renderSlot","_ctx","$slots","computedName","provide","toRef","switches","stacked","normalizeOptions","options","map","el","text","toString","valueField","disabledField","textField","ariaInvalid","validated","computedAttrs","getGroupAttr","computedClasses","getGroupClasses","role","tabindex","_Fragment","_renderList","item","index","BFormCheckbox","key","ref_for","_createTextVNode","_toDisplayString"],"mappings":"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"}