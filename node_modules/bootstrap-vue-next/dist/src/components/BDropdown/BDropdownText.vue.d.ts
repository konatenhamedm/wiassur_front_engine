import { BDropdownTextProps } from '../../types/ComponentProps';
import { BDropdownTextSlots } from '../../types';
declare function __VLS_template(): {
    attrs: Partial<{}>;
    slots: Readonly<BDropdownTextSlots> & BDropdownTextSlots;
    refs: {};
    rootEl: any;
};
type __VLS_TemplateResult = ReturnType<typeof __VLS_template>;
declare const __VLS_component: import('vue').DefineComponent<BDropdownTextProps, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<BDropdownTextProps> & Readonly<{}>, {
    text: string;
    tag: string;
    wrapperAttrs: Readonly<import('../../types/AnyValuedAttributes').AttrsValue>;
    variant: import('../..').ColorVariant | null;
    textClass: import('../../types/AnyValuedAttributes').ClassValue;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, false, {}, any>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, __VLS_TemplateResult["slots"]>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
