import { BTableLiteProps } from '../../types/ComponentProps';
import { TableField } from '../../types/TableTypes';
import { BTableLiteSlots } from '../../types';
declare const _default: <Items>(__VLS_props: NonNullable<Awaited<typeof __VLS_setup>>["props"], __VLS_ctx?: __VLS_PrettifyLocal<Pick<NonNullable<Awaited<typeof __VLS_setup>>, "attrs" | "emit" | "slots">>, __VLS_expose?: NonNullable<Awaited<typeof __VLS_setup>>["expose"], __VLS_setup?: Promise<{
    props: __VLS_PrettifyLocal<Pick<Partial<{}> & Omit<{
        readonly "onHead-clicked"?: ((key: string, field: TableField<Items>, event: MouseEvent, isFooter: boolean) => any) | undefined;
        readonly "onRow-clicked"?: ((item: Items, index: number, event: MouseEvent) => any) | undefined;
        readonly "onRow-dblclicked"?: ((item: Items, index: number, event: MouseEvent) => any) | undefined;
        readonly "onRow-contextmenu"?: ((item: Items, index: number, event: MouseEvent) => any) | undefined;
        readonly "onRow-hovered"?: ((item: Items, index: number, event: MouseEvent) => any) | undefined;
        readonly "onRow-unhovered"?: ((item: Items, index: number, event: MouseEvent) => any) | undefined;
        readonly "onRow-middle-clicked"?: ((item: Items, index: number, event: MouseEvent) => any) | undefined;
    } & import('vue').VNodeProps & import('vue').AllowedComponentProps & import('vue').ComponentCustomProps, never>, "onHead-clicked" | "onRow-clicked" | "onRow-dblclicked" | "onRow-contextmenu" | "onRow-hovered" | "onRow-unhovered" | "onRow-middle-clicked"> & BTableLiteProps<Items> & Partial<{}>> & import('vue').PublicProps;
    expose(exposed: import('vue').ShallowUnwrapRef<{}>): void;
    attrs: any;
    slots: Readonly<BTableLiteSlots<Items>> & BTableLiteSlots<Items>;
    emit: ((evt: "head-clicked", key: string, field: TableField<Items>, event: MouseEvent, isFooter: boolean) => void) & ((evt: "row-clicked", item: Items, index: number, event: MouseEvent) => void) & ((evt: "row-dblclicked", item: Items, index: number, event: MouseEvent) => void) & ((evt: "row-contextmenu", item: Items, index: number, event: MouseEvent) => void) & ((evt: "row-hovered", item: Items, index: number, event: MouseEvent) => void) & ((evt: "row-unhovered", item: Items, index: number, event: MouseEvent) => void) & ((evt: "row-middle-clicked", item: Items, index: number, event: MouseEvent) => void);
}>) => import('vue').VNode & {
    __ctx?: Awaited<typeof __VLS_setup>;
};
export default _default;
type __VLS_PrettifyLocal<T> = {
    [K in keyof T]: T[K];
} & {};
