import { BButtonToolbarSlots } from '../../types';
import { BButtonToolbarProps } from '../../types/ComponentProps';
declare function __VLS_template(): {
    attrs: Partial<{}>;
    slots: Readonly<BButtonToolbarSlots> & BButtonToolbarSlots;
    refs: {
        toolbarRef: HTMLDivElement;
    };
    rootEl: HTMLDivElement;
};
type __VLS_TemplateResult = ReturnType<typeof __VLS_template>;
declare const __VLS_component: import('vue').DefineComponent<BButtonToolbarProps, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<BButtonToolbarProps> & Readonly<{}>, {
    ariaLabel: string;
    role: string;
    keyNav: boolean;
    justify: boolean;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, false, {
    toolbarRef: HTMLDivElement;
}, HTMLDivElement>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, __VLS_TemplateResult["slots"]>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
