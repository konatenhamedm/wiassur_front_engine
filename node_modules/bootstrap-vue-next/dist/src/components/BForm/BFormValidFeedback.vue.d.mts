import { BFormValidFeedbackSlots } from '../../types';
declare function __VLS_template(): {
    attrs: Partial<{}>;
    slots: Readonly<BFormValidFeedbackSlots> & BFormValidFeedbackSlots;
    refs: {};
    rootEl: any;
};
type __VLS_TemplateResult = ReturnType<typeof __VLS_template>;
declare const __VLS_component: import('vue').DefineComponent<import('../..').BFormFeedbackSharedProps, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {}, string, import('vue').PublicProps, Readonly<import('../..').BFormFeedbackSharedProps> & Readonly<{}>, {
    id: string;
    state: import('../..').ValidationState;
    text: string;
    ariaLive: string;
    role: string;
    tag: string;
    tooltip: boolean;
    forceShow: boolean;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, false, {}, any>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, __VLS_TemplateResult["slots"]>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
