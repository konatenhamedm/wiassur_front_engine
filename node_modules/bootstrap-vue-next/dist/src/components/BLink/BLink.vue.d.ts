import { BLinkProps } from '../../types/ComponentProps';
import { BLinkSlots } from '../../types';
declare function __VLS_template(): {
    attrs: Partial<{}>;
    slots: Readonly<BLinkSlots> & BLinkSlots;
    refs: {};
    rootEl: any;
};
type __VLS_TemplateResult = ReturnType<typeof __VLS_template>;
declare const __VLS_component: import('vue').DefineComponent<BLinkProps, {}, {}, {}, {}, import('vue').ComponentOptionsMixin, import('vue').ComponentOptionsMixin, {
    click: (value: MouseEvent) => any;
}, string, import('vue').PublicProps, Readonly<BLinkProps> & Readonly<{
    onClick?: ((value: MouseEvent) => any) | undefined;
}>, {
    disabled: boolean;
    to: import('vue-router').RouteLocationRaw;
    target: import('../..').LinkTarget;
    replace: boolean;
    href: string;
    routerComponentName: string;
    active: boolean;
    activeClass: string;
    exactActiveClass: string;
    rel: string;
    variant: import('../..').ColorVariant | null;
    opacity: import('../..').LinkOpacity;
    opacityHover: import('../..').LinkOpacity;
    underlineVariant: import('../..').ColorVariant | null;
    underlineOffset: import('../..').UnderlineOffset;
    underlineOffsetHover: import('../..').UnderlineOffset;
    underlineOpacity: import('../..').UnderlineOpacity;
    underlineOpacityHover: import('../..').UnderlineOpacity;
    icon: boolean;
    noRel: boolean;
    prefetch: boolean;
    prefetchOn: Partial<{
        visibility: boolean;
        interaction: boolean;
    }>;
    noPrefetch: boolean;
    prefetchedClass: import('../../types/AnyValuedAttributes').ClassValue;
    routerTag: string;
    stretched: boolean;
}, {}, {}, {}, string, import('vue').ComponentProvideOptions, false, {}, any>;
declare const _default: __VLS_WithTemplateSlots<typeof __VLS_component, __VLS_TemplateResult["slots"]>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
