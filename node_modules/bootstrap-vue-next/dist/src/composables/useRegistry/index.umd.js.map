{"version":3,"file":"index.umd.js","sources":["../../../../src/composables/useRegistry/index.ts"],"sourcesContent":["import {\n  type ComponentInternalInstance,\n  computed,\n  inject,\n  provide,\n  readonly,\n  type Ref,\n  ref,\n} from 'vue'\nimport {\n  breadcrumbGlobalIndexKey,\n  breadcrumbRegistryKey,\n  modalManagerKey,\n  type RegisterShowHideFnInput,\n  type RegisterShowHideMapValue,\n  rtlRegistryKey,\n  showHideRegistryKey,\n} from '../../utils/keys'\nimport type {BAppProps} from '../../types/ComponentProps'\nimport type {BreadcrumbItemRaw} from '../../types/BreadcrumbTypes'\n\nexport const useRegistry = (rtl: BAppProps['rtl'] = false) => {\n  const showHideStorage = inject(showHideRegistryKey, undefined)\n  if (!showHideStorage) {\n    const {register, values} = _newShowHideRegistry()\n    provide(showHideRegistryKey, {register, values})\n  }\n\n  const modalManager = inject(modalManagerKey, undefined)\n  if (!modalManager) {\n    const stack: Ref<Map<number, ComponentInternalInstance>> = ref(new Map())\n\n    const countStack = computed(() => stack.value.size)\n    const valuesStack = computed(() => [...stack.value.values()])\n    const lastStack = computed(() => valuesStack.value[valuesStack.value.length - 1])\n\n    const pushStack = (modal: Readonly<ComponentInternalInstance>) => {\n      stack.value.set(modal.uid, modal)\n    }\n    const removeStack = (modal: Readonly<ComponentInternalInstance>) => {\n      stack.value.delete(modal.uid)\n    }\n\n    /**\n     * A collection of all registered modals\n     */\n    const registry: Ref<Map<number, ComponentInternalInstance>> = ref(new Map())\n\n    // Utility getters not made, would not be used (count, last)\n\n    const pushRegistry = (modal: Readonly<ComponentInternalInstance>) => {\n      registry.value.set(modal.uid, modal)\n    }\n    const removeRegistry = (modal: Readonly<ComponentInternalInstance>) => {\n      registry.value.delete(modal.uid)\n    }\n\n    provide(modalManagerKey, {\n      countStack,\n      lastStack,\n      registry: computed(() => registry.value),\n      stack: valuesStack,\n      pushStack,\n      removeStack,\n      pushRegistry,\n      removeRegistry,\n    })\n  }\n\n  const breadcrumb = inject(breadcrumbRegistryKey, undefined)\n  if (!breadcrumb) {\n    const items = ref<Record<string, BreadcrumbItemRaw[]>>({\n      [breadcrumbGlobalIndexKey]: [],\n    })\n    const reset = (key: string = breadcrumbGlobalIndexKey) => {\n      items.value[key] = []\n    }\n\n    provide(breadcrumbRegistryKey, {items, reset})\n  }\n\n  const rtlRegistry = inject(rtlRegistryKey, undefined)\n  if (!rtlRegistry) {\n    const rtlDefault = false\n    const localeDefault = undefined\n\n    const rtlInitial = typeof rtl === 'boolean' ? rtlDefault : (rtl?.rtlInitial ?? rtlDefault)\n\n    const localeInitial =\n      typeof rtl === 'boolean' ? localeDefault : (rtl?.localeInitial ?? localeDefault)\n\n    const isRtl = ref(rtlInitial)\n    const locale = ref(localeInitial)\n\n    provide(rtlRegistryKey, {isRtl, locale})\n  }\n}\n\nexport const _newShowHideRegistry = () => {\n  const values: Ref<Map<string, RegisterShowHideMapValue>> = ref(new Map())\n\n  const register = ({\n    id,\n    component,\n    value,\n    toggle,\n    show,\n    hide,\n    registerTrigger,\n    unregisterTrigger,\n  }: RegisterShowHideFnInput) => {\n    values.value.set(id, {\n      id,\n      component,\n      value: readonly(value),\n      toggle,\n      show,\n      hide,\n      registerTrigger,\n      unregisterTrigger,\n    })\n    return {\n      unregister() {\n        values.value.delete(id)\n      },\n      updateId(newId: string, oldId: string) {\n        const existingValue = values.value.get(oldId)\n        if (existingValue) {\n          values.value.set(newId, {...existingValue, id: newId})\n          values.value.delete(oldId)\n        }\n      },\n    }\n  }\n  return {\n    register,\n    values,\n  }\n}\n"],"names":["_newShowHideRegistry","values","ref","Map","register","id","component","value","toggle","show","hide","registerTrigger","unregisterTrigger","set","readonly","unregister","delete","updateId","newId","oldId","existingValue","get","rtl","inject","showHideRegistryKey","provide","modalManagerKey","stack","countStack","computed","size","valuesStack","lastStack","length","pushStack","modal","uid","removeStack","registry","pushRegistry","removeRegistry","breadcrumbRegistryKey","items","breadcrumbGlobalIndexKey","reset","key","rtlRegistryKey","rtlDefault","localeDefault","rtlInitial","localeInitial","isRtl","locale"],"mappings":"8IAkGaA,EAAuB,KAClC,MAAMC,EAAqDC,EAAAA,IAAI,IAAIC,KAmCnE,MAAO,CACLC,SAlCe,EACfC,KACAC,YACAC,QACAC,SACAC,OACAC,OACAC,kBACAC,wBAEAX,EAAOM,MAAMM,IAAIR,EAAI,CACnBA,KACAC,YACAC,MAAOO,EAAAA,SAASP,GAChBC,SACAC,OACAC,OACAC,kBACAC,sBAEK,CACL,UAAAG,GACEd,EAAOM,MAAMS,OAAOX,EACtB,EACA,QAAAY,CAASC,EAAeC,GACtB,MAAMC,EAAgBnB,EAAOM,MAAMc,IAAIF,GACnCC,IACFnB,EAAOM,MAAMM,IAAIK,EAAO,IAAIE,EAAef,GAAIa,IAC/CjB,EAAOM,MAAMS,OAAOG,GAExB,IAKFlB,8DAnHuB,CAACqB,GAAwB,KAElD,IADwBC,EAAAA,OAAOC,EAAAA,yBAAqB,GAC9B,CACpB,MAAMpB,SAACA,EAAAH,OAAUA,GAAUD,IAC3ByB,EAAAA,QAAQD,EAAAA,oBAAqB,CAACpB,WAAUH,UAC1C,CAGA,IADqBsB,EAAAA,OAAOG,EAAAA,qBAAiB,GAC1B,CACjB,MAAMC,EAAqDzB,EAAAA,IAAI,IAAIC,KAE7DyB,EAAaC,EAAAA,SAAS,IAAMF,EAAMpB,MAAMuB,MACxCC,EAAcF,EAAAA,SAAS,IAAM,IAAIF,EAAMpB,MAAMN,WAC7C+B,EAAYH,WAAS,IAAME,EAAYxB,MAAMwB,EAAYxB,MAAM0B,OAAS,IAExEC,EAAaC,IACjBR,EAAMpB,MAAMM,IAAIsB,EAAMC,IAAKD,IAEvBE,EAAeF,IACnBR,EAAMpB,MAAMS,OAAOmB,EAAMC,MAMrBE,EAAwDpC,EAAAA,IAAI,IAAIC,KAIhEoC,EAAgBJ,IACpBG,EAAS/B,MAAMM,IAAIsB,EAAMC,IAAKD,IAE1BK,EAAkBL,IACtBG,EAAS/B,MAAMS,OAAOmB,EAAMC,MAG9BX,EAAAA,QAAQC,EAAAA,gBAAiB,CACvBE,aACAI,YACAM,SAAUT,EAAAA,SAAS,IAAMS,EAAS/B,OAClCoB,MAAOI,EACPG,YACAG,cACAE,eACAC,kBAEJ,CAGA,IADmBjB,EAAAA,OAAOkB,EAAAA,2BAAuB,GAChC,CACf,MAAMC,EAAQxC,EAAAA,IAAyC,CACrD,CAACyC,4BAA2B,KAExBC,EAAQ,CAACC,EAAcF,8BAC3BD,EAAMnC,MAAMsC,GAAO,IAGrBpB,EAAAA,QAAQgB,EAAAA,sBAAuB,CAACC,QAAOE,SACzC,CAGA,IADoBrB,EAAAA,OAAOuB,EAAAA,oBAAgB,GACzB,CAChB,MAAMC,GAAa,EACbC,OAAgB,EAEhBC,EAA4B,kBAAR3B,EAAoByB,EAAczB,GAAK2B,YAAcF,EAEzEG,EACW,kBAAR5B,EAAoB0B,EAAiB1B,GAAK4B,eAAiBF,EAE9DG,EAAQjD,EAAAA,IAAI+C,GACZG,EAASlD,EAAAA,IAAIgD,GAEnBzB,EAAAA,QAAQqB,EAAAA,eAAgB,CAACK,QAAOC,UAClC"}