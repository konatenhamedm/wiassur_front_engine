{"version":3,"file":"index.umd.js","sources":["../../../../src/plugins/createBootstrap/index.ts"],"sourcesContent":["import {type Plugin, ref, type Ref} from 'vue'\nimport type {\n  BootstrapVueOptions,\n  BvnComponentProps,\n  BvnComponents,\n} from '../../types/BootstrapVueOptions'\n\nimport '../../styles/styles.scss'\n\nimport {rtlPlugin} from '../rtl'\nimport {registryPlugin} from '../registry'\nimport {orchestratorPlugin} from '../orchestrator'\nimport {defaultsKey} from '../../utils/keys'\n\n// Main app plugin\nexport const createBootstrap = (pluginData: Readonly<BootstrapVueOptions> = {}): Plugin => ({\n  install(app) {\n    if ((pluginData.registries ?? true) === true) {\n      app.use(registryPlugin, pluginData)\n    }\n    if ((pluginData.rtl ?? true) === true || typeof pluginData.rtl === 'object') {\n      app.use(rtlPlugin, pluginData)\n    }\n    if ((pluginData.orchestrator ?? true) === true) {\n      app.use(orchestratorPlugin)\n    }\n    // Provide global defaults for components\n    const val = pluginData?.components ?? {}\n    app.provide(defaultsKey, ref(val) as Ref<Partial<BvnComponentProps>>)\n  },\n})\n\ndeclare module 'vue' {\n  // eslint-disable-next-line @typescript-eslint/no-empty-object-type\n  interface GlobalComponents extends BvnComponents {}\n}\n"],"names":["pluginData","install","app","registries","use","registryPlugin","rtl","rtlPlugin","orchestrator","orchestratorPlugin","val","components","provide","defaultsKey","ref"],"mappings":"uRAe+B,CAACA,EAA4C,OAC1E,OAAAC,CAAQC,IACkC,KAAnCF,EAAWG,aAAc,IAC5BD,EAAIE,IAAIC,EAAAA,eAAgBL,IAEO,KAA5BA,EAAWM,MAAO,IAA4C,iBAAnBN,EAAWM,KACzDJ,EAAIE,IAAIG,EAAAA,UAAWP,IAEqB,KAArCA,EAAWQ,eAAgB,IAC9BN,EAAIE,IAAIK,sBAGV,MAAMC,EAAMV,GAAYW,YAAc,CAAA,EACtCT,EAAIU,QAAQC,EAAAA,YAAaC,EAAAA,IAAIJ,GAC/B"}