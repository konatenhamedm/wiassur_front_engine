{"version":3,"file":"index.umd.js","sources":["../../../../src/directives/BTooltip/index.ts"],"sourcesContent":["import {type Directive, type Ref} from 'vue'\nimport {\n  bind,\n  type ElementWithPopper,\n  resolveActiveStatus,\n  resolveContent,\n  resolveDirectiveProps,\n  unbind,\n} from '../../utils/floatingUi'\nimport {defaultsKey} from '../../utils/keys'\nimport {findProvides} from '../utils'\n\nexport const vBTooltip: Directive<ElementWithPopper> = {\n  mounted(el, binding, vnode) {\n    const defaults = (findProvides(binding, vnode) as Record<symbol, Ref>)[defaultsKey]?.value\n    const isActive = resolveActiveStatus(binding.value)\n    if (!isActive) return\n\n    const text = resolveContent(binding.value, el)\n\n    if (!text.body && !text.title) return\n    el.$__binding = JSON.stringify([binding.modifiers, binding.value])\n    bind(el, binding, {\n      noninteractive: true,\n      ...(defaults['BTooltip'] || undefined),\n      ...resolveDirectiveProps(binding, el),\n      title: text.title ?? text.body ?? '',\n      tooltip: isActive,\n    })\n  },\n  updated(el, binding, vnode) {\n    const defaults = (findProvides(binding, vnode) as Record<symbol, Ref>)[defaultsKey]?.value\n\n    const isActive = resolveActiveStatus(binding.value)\n    if (!isActive) return\n\n    const text = resolveContent(binding.value, el)\n\n    if (!text.body && !text.title) return\n    delete binding.oldValue\n    if (el.$__binding === JSON.stringify([binding.modifiers, binding.value])) return\n    unbind(el)\n    bind(el, binding, {\n      noninteractive: true,\n      ...(defaults['BTooltip'] || undefined),\n      ...resolveDirectiveProps(binding, el),\n      title: text.title ?? text.body ?? '',\n      tooltip: isActive,\n    })\n    el.$__binding = JSON.stringify([binding.modifiers, binding.value])\n  },\n  beforeUnmount(el) {\n    unbind(el)\n  },\n}\n"],"names":["vBTooltip","mounted","el","binding","vnode","defaults","findProvides","defaultsKey","value","isActive","resolveActiveStatus","text","resolveContent","body","title","$__binding","JSON","stringify","modifiers","bind","noninteractive","resolveDirectiveProps","tooltip","updated","oldValue","unbind","beforeUnmount"],"mappings":"iOAYaA,EAA0C,CACrD,OAAAC,CAAQC,EAAIC,EAASC,GACnB,MAAMC,EAAYC,EAAAA,aAAaH,EAASC,GAA+BG,EAAAA,cAAcC,MAC/EC,EAAWC,EAAAA,oBAAoBP,EAAQK,OAC7C,IAAKC,EAAU,OAEf,MAAME,EAAOC,EAAAA,eAAeT,EAAQK,MAAON,IAEtCS,EAAKE,MAASF,EAAKG,SACxBZ,EAAGa,WAAaC,KAAKC,UAAU,CAACd,EAAQe,UAAWf,EAAQK,QAC3DW,EAAAA,KAAKjB,EAAIC,EAAS,CAChBiB,gBAAgB,KACZf,EAAmB,eAAK,KACzBgB,EAAAA,sBAAsBlB,EAASD,GAClCY,MAAOH,EAAKG,OAASH,EAAKE,MAAQ,GAClCS,QAASb,IAEb,EACA,OAAAc,CAAQrB,EAAIC,EAASC,GACnB,MAAMC,EAAYC,EAAAA,aAAaH,EAASC,GAA+BG,EAAAA,cAAcC,MAE/EC,EAAWC,EAAAA,oBAAoBP,EAAQK,OAC7C,IAAKC,EAAU,OAEf,MAAME,EAAOC,EAAAA,eAAeT,EAAQK,MAAON,IAEtCS,EAAKE,MAASF,EAAKG,gBACjBX,EAAQqB,SACXtB,EAAGa,aAAeC,KAAKC,UAAU,CAACd,EAAQe,UAAWf,EAAQK,UACjEiB,EAAAA,OAAOvB,GACPiB,EAAAA,KAAKjB,EAAIC,EAAS,CAChBiB,gBAAgB,KACZf,EAAmB,eAAK,KACzBgB,EAAAA,sBAAsBlB,EAASD,GAClCY,MAAOH,EAAKG,OAASH,EAAKE,MAAQ,GAClCS,QAASb,IAEXP,EAAGa,WAAaC,KAAKC,UAAU,CAACd,EAAQe,UAAWf,EAAQK,SAC7D,EACA,aAAAkB,CAAcxB,GACZuB,EAAAA,OAAOvB,EACT"}