{"version":3,"file":"index.umd.js","sources":["../../../../src/directives/BToggle/index.ts"],"sourcesContent":["import {RX_HASH, RX_HASH_ID, RX_SPACE_SPLIT} from '../../utils/constants'\nimport {type Directive, type DirectiveBinding, toValue, type VNode} from 'vue'\nimport {findProvides} from '../utils'\nimport {type RegisterShowHideValue, showHideRegistryKey} from '../../utils/keys'\n\nconst getTargets = (\n  binding: DirectiveBinding<string | readonly string[] | undefined>,\n  el: Readonly<Element>\n) => {\n  const {modifiers, arg, value} = binding\n  // Any modifiers are considered target Ids\n  const targets = Object.keys(modifiers || {})\n\n  // If value is a string, split out individual targets (if space delimited)\n  const localValue = typeof value === 'string' ? value.split(RX_SPACE_SPLIT) : value\n\n  // Support target Id as link href (`href=\"#id\"`)\n  if (el.tagName.toLowerCase() === 'a') {\n    const href = el.getAttribute('href') || ''\n    if (RX_HASH_ID.test(href)) {\n      targets.push(href.replace(RX_HASH, ''))\n    }\n  }\n\n  // Add Id from `arg` (if provided), and support value\n  // as a single string Id or an array of string Ids\n  // If `value` is not an array or string, then it gets filtered out\n  Array.prototype.concat\n    .apply([], [arg, localValue])\n    .forEach((t) => typeof t === 'string' && targets.push(t))\n\n  // Return only unique and truthy target Ids\n  return targets.filter((t, index, arr) => t && arr.indexOf(t) === index)\n}\n\nconst handleUpdate = (\n  el: Element,\n  binding: DirectiveBinding<string | readonly string[] | undefined>,\n  vnode: VNode\n) => {\n  // Determine targets\n  const targets = getTargets(binding, el)\n  if (targets.length === 0) return\n\n  const provides = findProvides(binding, vnode)\n  const showHideMap = (provides as Record<symbol, RegisterShowHideValue>)[showHideRegistryKey]\n    ?.values\n  if ((el as HTMLElement).dataset.bvtoggle) {\n    const oldTargets = ((el as HTMLElement).dataset.bvtoggle || '').split(' ')\n    if (oldTargets.length === 0) return\n    for (const targetId of oldTargets) {\n      const showHide = showHideMap?.value.get(targetId)\n      if (!showHide) {\n        continue\n      }\n      if (!targets.includes(targetId)) {\n        toValue(showHide).unregisterTrigger('click', el, false)\n      }\n    }\n  }\n  ;(el as HTMLElement).dataset.bvtoggle = targets.join(' ')\n\n  targets.forEach(async (targetId) => {\n    let count = 0\n    // Keep looking until showHide is found, giving up after 400ms or directive is unmounted\n    while (count < 5 && (el as HTMLElement).dataset.bvtoggle) {\n      const showHide = showHideMap?.value.get(targetId)\n      if (!showHide) {\n        count++\n        await new Promise((resolve) => setTimeout(resolve, 100))\n        if (count < 4) continue\n        // eslint-disable-next-line no-console\n        console.warn(`[v-b-toggle] Target with ID ${targetId} not found`)\n        break\n      }\n      // Register the trigger element\n\n      toValue(showHide).unregisterTrigger('click', el, false)\n      toValue(showHide).registerTrigger('click', el)\n      break\n    }\n  })\n\n  el.setAttribute('aria-controls', targets.join(' '))\n}\nconst handleUnmount = (\n  el: Element,\n  binding: DirectiveBinding<string | readonly string[] | undefined>,\n  vnode: VNode\n) => {\n  // Determine targets\n  const targets = getTargets(binding, el)\n  if (targets.length === 0) return\n  const provides = findProvides(binding, vnode)\n  const showHideMap = (provides as Record<symbol, RegisterShowHideValue>)[showHideRegistryKey]\n    ?.values\n\n  targets.forEach((targetId) => {\n    const showHide = showHideMap?.value.get(targetId)\n    if (!showHide) {\n      return\n    }\n    toValue(showHide).unregisterTrigger('click', el, false)\n  })\n\n  el.removeAttribute('aria-controls')\n  el.removeAttribute('aria-expanded')\n  el.classList.remove('collapsed')\n  el.classList.remove('not-collapsed')\n  delete (el as HTMLElement).dataset.bvtoggle\n}\n\nexport const vBToggle: Directive<Element> = {\n  mounted: handleUpdate,\n  updated: handleUpdate,\n  unmounted: handleUnmount,\n}\n"],"names":["getTargets","binding","el","modifiers","arg","value","targets","Object","keys","localValue","split","RX_SPACE_SPLIT","tagName","toLowerCase","href","getAttribute","RX_HASH_ID","test","push","replace","RX_HASH","Array","prototype","concat","apply","forEach","t","filter","index","arr","indexOf","handleUpdate","vnode","length","provides","findProvides","showHideMap","showHideRegistryKey","values","dataset","bvtoggle","oldTargets","targetId","showHide","get","includes","toValue","unregisterTrigger","join","async","count","Promise","resolve","setTimeout","console","warn","registerTrigger","setAttribute","vBToggle","mounted","updated","unmounted","removeAttribute","classList","remove"],"mappings":"kOAKMA,EAAa,CACjBC,EACAC,KAEA,MAAMC,UAACA,EAAAC,IAAWA,EAAAC,MAAKA,GAASJ,EAE1BK,EAAUC,OAAOC,KAAKL,GAAa,CAAA,GAGnCM,EAA8B,iBAAVJ,EAAqBA,EAAMK,MAAMC,EAAAA,gBAAkBN,EAG7E,GAAiC,MAA7BH,EAAGU,QAAQC,cAAuB,CACpC,MAAMC,EAAOZ,EAAGa,aAAa,SAAW,GACpCC,EAAAA,WAAWC,KAAKH,IAClBR,EAAQY,KAAKJ,EAAKK,QAAQC,EAAAA,QAAS,IAEvC,CAUA,OALAC,MAAMC,UAAUC,OACbC,MAAM,GAAI,CAACpB,EAAKK,IAChBgB,QAASC,GAAmB,iBAANA,GAAkBpB,EAAQY,KAAKQ,IAGjDpB,EAAQqB,OAAO,CAACD,EAAGE,EAAOC,IAAQH,GAAKG,EAAIC,QAAQJ,KAAOE,IAG7DG,EAAe,CACnB7B,EACAD,EACA+B,KAGA,MAAM1B,EAAUN,EAAWC,EAASC,GACpC,GAAuB,IAAnBI,EAAQ2B,OAAc,OAE1B,MAAMC,EAAWC,EAAAA,aAAalC,EAAS+B,GACjCI,EAAeF,EAAmDG,EAAAA,sBACpEC,OACJ,GAAKpC,EAAmBqC,QAAQC,SAAU,CACxC,MAAMC,GAAevC,EAAmBqC,QAAQC,UAAY,IAAI9B,MAAM,KACtE,GAA0B,IAAtB+B,EAAWR,OAAc,OAC7B,IAAA,MAAWS,KAAYD,EAAY,CACjC,MAAME,EAAWP,GAAa/B,MAAMuC,IAAIF,GACnCC,IAGArC,EAAQuC,SAASH,IACpBI,EAAAA,QAAQH,GAAUI,kBAAkB,QAAS7C,GAAI,GAErD,CACF,CACEA,EAAmBqC,QAAQC,SAAWlC,EAAQ0C,KAAK,KAErD1C,EAAQmB,QAAQwB,MAAOP,IACrB,IAAIQ,EAAQ,EAEZ,KAAOA,EAAQ,GAAMhD,EAAmBqC,QAAQC,UAAU,CACxD,MAAMG,EAAWP,GAAa/B,MAAMuC,IAAIF,GACxC,IAAKC,EAAU,CAGb,GAFAO,UACM,IAAIC,QAASC,GAAYC,WAAWD,EAAS,MAC/CF,EAAQ,EAAG,SAEfI,QAAQC,KAAK,+BAA+Bb,eAC5C,KACF,CAGAI,EAAAA,QAAQH,GAAUI,kBAAkB,QAAS7C,GAAI,GACjD4C,EAAAA,QAAQH,GAAUa,gBAAgB,QAAStD,GAC3C,KACF,IAGFA,EAAGuD,aAAa,gBAAiBnD,EAAQ0C,KAAK,OA6BnCU,EAA+B,CAC1CC,QAAS5B,EACT6B,QAAS7B,EACT8B,UA9BoB,CACpB3D,EACAD,EACA+B,KAGA,MAAM1B,EAAUN,EAAWC,EAASC,GACpC,GAAuB,IAAnBI,EAAQ2B,OAAc,OAC1B,MAAMC,EAAWC,EAAAA,aAAalC,EAAS+B,GACjCI,EAAeF,EAAmDG,EAAAA,sBACpEC,OAEJhC,EAAQmB,QAASiB,IACf,MAAMC,EAAWP,GAAa/B,MAAMuC,IAAIF,GACnCC,GAGLG,EAAAA,QAAQH,GAAUI,kBAAkB,QAAS7C,GAAI,KAGnDA,EAAG4D,gBAAgB,iBACnB5D,EAAG4D,gBAAgB,iBACnB5D,EAAG6D,UAAUC,OAAO,aACpB9D,EAAG6D,UAAUC,OAAO,wBACZ9D,EAAmBqC,QAAQC"}