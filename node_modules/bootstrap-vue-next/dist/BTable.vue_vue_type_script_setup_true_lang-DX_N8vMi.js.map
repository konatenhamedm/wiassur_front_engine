{"version":3,"file":"BTable.vue_vue_type_script_setup_true_lang-DX_N8vMi.js","sources":["../src/utils/formatItem.ts","../src/types/TableTypes.ts","../src/components/BTable/BTbody.vue","../src/components/BTable/BTd.vue","../src/components/BTable/BTfoot.vue","../src/components/BTable/BTh.vue","../src/components/BTable/BThead.vue","../src/components/BTable/BTr.vue","../src/utils/filterEvent.ts","../src/components/BTable/BTableLite.vue","../src/components/SortIcon.vue","../src/components/BTable/BTable.vue"],"sourcesContent":["import type {TableFieldFormatter} from '../types/TableTypes'\nimport {get} from './object'\n\nexport const formatItem = <T>(\n  item: T,\n  // Weakly type fieldKey because it can be a nested string, such as 'foo.bar.baz'\n  fieldKey: string,\n  formatter?: TableFieldFormatter<T>\n) => {\n  const val = get(item, fieldKey)\n  return formatter && typeof formatter === 'function' ? formatter(val, fieldKey, item) : val\n}\n","import type {StyleValue} from 'vue'\nimport type {ColorVariant} from './ColorTypes'\nimport type {MaybePromise} from './MaybePromise'\nimport type {LiteralUnion} from './LiteralUnion'\nimport type {AttrsValue, ClassValue} from './AnyValuedAttributes'\n\nexport type TableRowEvent<T> = [item: T, index: number, event: MouseEvent]\n\nexport type TableItem<T = Record<string, unknown>> = T & {\n  _rowVariant?: ColorVariant | null\n  _cellVariants?: Partial<Record<keyof T, ColorVariant>>\n  _showDetails?: boolean\n}\n\nexport const isTableItem = (value: unknown): value is TableItem =>\n  typeof value === 'object' && value !== null\n\n/**\n * `undefined` means it's not sorting this column. It is set to undefined rather than removed from the array because\n * we don't want to make updates that remove the comparer function from the value.\n */\nexport type BTableSortByOrder = 'desc' | 'asc' | undefined\n\n/**\n * Initial sort direction for table fields. Includes 'last' option to maintain the direction of the previously sorted column.\n */\nexport type BTableInitialSortDirection = 'desc' | 'asc' | 'last'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type BTableSortByComparerFunction<T = any> = (a: T, b: T, key: string) => number\n\nexport type BTableSortBy = {\n  order: BTableSortByOrder\n  key: string\n}\n\nexport type BTableProviderContext = {\n  sortBy: BTableSortBy[] | undefined\n  filter: string | undefined\n  currentPage: number\n  perPage: number\n}\n\nexport type BTableProvider<T> = (\n  context: Readonly<BTableProviderContext>\n) => MaybePromise<T[] | undefined>\n\nexport type TableFieldFormatter<T> = (value: unknown, key: string, item: T) => string\n\nexport type TableRowType = 'row' | 'row-details' | 'row-top' | 'row-bottom' | 'table-busy'\nexport type TableRowThead = 'top' | 'bottom'\n\nexport type TableStrictClassValue = string | unknown[] | Record<string, boolean>\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport type TableField<T = any> = {\n  class?: ClassValue\n  filterByFormatted?: boolean | TableFieldFormatter<T>\n  formatter?: TableFieldFormatter<T>\n  isRowHeader?: boolean\n  key: LiteralUnion<keyof T>\n  headerTitle?: string\n  headerAbbr?: string\n  label?: string\n  sortable?: boolean\n  sortDirection?: string\n  sortByFormatted?: boolean | TableFieldFormatter<T>\n  sortCompare?: BTableSortByComparerFunction<T>\n  stickyColumn?: boolean\n  scope?: TableThScope\n  initialSortDirection?: BTableInitialSortDirection\n  tdClass?:\n    | TableStrictClassValue\n    | ((value: unknown, key: string, item: T) => TableStrictClassValue)\n  thClass?: ClassValue\n  thStyle?: StyleValue\n  tdAttr?: AttrsValue | ((value: unknown, key: string, item: T) => AttrsValue)\n  thAttr?:\n    | AttrsValue\n    | ((value: unknown, key: string, item: T | null, type: TableRowThead) => AttrsValue)\n  variant?: ColorVariant | null\n}\n\nexport type TableFieldRaw<T = unknown> = T extends object\n  ? LiteralUnion<keyof T> | TableField<T>\n  : string | TableField\n\nexport const isTableField = <T>(value: unknown): value is TableField<T> =>\n  typeof value === 'object' && value !== null && 'key' in value\n\nexport const isTableFieldRaw = <T>(value: unknown): value is TableFieldRaw<T> =>\n  typeof value === 'string' || isTableField(value)\n\nexport type NoProviderTypes = 'paging' | 'sorting' | 'filtering'\n\nexport type TableThScope = 'row' | 'col' | 'rowgroup' | 'colgroup'\n","<template>\n  <tbody :class=\"computedClasses\">\n    <slot />\n  </tbody>\n</template>\n\n<script setup lang=\"ts\">\nimport type {BTbodySlots} from '../../types'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BTbodyProps} from '../../types/ComponentProps'\nimport {computed} from 'vue'\n\nconst _props = withDefaults(defineProps<BTbodyProps>(), {\n  variant: null,\n})\nconst props = useDefaults(_props, 'BTbody')\ndefineSlots<BTbodySlots>()\n\nconst computedClasses = computed(() => ({\n  [`thead-${props.variant}`]: props.variant !== null,\n}))\n</script>\n","<template>\n  <td\n    :class=\"computedClasses\"\n    :colspan=\"props.colspan\"\n    :rowspan=\"props.rowspan\"\n    :data-label=\"props.stackedHeading\"\n  >\n    <div v-if=\"props.stackedHeading\">\n      <slot />\n    </div>\n    <slot v-else />\n  </td>\n</template>\n\n<script setup lang=\"ts\">\nimport type {BTdSlots} from '../../types'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BTdProps} from '../../types/ComponentProps'\nimport {computed} from 'vue'\n\nconst _props = withDefaults(defineProps<BTdProps>(), {\n  colspan: undefined,\n  rowspan: undefined,\n  stackedHeading: undefined,\n  stickyColumn: false,\n  variant: null,\n})\nconst props = useDefaults(_props, 'BTd')\ndefineSlots<BTdSlots>()\n\nconst computedClasses = computed(() => ({\n  [`table-${props.variant}`]: props.variant !== null,\n  'b-table-sticky-column': props.stickyColumn,\n  'table-b-table-default': props.stickyColumn && props.variant === null,\n}))\n</script>\n","<template>\n  <tfoot :class=\"computedClasses\">\n    <slot />\n  </tfoot>\n</template>\n\n<script setup lang=\"ts\">\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BTfootProps} from '../../types/ComponentProps'\nimport {computed} from 'vue'\nimport type {BTfootSlots} from '../../types/ComponentSlots'\n\nconst _props = withDefaults(defineProps<BTfootProps>(), {\n  variant: null,\n})\nconst props = useDefaults(_props, 'BTfoot')\ndefineSlots<BTfootSlots>()\n\nconst computedClasses = computed(() => ({\n  [`table-${props.variant}`]: props.variant !== null,\n}))\n</script>\n","<template>\n  <th\n    :scope=\"localScope\"\n    :class=\"computedClasses\"\n    :colspan=\"props.colspan\"\n    :rowspan=\"props.rowspan\"\n    :data-label=\"props.stackedHeading\"\n  >\n    <div v-if=\"props.stackedHeading !== undefined\">\n      <slot />\n    </div>\n    <slot v-else />\n  </th>\n</template>\n\n<script setup lang=\"ts\">\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BThProps} from '../../types/ComponentProps'\nimport {computed} from 'vue'\nimport type {BThSlots} from '../../types/ComponentSlots'\n\nconst _props = withDefaults(defineProps<BThProps>(), {\n  colspan: undefined,\n  rowspan: undefined,\n  stackedHeading: undefined,\n  stickyColumn: false,\n  variant: null,\n  scope: undefined,\n})\nconst props = useDefaults(_props, 'BTh')\ndefineSlots<BThSlots>()\n\nconst computedClasses = computed(() => ({\n  [`table-${props.variant}`]: props.variant !== null,\n  'b-table-sticky-column': props.stickyColumn,\n  'table-b-table-default': props.stickyColumn && props.variant === null,\n}))\n\nconst localScope = computed(() =>\n  props.scope ? props.scope : props.colspan ? 'colgroup' : props.rowspan ? 'rowgroup' : 'col'\n)\n</script>\n","<template>\n  <thead :class=\"computedClasses\">\n    <slot />\n  </thead>\n</template>\n\n<script setup lang=\"ts\">\nimport type {BTheadSlots} from '../../types'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BTheadProps} from '../../types/ComponentProps'\nimport {computed} from 'vue'\n\nconst _props = withDefaults(defineProps<BTheadProps>(), {\n  variant: null,\n})\nconst props = useDefaults(_props, 'BThead')\ndefineSlots<BTheadSlots>()\n\nconst computedClasses = computed(() => ({\n  [`table-${props.variant}`]: props.variant !== null,\n}))\n</script>\n","<template>\n  <tr :class=\"computedClasses\">\n    <slot />\n  </tr>\n</template>\n\n<script setup lang=\"ts\">\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BTrProps} from '../../types/ComponentProps'\nimport {computed} from 'vue'\nimport type {BTrSlots} from '../../types/ComponentSlots'\n\nconst _props = withDefaults(defineProps<BTrProps>(), {\n  variant: null,\n})\nconst props = useDefaults(_props, 'BTr')\ndefineSlots<BTrSlots>()\n\nconst computedClasses = computed(() => ({\n  [`table-${props.variant}`]: props.variant !== null,\n}))\n</script>\n","const TABLE_TAG_NAMES = ['TD', 'TH', 'TR']\n\n// Filter CSS selector for click/dblclick/etc. events\n// If any of these selectors match the clicked element, we ignore the event\nconst eventFilter = [\n  'a',\n  'a *', // Include content inside links\n  'button',\n  'button *', // Include content inside buttons\n  'input:not(.disabled):not([disabled])',\n  'select:not(.disabled):not([disabled])',\n  'textarea:not(.disabled):not([disabled])',\n  '[role=\"link\"]',\n  '[role=\"link\"] *',\n  '[role=\"button\"]',\n  '[role=\"button\"] *',\n  '[tabindex]:not(.disabled):not([disabled])',\n].join(',')\n\n// Returns `true` if we should ignore the click/double-click/keypress event\n// Avoids having the user need to use `@click.stop` on the form control\nexport const filterEvent = (event: Readonly<Event>) => {\n  // Exit early when we don't have a target element\n  if (!event || !event.target) {\n    return false\n  }\n  const el = event.target as HTMLElement\n  // Exit early when element is disabled or a table element\n  if (('disabled' in el && el.disabled) || TABLE_TAG_NAMES.indexOf(el.tagName) !== -1) {\n    return false\n  }\n  // Ignore the click when it was inside a dropdown menu\n  if (el.closest('.dropdown-menu')) return true\n\n  const label = el.tagName === 'LABEL' ? el : el.closest('label')\n  // If the label's form control is not disabled then we don't propagate event\n  // Modern browsers have `label.control` that references the associated input, but IE 11\n  // does not have this property on the label element, so we resort to DOM lookups\n  if (label) {\n    const labelFor = label.getAttribute('for')\n    const input = labelFor\n      ? document.getElementById(labelFor)\n      : label.querySelector('input, select, textarea')\n    if (input && !(input as HTMLInputElement).disabled) {\n      return true\n    }\n  }\n  // Otherwise check if the event target matches one of the selectors in the\n  // event filter (i.e. anchors, non disabled inputs, etc.)\n  // Return `true` if we should ignore the event\n  return el.matches(eventFilter)\n}\n","<template>\n  <BTableSimple v-bind=\"computedSimpleProps\">\n    <colgroup v-if=\"slots['table-colgroup']\">\n      <slot name=\"table-colgroup\" :fields=\"computedFields\" />\n    </colgroup>\n    <BThead v-show=\"showComputedHeaders\" :variant=\"props.headVariant\" :class=\"props.theadClass\">\n      <slot name=\"thead-top\" :columns=\"computedFieldsTotal\" :fields=\"computedFields\" />\n      <BTr :variant=\"props.headRowVariant\" :class=\"props.theadTrClass\">\n        <BTh\n          v-for=\"field in computedFields\"\n          :key=\"field.key\"\n          :scope=\"field.scope\"\n          :class=\"getFieldColumnClasses(field)\"\n          :title=\"field.headerTitle\"\n          :variant=\"field.variant\"\n          :abbr=\"field.headerAbbr\"\n          :style=\"field.thStyle\"\n          :tabindex=\"shouldHeaderBeFocusable(field) ? '0' : undefined\"\n          v-bind=\"callThAttr(null, field, 'top')\"\n          @click=\"headerClicked(field, $event)\"\n          @keydown=\"handleHeaderKeydown(field, $event)\"\n        >\n          <!-- eslint-disable prettier/prettier -->\n          <slot\n            :name=\"\n              slots[`head(${String(field.key)})`]\n                ? (`head(${String(field.key)})` as 'head()')\n                : 'head()'\n            \"\n            :label=\"field.label\"\n            :column=\"field.key as LiteralUnion<keyof Items>\"\n            :field\n            :is-foot=\"false\"\n          >\n            <!-- eslint-enable prettier/prettier -->\n            {{ getTableFieldHeadLabel(field) }}\n          </slot>\n        </BTh>\n      </BTr>\n      <BTr v-if=\"slots['thead-sub']\">\n        <BTd\n          v-for=\"field in computedFields\"\n          :key=\"field.key\"\n          scope=\"col\"\n          :variant=\"field.variant\"\n          :class=\"[field.class, field.thClass]\"\n        >\n          <slot name=\"thead-sub\" :items=\"props.items\" :fields=\"computedFields\" :field>\n            {{ field.label }}\n          </slot>\n        </BTd>\n      </BTr>\n    </BThead>\n    <BTbody :class=\"props.tbodyClass\">\n      <slot\n        name=\"custom-body\"\n        :fields=\"computedFields\"\n        :items=\"props.items\"\n        :columns=\"computedFieldsTotal\"\n      >\n        <BTr\n          v-if=\"!props.stacked && slots['top-row']\"\n          :class=\"getRowClasses(null, 'row-top')\"\n          v-bind=\"callTbodyTrAttrs(null, 'row-top')\"\n        >\n          <slot name=\"top-row\" :columns=\"computedFieldsTotal\" :fields=\"computedFields\" />\n        </BTr>\n\n        <template\n          v-for=\"(item, itemIndex) in props.items\"\n          :key=\"\n            props.primaryKey && get(item, props.primaryKey)\n              ? get(item, props.primaryKey)\n              : itemIndex\n          \"\n        >\n          <BTr\n            :id=\"\n              props.primaryKey && get(item, props.primaryKey)\n                ? generateTableRowId(get(item, props.primaryKey))\n                : undefined\n            \"\n            :class=\"getRowClasses(item, 'row')\"\n            :variant=\"isTableItem(item) ? item._rowVariant : undefined\"\n            :tabindex=\"shouldRowBeFocusable ? '0' : undefined\"\n            v-bind=\"callTbodyTrAttrs(item, 'row')\"\n            @click=\"!filterEvent($event) && emit('row-clicked', item, itemIndex, $event)\"\n            @dblclick=\"!filterEvent($event) && emit('row-dblclicked', item, itemIndex, $event)\"\n            @contextmenu=\"!filterEvent($event) && emit('row-contextmenu', item, itemIndex, $event)\"\n            @mouseenter=\"!filterEvent($event) && emit('row-hovered', item, itemIndex, $event)\"\n            @mouseleave=\"!filterEvent($event) && emit('row-unhovered', item, itemIndex, $event)\"\n            @mousedown=\"handleMiddleClick(item, itemIndex, $event)\"\n            @keydown=\"handleRowKeydown(item, itemIndex, $event)\"\n          >\n            <component\n              :is=\"getCellComponent(field)\"\n              v-for=\"field in computedFields\"\n              :key=\"field.key\"\n              :variant=\"\n                (isTableItem(item) ? item._cellVariants?.[field.key as string] : false)\n                  ? null\n                  : field.variant\n              \"\n              :class=\"getFieldRowClasses(field, item)\"\n              v-bind=\"itemAttributes(item, String(field.key), field.tdAttr)\"\n            >\n              <label v-if=\"props.stacked && props.labelStacked\" class=\"b-table-stacked-label\">\n                {{ getTableFieldHeadLabel(field) }}\n              </label>\n              <slot\n                :name=\"\n                  slots[`cell(${String(field.key)})`]\n                    ? (`cell(${String(field.key)})` as 'cell()')\n                    : 'cell()'\n                \"\n                :value=\"formatItem(item, String(field.key), field.formatter)\"\n                :unformatted=\"get(item, String(field.key))\"\n                :index=\"itemIndex\"\n                :item=\"item\"\n                :field=\"field\"\n                :items=\"items\"\n                :toggle-details=\"() => toggleRowDetails(item)\"\n                :details-showing=\"isTableItem(item) ? (detailsMap.get(item) ?? false) : false\"\n              >\n                <template v-if=\"!slots[`cell(${String(field.key)})`] && !slots['cell()']\">\n                  {{ formatItem(item, String(field.key), field.formatter) }}\n                </template>\n              </slot>\n            </component>\n          </BTr>\n\n          <template\n            v-if=\"isTableItem(item) && detailsMap.get(item) === true && slots['row-details']\"\n          >\n            <BTr aria-hidden=\"true\" role=\"presentation\" class=\"d-none\" />\n            <BTr\n              :class=\"getRowClasses(item, 'row-details')\"\n              :variant=\"item._rowVariant\"\n              v-bind=\"callTbodyTrAttrs(item, 'row-details')\"\n            >\n              <BTd :colspan=\"computedFieldsTotal\" :class=\"detailsTdClass\">\n                <slot\n                  name=\"row-details\"\n                  :item=\"item\"\n                  :toggle-details=\"() => toggleRowDetails(item)\"\n                  :fields=\"computedFields\"\n                  :index=\"itemIndex\"\n                />\n              </BTd>\n            </BTr>\n          </template>\n        </template>\n        <!-- This class is for specific targetting of this slot element -->\n        <BTr\n          v-if=\"!props.stacked && slots['bottom-row']\"\n          class=\"bottom-row\"\n          :class=\"getRowClasses(null, 'row-bottom')\"\n          v-bind=\"callTbodyTrAttrs(null, 'row-bottom')\"\n        >\n          <slot name=\"bottom-row\" :columns=\"computedFieldsTotal\" :fields=\"computedFields\" />\n        </BTr>\n      </slot>\n    </BTbody>\n    <BTfoot v-if=\"props.footClone\" v-bind=\"footerProps\">\n      <BTr\n        :variant=\"props.footRowVariant ?? props.headRowVariant\"\n        :class=\"props.tfootTrClass ?? props.theadTrClass\"\n      >\n        <BTh\n          v-for=\"field in computedFields\"\n          :key=\"field.key\"\n          scope=\"col\"\n          :class=\"getFieldColumnClasses(field)\"\n          :title=\"field.headerTitle\"\n          :abbr=\"field.headerAbbr\"\n          :style=\"field.thStyle\"\n          :variant=\"field.variant\"\n          :tabindex=\"shouldHeaderBeFocusable(field) ? '0' : undefined\"\n          v-bind=\"callThAttr(null, field, 'bottom')\"\n          @click=\"headerClicked(field, $event, true)\"\n          @keydown=\"handleHeaderKeydown(field, $event, true)\"\n        >\n          <div class=\"d-inline-flex flex-nowrap align-items-center gap-1\">\n            <div>\n              <!-- eslint-disable prettier/prettier -->\n              <!-- @vue-expect-error - typescript is generating 2322 errors for all properties after name, which is wrong -->\n              <slot\n                :name=\"calculatedFooterSlot(field.key)\"\n                :label=\"field.label\"\n                :column=\"field.key\"\n                :field=\"field as LiteralUnion<keyof Items>\"\n                :is-foot=\"true\"\n              >\n                <!-- eslint-enable prettier/prettier -->\n                {{ getTableFieldHeadLabel(field) }}\n              </slot>\n            </div>\n          </div>\n        </BTh>\n      </BTr>\n    </BTfoot>\n    <BTfoot v-else-if=\"slots['custom-foot']\" v-bind=\"footerProps\">\n      <slot\n        name=\"custom-foot\"\n        :fields=\"computedFields\"\n        :items=\"props.items\"\n        :columns=\"computedFieldsTotal\"\n      />\n    </BTfoot>\n    <caption v-if=\"slots['table-caption'] || props.caption\">\n      <slot name=\"table-caption\">\n        {{ props.caption }}\n      </slot>\n    </caption>\n  </BTableSimple>\n</template>\n\n<script setup lang=\"ts\" generic=\"Items\">\nimport {computed, inject, ref, watch} from 'vue'\nimport type {BTableLiteProps} from '../../types/ComponentProps'\nimport {\n  isTableField,\n  isTableItem,\n  type TableField,\n  type TableItem,\n  type TableRowThead,\n  type TableRowType,\n} from '../../types/TableTypes'\nimport BTableSimple from './BTableSimple.vue'\nimport BTbody from './BTbody.vue'\nimport BTd from './BTd.vue'\nimport BTfoot from './BTfoot.vue'\nimport BTh from './BTh.vue'\nimport BThead from './BThead.vue'\nimport BTr from './BTr.vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {get, pick} from '../../utils/object'\nimport {btableSimpleProps, getDataLabelAttr, getTableFieldHeadLabel} from '../../utils/tableUtils'\nimport {formatItem} from '../../utils/formatItem'\nimport {filterEvent} from '../../utils/filterEvent'\nimport {startCase} from '../../utils/stringUtils'\nimport type {LiteralUnion} from '../../types/LiteralUnion'\nimport {useId} from '../../composables/useId'\nimport type {BTableLiteEmits} from '../../types/ComponentEmits'\nimport type {BTableLiteSlots} from '../../types'\nimport {CODE_DOWN, CODE_END, CODE_HOME, CODE_UP} from '../../utils/constants'\nimport {stopEvent} from '../../utils/event'\nimport {tableKeyboardNavigationKey} from '../../utils/keys'\n\nconst _props = withDefaults(defineProps<BTableLiteProps<Items>>(), {\n  caption: undefined,\n  align: undefined,\n  fields: () => [],\n  footClone: false,\n  items: () => [],\n  labelStacked: false,\n  fieldColumnClass: undefined,\n  tbodyTrClass: undefined,\n  detailsTdClass: undefined,\n  headVariant: undefined,\n  headRowVariant: undefined,\n  footRowVariant: undefined,\n  footVariant: undefined,\n  modelValue: undefined,\n  primaryKey: undefined,\n  tbodyClass: undefined,\n  tbodyTrAttrs: undefined,\n  tfootClass: undefined,\n  tfootTrClass: undefined,\n  theadClass: undefined,\n  theadTrClass: undefined,\n  // BTableSimpleProps props\n  borderVariant: undefined,\n  tableClass: undefined,\n  variant: undefined,\n  bordered: undefined,\n  borderless: undefined,\n  captionTop: undefined,\n  dark: undefined,\n  hover: undefined,\n  id: undefined,\n  noBorderCollapse: undefined,\n  outlined: undefined,\n  fixed: undefined,\n  responsive: undefined,\n  stacked: undefined,\n  striped: undefined,\n  stripedColumns: undefined,\n  small: undefined,\n  stickyHeader: undefined,\n  // End BTableSimpleProps props\n})\nconst props = useDefaults(_props, 'BTableLite')\nconst emit = defineEmits<BTableLiteEmits<Items>>()\nconst slots = defineSlots<BTableLiteSlots<Items>>()\n\n// Inject keyboard navigation state from parent BTable\nconst keyboardNavigation = inject(tableKeyboardNavigationKey, null)\n\nconst computedId = useId(() => props.id)\n\nconst generateDetailsItem = (item: TableItem): [object, boolean | undefined] => [\n  item,\n  item._showDetails,\n]\nconst detailsMap = ref(new WeakMap<object, boolean | undefined>())\nwatch(\n  () => props.items,\n  (items) => {\n    items.forEach((item) => {\n      if (!isTableItem(item)) return\n      detailsMap.value.set(...generateDetailsItem(item))\n    })\n  },\n  {deep: true, immediate: true}\n)\n\nconst computedTableClasses = computed(() => [\n  props.tableClass,\n  {\n    [`align-${props.align}`]: props.align !== undefined,\n  },\n])\n\nconst computedFields = computed<(TableField<Items> & {_noHeader?: true})[]>(() => {\n  if (!props.fields.length && props.items.length) {\n    const [firstItem] = props.items\n    if (firstItem && (isTableItem(firstItem) || Array.isArray(firstItem))) {\n      return Object.keys(firstItem).map((k) => {\n        const label = startCase(k)\n        return {\n          key: k,\n          label,\n          tdAttr: getDataLabelAttr(props, label),\n        }\n      })\n    }\n    // The items are primitives, so we just return a single empty field\n    // No header will be shown, as we don't know what to show\n    return [{key: '', _noHeader: true}]\n  }\n\n  return props.fields.map((f) => {\n    if (isTableField(f)) {\n      const label = f.label ?? startCase(f.key as string)\n      return {\n        ...(f as TableField<Items>),\n        tdAttr: {...getDataLabelAttr(props, label), ...f.tdAttr},\n      }\n    }\n    const label = startCase(f as string)\n    return {\n      key: f as string,\n      label,\n      tdAttr: getDataLabelAttr(props, label),\n    }\n  })\n})\nconst computedFieldsTotal = computed(() => computedFields.value.length)\nconst showComputedHeaders = computed(() => {\n  // We only hide the header if all fields have _noHeader set to true. Which would be our doing\n  // This usually happens under a circumstance of displaying an array of primitives\n  // Under any other circumstance, I'm not sure how this would apply\n  if (computedFieldsTotal.value > 0 && computedFields.value.every((el) => el._noHeader === true))\n    return false\n  return true\n})\n\nconst footerProps = computed(() => ({\n  variant: props.footVariant ?? props.headVariant,\n  class: props.tfootClass ?? props.theadClass,\n}))\n\nconst calculatedFooterSlot = (key: LiteralUnion<keyof Items>): keyof typeof slots =>\n  slots[`foot(${String(key)})`]\n    ? `foot(${String(key)})`\n    : slots['foot()']\n      ? 'foot()'\n      : slots[`head(${String(key)})`]\n        ? `head(${String(key)})`\n        : 'head()'\n\nconst itemAttributes = (item: Items, fieldKey: string, attr?: unknown) => {\n  const val = get(item, fieldKey)\n  return attr && typeof attr === 'function' ? attr(val, fieldKey, item) : attr\n}\n\nconst callThAttr = (item: Items | null, field: TableField<Items>, type: TableRowThead) => {\n  const fieldKey = String(field.key)\n  const val = get(item, fieldKey)\n  return field.thAttr && typeof field.thAttr === 'function'\n    ? field.thAttr(val, fieldKey, item, type)\n    : field.thAttr\n}\n\nconst headerClicked = (field: TableField<Items>, event: Readonly<MouseEvent>, isFooter = false) => {\n  emit('head-clicked', field.key as string, field, event, isFooter)\n}\n\nconst toggleRowDetails = (tr: Items) => {\n  if (isTableItem(tr)) {\n    const prevValue = detailsMap.value.get(tr)\n    detailsMap.value.set(tr, !prevValue)\n    tr._showDetails = !prevValue\n  }\n}\n\nconst getFieldColumnClasses = (field: TableField) => [\n  field.class,\n  field.thClass,\n  {\n    'b-table-sticky-column': field.stickyColumn,\n  },\n  props.fieldColumnClass\n    ? typeof props.fieldColumnClass === 'function'\n      ? props.fieldColumnClass(field)\n      : props.fieldColumnClass\n    : null,\n]\n\nconst getFieldRowClasses = (field: Readonly<TableField>, tr: Items) => {\n  const val = get(tr, String(field.key))\n  return [\n    field.class,\n    typeof field.tdClass === 'function' ? field.tdClass(val, String(field.key), tr) : field.tdClass,\n    (isTableItem(tr) ? tr._cellVariants?.[field.key as string] : false)\n      ? `table-${(tr as TableItem)._cellVariants?.[field.key as string]}`\n      : null,\n    {\n      'b-table-sticky-column': field.stickyColumn,\n    },\n  ]\n}\n\nconst handleMiddleClick = (item: Items, itemIndex: number, event: MouseEvent) => {\n  if (event.button === 1 && !filterEvent(event)) {\n    emit('row-middle-clicked', item, itemIndex, event)\n  }\n}\nconst callTbodyTrAttrs = (item: Items | null, type: TableRowType) =>\n  props.tbodyTrAttrs\n    ? typeof props.tbodyTrAttrs === 'function'\n      ? props.tbodyTrAttrs(item, type)\n      : props.tbodyTrAttrs\n    : null\n\nconst getRowClasses = (item: Items | null, type: TableRowType) =>\n  props.tbodyTrClass\n    ? typeof props.tbodyTrClass === 'function'\n      ? props.tbodyTrClass(item, type)\n      : props.tbodyTrClass\n    : null\n\nconst generateTableRowId = (primaryKeyValue: string) =>\n  `${computedId.value}__row_${primaryKeyValue}`\n\nconst getCellComponent = (field: Readonly<TableField>) => {\n  if (field?.isRowHeader) {\n    return BTh\n  }\n  return BTd\n}\n\n// Keyboard navigation support\nconst shouldHeaderBeFocusable = (field: TableField<Items>) =>\n  !!(keyboardNavigation?.headerNavigation.value && field.sortable === true)\n\nconst shouldRowBeFocusable = computed(\n  () => !!(keyboardNavigation?.rowNavigation.value && props.items.length > 0)\n)\n\nconst handleHeaderKeydown = (field: TableField<Items>, event: KeyboardEvent, isFooter = false) => {\n  const {target, code} = event\n\n  if (target && (target as Element).tagName !== 'TH' && document.activeElement === target) return\n\n  if (code === 'Enter' || code === 'Space') {\n    stopEvent(event)\n    headerClicked(field, event as unknown as MouseEvent, isFooter)\n  }\n}\n\nconst handleRowKeydown = (item: Items, itemIndex: number, event: KeyboardEvent) => {\n  const {target, code, shiftKey} = event\n\n  if (target && (target as Element).tagName !== 'TR' && document.activeElement === target) return\n\n  if (code === 'Enter' || code === 'Space') {\n    stopEvent(event)\n    emit('row-clicked', item, itemIndex, event as unknown as MouseEvent)\n    return\n  }\n\n  if (code === CODE_DOWN || code === CODE_UP || code === CODE_HOME || code === CODE_END) {\n    stopEvent(event)\n    handleRowNavigation(code, shiftKey, itemIndex)\n  }\n}\n\nconst handleRowNavigation = (code: string, shiftKey: boolean, currentIndex: number) => {\n  const rows = Array.from(\n    document.querySelectorAll(`#${computedId.value} tbody tr[tabindex]`)\n  ) as HTMLTableRowElement[]\n\n  if (rows.length === 0) return\n\n  let targetIndex = currentIndex\n\n  if (code === CODE_DOWN) {\n    if (shiftKey) {\n      targetIndex = rows.length - 1 // Go to last row\n    } else {\n      targetIndex = Math.min(currentIndex + 1, rows.length - 1) // Go to next row\n    }\n  } else if (code === CODE_UP) {\n    if (shiftKey) {\n      targetIndex = 0 // Go to first row\n    } else {\n      targetIndex = Math.max(currentIndex - 1, 0) // Go to previous row\n    }\n  } else if (code === CODE_END) {\n    targetIndex = rows.length - 1 // Go to last row\n  } else if (code === CODE_HOME) {\n    targetIndex = 0 // Go to first row\n  }\n\n  if (targetIndex !== currentIndex && rows[targetIndex]) {\n    rows[targetIndex].focus()\n  }\n}\n\nconst computedSimpleProps = computed(() => ({\n  ...pick(props, btableSimpleProps),\n  tableClass: computedTableClasses.value,\n  id: computedId.value,\n}))\n</script>\n","<template>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    fill=\"currentColor\"\n    :class=\"iconClass\"\n    :style=\"{opacity: iconOpacity}\"\n    viewBox=\"0 0 16 16\"\n    aria-hidden=\"true\"\n  >\n    <path fill-rule=\"evenodd\" :d=\"iconPath\" />\n  </svg>\n</template>\n\n<script setup lang=\"ts\" generic=\"Items\">\nimport {computed} from 'vue'\nimport type {BTableInitialSortDirection, BTableSortBy, TableField} from '../types/TableTypes'\n\nconst props = defineProps<{\n  fieldInfo: TableField<Items>\n  sortBy?: BTableSortBy[]\n  initialSortDirection?: BTableInitialSortDirection\n}>()\n\nconst currentSort = computed(() => props.sortBy?.find((el) => el.key === props.fieldInfo.key))\n\nconst ascPath =\n  'M8 12a.5.5 0 0 0 .5-.5V5.707l2.146 2.147a.5.5 0 0 0 .708-.708l-3-3a.5.5 0 0 0-.708 0l-3 3a.5.5 0 1 0 .708.708L7.5 5.707V11.5a.5.5 0 0 0 .5.5z'\nconst descPath =\n  'M8 4a.5.5 0 0 1 .5.5v5.793l2.146-2.147a.5.5 0 0 1 .708.708l-3 3a.5.5 0 0 1-.708 0l-3-3a.5.5 0 1 1 .708-.708L7.5 10.293V4.5A.5.5 0 0 1 8 4z'\n\nconst resolvedDirection = computed(() => {\n  if (currentSort.value?.order) return currentSort.value.order\n\n  const fieldInitialDirection = props.fieldInfo.initialSortDirection || props.initialSortDirection\n\n  if (fieldInitialDirection === 'last') {\n    const lastSorted = [...(props.sortBy ?? [])].reverse().find((sort) => sort.order !== undefined)\n    return lastSorted?.order || 'asc'\n  }\n\n  return fieldInitialDirection === 'desc' ? 'desc' : 'asc'\n})\n\nconst iconPath = computed(() => (resolvedDirection.value === 'desc' ? descPath : ascPath))\n\nconst iconClass = computed(() =>\n  resolvedDirection.value === 'desc' ? 'bi bi-arrow-down-short' : 'bi bi-arrow-up-short'\n)\n\nconst iconOpacity = computed(() => (currentSort.value?.order ? 1 : 0.4))\n</script>\n","<template>\n  <!-- eslint-disable prettier/prettier -->\n  <BTableLite v-bind=\"computedLiteProps\">\n    <template v-if=\"slots['table-colgroup']\" #table-colgroup=\"scope\">\n      <slot name=\"table-colgroup\" v-bind=\"scope\" />\n    </template>\n    <!-- eslint-enable prettier/prettier -->\n    <template v-if=\"slots['thead-top']\" #thead-top=\"scope\">\n      <slot\n        name=\"thead-top\"\n        v-bind=\"scope\"\n        :clear-selected=\"exposedSelectableUtilities.clearSelected\"\n        :select-all-rows=\"exposedSelectableUtilities.selectAllRows\"\n        :fields=\"computedFields\"\n      />\n    </template>\n    <template v-if=\"slots['thead-sub']\" #thead-sub=\"scope\">\n      <slot name=\"thead-sub\" v-bind=\"scope\" :fields=\"computedFields\" />\n    </template>\n    <template v-if=\"slots['top-row']\" #top-row=\"scope\">\n      <slot name=\"top-row\" v-bind=\"scope\" :fields=\"computedFields\" />\n    </template>\n    <template v-if=\"slots['row-details']\" #row-details=\"scope\">\n      <slot\n        name=\"row-details\"\n        v-bind=\"scope\"\n        :fields=\"computedFields\"\n        :select-row=\"(index = scope.index) => exposedSelectableUtilities.selectRow(index)\"\n        :unselect-row=\"(index = scope.index) => exposedSelectableUtilities.unselectRow(index)\"\n        :row-selected=\"exposedSelectableUtilities.isRowSelected(scope.index)\"\n      />\n    </template>\n    <template v-if=\"slots['bottom-row']\" #bottom-row=\"scope\">\n      <slot name=\"bottom-row\" v-bind=\"scope\" :fields=\"computedFields\" />\n    </template>\n    <template v-if=\"slots['custom-foot']\" #custom-foot=\"scope\">\n      <slot name=\"custom-foot\" v-bind=\"scope\" :fields=\"computedFields\" />\n    </template>\n    <template v-if=\"slots['table-caption']\" #table-caption>\n      <slot name=\"table-caption\" />\n    </template>\n    <template v-for=\"name in dynamicCellSlots\" #[name]=\"scope\">\n      <slot\n        :name\n        v-bind=\"scope\"\n        :select-row=\"(index = scope.index) => exposedSelectableUtilities.selectRow(index)\"\n        :unselect-row=\"(index = scope.index) => exposedSelectableUtilities.unselectRow(index)\"\n        :row-selected=\"exposedSelectableUtilities.isRowSelected(scope.index)\"\n      />\n    </template>\n    <template v-for=\"name in dynamicFootSlots\" #[name]=\"scope\">\n      <slot\n        :name\n        v-bind=\"scope\"\n        :select-all-rows=\"exposedSelectableUtilities.selectAllRows\"\n        :clear-selected=\"exposedSelectableUtilities.clearSelected\"\n      />\n    </template>\n\n    <template\n      v-for=\"field in computedFields\"\n      :key=\"field.key\"\n      #[`head(${String(field.key)})`]=\"scope\"\n    >\n      <slot\n        :name=\"\n          slots[`head(${String(field.key)})`]\n            ? (`head(${String(field.key)})` as 'head()')\n            : 'head()'\n        \"\n        v-bind=\"scope\"\n        :select-all-rows=\"exposedSelectableUtilities.selectAllRows\"\n        :clear-selected=\"exposedSelectableUtilities.clearSelected\"\n      >\n        {{ getTableFieldHeadLabel(field) }}\n      </slot>\n      <template v-if=\"isSortable && !!scope.field.sortable && props.noSortableIcon === false\">\n        <slot\n          v-if=\"sortByModel?.find((el) => el.key === scope.field.key)?.order === 'asc'\"\n          v-bind=\"scope\"\n          :name=\"\n            slots[`sortAsc(${String(scope.field.key)})`]\n              ? (`sortAsc(${String(scope.field.key)})` as 'sortAsc()')\n              : 'sortAsc()'\n          \"\n        >\n          <SortIcon\n            :field-info=\"scope.field\"\n            :sort-by=\"sortByModel\"\n            :initial-sort-direction=\"props.initialSortDirection\"\n          />\n        </slot>\n        <slot\n          v-else-if=\"sortByModel?.find((el) => el.key === scope.field.key)?.order === 'desc'\"\n          v-bind=\"scope\"\n          :name=\"\n            slots[`sortDesc(${String(scope.field.key)})`]\n              ? (`sortDesc(${String(scope.field.key)})` as 'sortDesc()')\n              : 'sortDesc()'\n          \"\n        >\n          <SortIcon\n            :field-info=\"scope.field\"\n            :sort-by=\"sortByModel\"\n            :initial-sort-direction=\"props.initialSortDirection\"\n          />\n        </slot>\n        <slot\n          v-else\n          v-bind=\"scope\"\n          :name=\"\n            slots[`sortDefault(${String(scope.field.key)})`]\n              ? (`sortDefault(${String(scope.field.key)})` as 'sortDefault()')\n              : 'sortDefault()'\n          \"\n        >\n          <SortIcon\n            :field-info=\"scope.field\"\n            :sort-by=\"sortByModel\"\n            :initial-sort-direction=\"props.initialSortDirection\"\n          />\n        </slot>\n      </template>\n    </template>\n    <template #custom-body=\"scope\">\n      <BTr\n        v-if=\"busyModel && slots['table-busy']\"\n        class=\"b-table-busy-slot\"\n        :class=\"getBusyRowClasses\"\n      >\n        <BTd :colspan=\"scope.fields.length\">\n          <slot name=\"table-busy\" />\n        </BTd>\n      </BTr>\n\n      <BTr\n        v-else-if=\"props.showEmpty === true && computedItems.length === 0\"\n        class=\"b-table-empty-row\"\n      >\n        <BTd :colspan=\"computedFields.length\">\n          <div role=\"alert\" aria-live=\"polite\">\n            <div class=\"text-center my-2\">\n              <slot v-if=\"isFilterableTable\" name=\"empty-filtered\" v-bind=\"emptySlotScope\">\n                {{ props.emptyFilteredText }}\n              </slot>\n              <slot v-else name=\"empty\" v-bind=\"emptySlotScope\">\n                {{ props.emptyText }}\n              </slot>\n            </div>\n          </div>\n        </BTd>\n      </BTr>\n    </template>\n  </BTableLite>\n</template>\n\n<script setup lang=\"ts\" generic=\"Items\">\nimport {useToNumber} from '@vueuse/core'\nimport {computed, onMounted, provide, type Ref, ref, watch} from 'vue'\nimport {formatItem} from '../../utils/formatItem'\nimport BTableLite from './BTableLite.vue'\nimport BTd from './BTd.vue'\nimport BTr from './BTr.vue'\nimport SortIcon from '../SortIcon.vue'\nimport {\n  type BTableSortBy,\n  type BTableSortByOrder,\n  isTableField,\n  isTableItem,\n  type NoProviderTypes,\n  type TableField,\n  type TableFieldFormatter,\n  type TableFieldRaw,\n  type TableItem,\n  type TableRowType,\n  type TableStrictClassValue,\n} from '../../types/TableTypes'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BTableProps} from '../../types/ComponentProps'\nimport type {BTableEmits, BTableLiteEmits} from '../../types/ComponentEmits'\nimport {deepEqual, get, pick, set} from '../../utils/object'\nimport {startCase} from '../../utils/stringUtils'\nimport {\n  btableLiteProps,\n  btableSimpleProps,\n  getDataLabelAttr,\n  getTableFieldHeadLabel,\n} from '../../utils/tableUtils'\nimport {useId} from '../../composables/useId'\nimport type {BTableSlots, CamelCase} from '../../types'\nimport {tableKeyboardNavigationKey} from '../../utils/keys'\n\nconst _props = withDefaults(\n  defineProps<Omit<BTableProps<Items>, 'sortBy' | 'busy' | 'selectedItems'>>(),\n  {\n    noSortableIcon: false,\n    perPage: Number.POSITIVE_INFINITY,\n    filter: undefined,\n    filterFunction: undefined,\n    mustSort: false,\n    initialSortDirection: 'asc',\n    filterable: undefined,\n    provider: undefined,\n    noProvider: undefined,\n    noProviderPaging: false,\n    noProviderSorting: false,\n    multisort: false,\n    noProviderFiltering: false,\n    noLocalSorting: false,\n    noSelectOnClick: false,\n    selectable: false,\n    stickySelect: false,\n    selectHead: true,\n    selectMode: 'multi',\n    selectionVariant: 'primary',\n    busyLoadingText: 'Loading...',\n    currentPage: 1,\n    sortCompare: undefined,\n    // BTableLite props\n    items: () => [],\n    fields: () => [],\n    // All others use defaults\n    caption: undefined,\n    align: undefined,\n    footClone: undefined,\n    labelStacked: undefined,\n    showEmpty: false,\n    emptyText: 'There are no records to show',\n    emptyFilteredText: 'There are no records matching your request',\n    fieldColumnClass: undefined,\n    tbodyTrClass: undefined,\n    detailsTdClass: undefined,\n    headVariant: undefined,\n    headRowVariant: undefined,\n    footRowVariant: undefined,\n    footVariant: undefined,\n    modelValue: undefined,\n    primaryKey: undefined,\n    tbodyClass: undefined,\n    tfootClass: undefined,\n    tfootTrClass: undefined,\n    theadClass: undefined,\n    theadTrClass: undefined,\n    // End BTableLite props\n    // BTableSimple props\n    borderVariant: undefined,\n    variant: undefined,\n    bordered: undefined,\n    borderless: undefined,\n    captionTop: undefined,\n    dark: undefined,\n    hover: undefined,\n    id: undefined,\n    noBorderCollapse: undefined,\n    outlined: undefined,\n    fixed: undefined,\n    responsive: undefined,\n    stacked: undefined,\n    striped: undefined,\n    stripedColumns: undefined,\n    small: undefined,\n    stickyHeader: undefined,\n    // End BTableSimple props\n  }\n)\nconst props = useDefaults(_props, 'BTable')\nconst emit = defineEmits<BTableEmits<Items>>()\nconst slots = defineSlots<BTableSlots<Items>>()\n\nconst dynamicCellSlots = computed(\n  () => Object.keys(slots).filter((key) => key.startsWith('cell(')) as 'cell()'[]\n)\nconst dynamicFootSlots = computed(\n  () => Object.keys(slots).filter((key) => key.startsWith('foot(')) as 'foot()'[]\n)\n\nconst sortByModel = defineModel<BTableProps<Items>['sortBy']>('sortBy', {\n  default: undefined,\n})\nconst busyModel = defineModel<Exclude<BTableProps<Items>['busy'], undefined>>('busy', {\n  default: false,\n})\nconst selectedItemsModel = defineModel<Exclude<BTableProps<Items>['selectedItems'], undefined>>(\n  'selectedItems',\n  {\n    default: () => [],\n  }\n)\n\nconst computedId = useId(() => props.id)\n\nconst selectedItemsToSet = computed({\n  get: () => new Set(selectedItemsModel.value),\n  set: (val) => {\n    selectedItemsModel.value = [...val]\n  },\n})\n\nwatch(selectedItemsToSet, (newValue, oldValue) => {\n  Array.from(oldValue)\n    .filter((item) => !newValue.has(item))\n    .forEach((item) => {\n      emit('row-unselected', item)\n    })\n  Array.from(newValue)\n    .filter((item) => !oldValue.has(item))\n    .forEach((item) => {\n      emit('row-selected', item)\n    })\n})\n/**\n * This is to avoid the issue of directly mutating the array structure and to properly trigger the computed setter.\n * The utils also conveniently emit the proper events after\n */\nconst selectedItemsSetUtilities = {\n  add: (item: Items) => {\n    const value = new Set(selectedItemsToSet.value)\n    value.add(item)\n    selectedItemsToSet.value = value\n  },\n  clear: () => {\n    selectedItemsToSet.value.forEach((item) => {\n      selectedItemsSetUtilities.delete(item)\n    })\n  },\n  delete: (item: Items) => {\n    const value = new Set(selectedItemsToSet.value)\n    if (props.primaryKey) {\n      const pkey: string = props.primaryKey\n      selectedItemsModel.value.forEach((v, i) => {\n        const selectedKey = get(v, pkey)\n        const itemKey = get(item, pkey)\n\n        if (!!selectedKey && !!itemKey && selectedKey === itemKey) {\n          value.delete(selectedItemsModel.value[i])\n        }\n      })\n    } else {\n      value.delete(item)\n    }\n    selectedItemsToSet.value = value\n  },\n  set: (items: Items[]) => {\n    selectedItemsToSet.value = new Set(items)\n  },\n  has: (item: Items) => {\n    if (!props.primaryKey) return selectedItemsToSet.value.has(item)\n\n    // Resolver for when we are using primary keys\n    const pkey: string = props.primaryKey\n    for (const selected of selectedItemsToSet.value) {\n      const selectedKey = get(selected, pkey)\n      const itemKey = get(item, pkey)\n\n      if (!!selectedKey && !!itemKey && selectedKey === itemKey) return true\n    }\n    return false\n  },\n} as const\n\n/**\n * Only stores data that is fetched when using the provider\n */\nconst internalItems: Ref<Items[]> = ref([])\n\nconst perPageNumber = useToNumber(() => props.perPage, {method: 'parseInt'})\nconst currentPageNumber = useToNumber(() => props.currentPage, {method: 'parseInt'})\n\nconst isFilterableTable = computed(() => !!props.filter)\nconst usesProvider = computed(() => props.provider !== undefined)\nconst isSelecting = computed(() => selectedItemsToSet.value.size > 0)\n\nconst isSortable = computed(\n  () =>\n    sortByModel.value !== undefined ||\n    props.fields.some(\n      (field) => typeof field === 'object' && field !== null && field.sortable === true\n    )\n)\n\n// Provide keyboard navigation state to child components\nconst keyboardRowNavigation = computed(() => !!(props.selectable && !props.noSelectOnClick))\nconst keyboardHeaderNavigation = computed(() => !!isSortable.value)\n\nprovide(tableKeyboardNavigationKey, {\n  rowNavigation: keyboardRowNavigation,\n  headerNavigation: keyboardHeaderNavigation,\n})\n\nconst computedFields = computed<TableField<Items>[]>(() =>\n  props.fields.map((el) => {\n    if (!isTableField<Items>(el)) {\n      const label = startCase(el as string)\n      return {\n        key: el as string,\n        label,\n        tdAttr: getDataLabelAttr(props, label),\n      }\n    }\n\n    const value = sortByModel.value?.find((sb) => el.key === sb.key)\n    const sortValue =\n      isSortable.value === false\n        ? undefined\n        : value === undefined\n          ? 'none'\n          : value.order === 'desc'\n            ? 'descending'\n            : value.order === 'asc'\n              ? 'ascending'\n              : 'none'\n\n    return {\n      ...(el as TableField<Items>),\n      thAttr: {\n        'aria-sort': sortValue,\n        ...el.thAttr,\n      },\n    }\n  })\n)\n\nconst tableClasses = computed(() => ({\n  'b-table-busy': busyModel.value,\n  'b-table-selectable': props.selectable,\n  'user-select-none': props.selectable && isSelecting.value,\n  'b-table-fixed': props.fixed,\n  'b-table-no-border-collapse': props.noBorderCollapse,\n}))\n\nconst getBusyRowClasses = computed(() => [\n  props.tbodyTrClass\n    ? typeof props.tbodyTrClass === 'function'\n      ? props.tbodyTrClass(null, 'table-busy')\n      : props.tbodyTrClass\n    : null,\n])\nconst getFieldColumnClasses = (field: TableField) => [\n  {\n    'b-table-sortable-column': isSortable.value && field.sortable,\n  },\n]\n// TODO this class has issues if the table has a variant already applied\n// Also the row should technically have aria-selected. Both things could probably just use a function with tbodyTrAttrs\n// But functional tbodyTrAttrs are not supported yet\n// Also the stuff for resolving functions could probably be made a util\nconst getRowClasses = (item: Items | null, type: TableRowType): TableStrictClassValue => [\n  {\n    [`selected table-${props.selectionVariant}`]:\n      props.selectable && !!item && selectedItemsSetUtilities.has(item),\n  },\n  props.tbodyTrClass\n    ? typeof props.tbodyTrClass === 'function'\n      ? props.tbodyTrClass(item, type)\n      : props.tbodyTrClass\n    : null,\n]\n\nconst getFormatter = (value: TableField<Items>): TableFieldFormatter<Items> | undefined =>\n  typeof value.sortByFormatted === 'function' ? value.sortByFormatted : value.formatter\n\nconst getStringValue = (ob: Items, key: string): string => {\n  if (!isTableItem(ob)) return String(ob)\n\n  const sortField = computedFields.value.find((el) => {\n    if (isTableField<Items>(el)) return el.key === key\n\n    return false\n  })\n  const val = get(ob, key as keyof TableItem)\n  if (isTableField<Items>(sortField) && !!sortField.sortByFormatted) {\n    const formatter = getFormatter(sortField)\n    if (formatter) {\n      return String(formatItem(ob, String(sortField.key), formatter))\n    }\n  }\n  return typeof val === 'object' && val !== null ? JSON.stringify(val) : (val?.toString() ?? '')\n}\n\nconst fieldByKey = computed(() => {\n  const map = new Map<string | number | symbol, TableField<Items>>()\n  for (const f of computedFields.value) if (isTableField<Items>(f)) map.set(f.key, f)\n  return map\n})\n\nconst computedItems = computed<Items[]>(() => {\n  const sortByItems = sortByModel.value?.filter((el) => !!el.order)\n\n  const mapItem = (item: Items): Items => {\n    if (\n      typeof item === 'object' &&\n      item !== null &&\n      Object.keys(item).some((key) => key.includes('.'))\n    ) {\n      let newItem: Partial<Items> = {}\n      for (const key in item) {\n        if (key.includes('.')) {\n          newItem = set(newItem, key, item[key])\n        } else {\n          newItem[key] = item[key]\n        }\n      }\n      return newItem as Items // This should be an items at this point\n    }\n    return item\n  }\n\n  const filterItem = (item: Items): boolean => {\n    if (!isTableItem(item)) return true\n\n    return Object.entries(item).some(([key, val]) => {\n      if (\n        val === null ||\n        val === undefined ||\n        key[0] === '_' ||\n        (!props.filterable?.includes(key) && !!props.filterable?.length)\n      )\n        return false\n\n      if (props.filterFunction && typeof props.filterFunction === 'function') {\n        return props.filterFunction(item, props.filter)\n      }\n\n      const realVal = (): string => {\n        const filterField = computedFields.value.find((el) => {\n          if (isTableField<Items>(el)) return el.key === key\n          return false\n        })\n        if (isTableField<Items>(filterField) && !!filterField.filterByFormatted) {\n          const formatter = getFormatter(filterField)\n          if (formatter) {\n            return String(formatter(val, String(filterField.key), item))\n          }\n        }\n        return typeof val === 'object' ? JSON.stringify(Object.values(val)) : val.toString()\n      }\n      const itemValue: string = realVal()\n      return itemValue.toLowerCase().includes(props.filter?.toLowerCase() ?? '')\n    })\n  }\n\n  const mappedItems = (usesProvider.value ? internalItems.value : props.items).reduce(\n    (acc, val) => {\n      const item = mapItem(val)\n      const shouldFilter =\n        isFilterableTable.value && (!usesProvider.value || props.noProviderFiltering)\n\n      if (!shouldFilter || filterItem(item)) acc.push(item)\n\n      return acc\n    },\n    [] as Items[]\n  )\n\n  if (\n    sortByItems?.length &&\n    ((isSortable.value === true && !usesProvider.value && !props.noLocalSorting) ||\n      (isSortable.value === true && usesProvider.value && props.noProviderSorting))\n  ) {\n    // Multi-sort\n    return mappedItems.sort((a, b) => {\n      for (let i = 0; i < sortByItems.length; i++) {\n        const {key, order} = sortByItems[i]\n        const field = fieldByKey.value.get(key)\n        const comparer = field?.sortCompare || props.sortCompare\n        const comparison = comparer\n          ? comparer(a, b, key)\n          : getStringValue(a, key).localeCompare(getStringValue(b, key), undefined, {numeric: true})\n\n        if (comparison !== 0) {\n          return order === 'asc' ? comparison : -comparison\n        }\n      }\n      return 0 // items are equal\n    })\n  }\n\n  return mappedItems\n})\n\nconst emptySlotScope = computed(() => ({\n  emptyFilteredText: props.emptyFilteredText,\n  emptyText: props.emptyText,\n  fields: computedFields.value,\n  items: computedItems.value,\n}))\n\nconst computedDisplayItems = computed<Items[]>(() => {\n  if (Number.isNaN(perPageNumber.value) || (usesProvider.value && !props.noProviderPaging)) {\n    return computedItems.value\n  }\n\n  return computedItems.value.slice(\n    (currentPageNumber.value - 1) * (perPageNumber.value || Number.POSITIVE_INFINITY),\n    currentPageNumber.value * (perPageNumber.value || Number.POSITIVE_INFINITY)\n  )\n})\n\nwatch(computedDisplayItems, (v) => {\n  emit('change', v)\n})\n\nconst handleRowSelection = (\n  row: Items,\n  index: number,\n  shiftClicked = false,\n  ctrlClicked = false,\n  metaClicked = false\n) => {\n  if (!props.selectable) return\n\n  if (props.selectMode === 'single' || props.selectMode === 'multi') {\n    // Do nothing when these items are held\n    if (shiftClicked || ctrlClicked) return\n    // Delete if item is in\n    if (selectedItemsSetUtilities.has(row)) {\n      selectedItemsSetUtilities.delete(row)\n    } else {\n      if (props.selectMode === 'single') {\n        selectedItemsSetUtilities.set([row])\n      } else {\n        selectedItemsSetUtilities.add(row)\n      }\n    }\n  } else {\n    if (ctrlClicked || metaClicked) {\n      // Delete if in the object\n      if (selectedItemsSetUtilities.has(row)) {\n        selectedItemsSetUtilities.delete(row)\n        // Otherwise add. Functions similarly to 'multi' at this point\n      } else {\n        selectedItemsSetUtilities.add(row)\n      }\n      // This is where range is different, due to the difference in shift\n    } else if (shiftClicked) {\n      const lastSelectedItem = [...selectedItemsToSet.value].pop()\n      const lastSelectedIndex = computedItems.value.findIndex((i) => i === lastSelectedItem)\n      const selectStartIndex = Math.min(lastSelectedIndex, index)\n      const selectEndIndex = Math.max(lastSelectedIndex, index)\n      const items = computedItems.value.slice(selectStartIndex, selectEndIndex + 1)\n      selectedItemsSetUtilities.set(items)\n      // If nothing is being held, then we just behave like it's single mode\n    } else {\n      selectedItemsSetUtilities.set([row])\n    }\n  }\n}\n\nconst handleFieldSorting = (field: TableField<Items>) => {\n  if (!isSortable.value) return\n\n  const fieldKey = typeof field === 'object' && field !== null ? field.key : field\n  const fieldSortable = typeof field === 'object' && field !== null ? field.sortable : false\n\n  if (!(isSortable.value === true && fieldSortable === true)) return\n\n  // Get the last sorted direction from the current sort model (last entry with a defined order)\n  //   Exclude the current column if it's already in the sortBy array\n  const getLastSortDirection = (): BTableSortByOrder => {\n    const lastSorted = [...(sortByModel.value ?? [])]\n      .reverse()\n      .find((sort) => sort.order !== undefined && sort.key !== fieldKey)\n    return lastSorted?.order ?? 'asc'\n  }\n\n  // Determine initial sort direction for new sorts\n  const getInitialSortDirection = (): BTableSortByOrder => {\n    // Handle field-level prop\n    if (typeof field === 'object' && field !== null && field.initialSortDirection) {\n      if (field.initialSortDirection === 'last') {\n        return getLastSortDirection()\n      }\n      return field.initialSortDirection\n    }\n    // Handle table-level prop\n    if (props.initialSortDirection) {\n      if (props.initialSortDirection === 'last') {\n        return getLastSortDirection()\n      }\n      return props.initialSortDirection\n    }\n    return 'asc'\n  }\n\n  const resolveOrder = (val: BTableSortByOrder | undefined): BTableSortByOrder | undefined => {\n    // New sort: honor the configured initial direction\n    if (val === undefined) return getInitialSortDirection()\n    // Determine initial direction for this field\n    const initial = getInitialSortDirection()\n    const must =\n      props.mustSort === true ||\n      (Array.isArray(props.mustSort) && props.mustSort.includes(fieldKey as string))\n    if (val === 'asc') {\n      if (initial === 'desc') {\n        // If mustSort, cycle asc -> desc, else asc -> undefined\n        return must ? 'desc' : undefined\n      }\n      // If initial is asc, cycle asc -> desc -> undefined (or asc if mustSort)\n      return 'desc'\n    }\n    if (val === 'desc') {\n      if (initial === 'desc') {\n        return 'asc'\n      }\n      // If mustSort, cycle desc -> asc, else desc -> undefined\n      return must ? 'asc' : undefined\n    }\n    return undefined\n  }\n\n  const index = sortByModel.value?.findIndex((el) => el.key === fieldKey) ?? -1\n  const originalValue = sortByModel.value?.[index]\n  const updatedValue: BTableSortBy =\n    // If value is new, we use the field's initialSortDirection or default to ascending\n    // Otherwise we make a temp copy of the value\n    index === -1 || !originalValue\n      ? {key: fieldKey as string, order: getInitialSortDirection()}\n      : {...originalValue}\n\n  /**\n   * @returns the updated value to emit for sorted\n   */\n  const handleMultiSort = (): BTableSortBy => {\n    const tmp = [...(sortByModel.value ?? [])]\n    const val = updatedValue\n    if (index === -1) {\n      tmp.push(val)\n    } else {\n      const order = resolveOrder(val.order)\n      if (order) {\n        val.order = order\n        tmp.splice(index, 1, val)\n      } else {\n        // Remove the value from the array and emit cleared sort for this key\n        val.order = undefined\n        tmp.splice(index, 1)\n      }\n    }\n    sortByModel.value = tmp\n    return val\n  }\n\n  /**\n   * @returns the updated value to emit for sorted\n   */\n  const handleSingleSort = (): BTableSortBy => {\n    const order = index === -1 ? updatedValue.order : resolveOrder(updatedValue.order)\n    const val = {\n      ...updatedValue,\n      order,\n    }\n    sortByModel.value = order ? [val] : []\n    return val\n  }\n\n  // Then emit the returned updated value\n  emit('sorted', props.multisort === true ? handleMultiSort() : handleSingleSort())\n}\n\nconst callItemsProvider = async () => {\n  if (!usesProvider.value || props.provider === undefined || busyModel.value) return\n  busyModel.value = true\n  const response = props.provider({\n    currentPage: currentPageNumber.value,\n    filter: props.filter,\n    sortBy: sortByModel.value,\n    perPage: perPageNumber.value,\n  })\n  try {\n    const items = response instanceof Promise ? await response : response\n\n    if (items === undefined) return\n    internalItems.value = items\n  } finally {\n    // Potential race condition could occur if the user explicitly sets the busy value to a different value while the response promise is executing\n    // which would have been the users choice.\n    // eslint-disable-next-line require-atomic-updates\n    busyModel.value = false\n  }\n}\n\nconst providerPropsWatch = async (prop: string, val: unknown, oldVal: unknown) => {\n  if (deepEqual(val, oldVal)) return\n\n  //stop provide when paging\n  const inNoProvider = (key: NoProviderTypes) => props.noProvider?.includes(key) === true\n  const noProvideWhenPaging =\n    (prop === 'currentPage' || prop === 'perPage') &&\n    (inNoProvider('paging') || props.noProviderPaging === true)\n  const noProvideWhenFiltering =\n    prop === 'filter' && (inNoProvider('filtering') || props.noProviderFiltering === true)\n  const noProvideWhenSorting =\n    (prop === 'sortBy' || prop === 'sortDesc') &&\n    (inNoProvider('sorting') || props.noProviderSorting === true)\n\n  if (noProvideWhenPaging || noProvideWhenFiltering || noProvideWhenSorting) return\n\n  if (usesProvider.value === true) {\n    await callItemsProvider()\n  }\n\n  if (!(prop === 'currentPage' || prop === 'perPage')) {\n    emit('filtered', [...computedItems.value])\n  }\n}\n\nwatch(\n  () => props.filter,\n  (filter, oldFilter) => {\n    providerPropsWatch('filter', filter, oldFilter)\n\n    if (filter === oldFilter || usesProvider.value) return\n    if (!filter) {\n      emit('filtered', [...computedItems.value])\n    }\n  }\n)\nwatch(currentPageNumber, (val, oldVal) => {\n  providerPropsWatch('currentPage', val, oldVal)\n})\nwatch(perPageNumber, (val, oldVal) => {\n  providerPropsWatch('perPage', val, oldVal)\n})\nwatch(\n  sortByModel,\n  (val, oldVal) => {\n    providerPropsWatch('sortBy', val, oldVal)\n  },\n  {deep: true}\n)\n\nwatch(\n  () => props.provider,\n  (newValue) => {\n    // Reset the internal values if the provider stops getting used\n    if (newValue === undefined) {\n      internalItems.value = []\n      return\n    }\n    // Otherwise we should refresh the table on such a change\n    callItemsProvider()\n  }\n)\n\nonMounted(callItemsProvider)\n\nconst exposedSelectableUtilities = {\n  clearSelected: () => {\n    if (!props.selectable) return\n    selectedItemsSetUtilities.clear()\n  },\n  selectAllRows: () => {\n    if (!props.selectable || props.selectMode === 'single') return\n    selectedItemsToSet.value = new Set(computedItems.value)\n  },\n  selectRow: (index: number) => {\n    if (!props.selectable) return\n    const item = computedItems.value[index]\n    if (!item || selectedItemsSetUtilities.has(item)) return\n    if (props.selectMode === 'single') {\n      selectedItemsSetUtilities.set([item])\n    } else {\n      selectedItemsSetUtilities.add(item)\n    }\n  },\n  unselectRow: (index: number) => {\n    if (!props.selectable) return\n    const item = computedItems.value[index]\n    if (!item || !selectedItemsSetUtilities.has(item)) return\n    selectedItemsSetUtilities.delete(item)\n  },\n  isRowSelected: (index: number) => {\n    if (!props.selectable) return false\n    const item = computedItems.value[index]\n    return selectedItemsSetUtilities.has(item)\n  },\n} as const\n\nconst boundBTableLiteEmits = {\n  onHeadClicked: (fieldKey, field, event, isFooter = false) => {\n    emit('head-clicked', fieldKey, field, event, isFooter)\n    handleFieldSorting(field)\n  },\n  onRowClicked: (row, index, e) => {\n    if (props.noSelectOnClick === false) {\n      handleRowSelection(row, index, e.shiftKey, e.ctrlKey, e.metaKey)\n    }\n    emit('row-clicked', row, index, e)\n  },\n  onRowDblclicked: (...args) => emit('row-dblclicked', ...args),\n  onRowContextmenu: (...args) => emit('row-contextmenu', ...args),\n  onRowHovered: (...args) => emit('row-hovered', ...args),\n  onRowUnhovered: (...args) => emit('row-unhovered', ...args),\n  onRowMiddleClicked: (...args) => emit('row-middle-clicked', ...args),\n} as const satisfies {\n  [K in keyof BTableLiteEmits<Items> as CamelCase<`on-${K & string}`>]: (\n    ...args: BTableLiteEmits<Items>[K]\n  ) => void\n}\nconst computedLiteProps = computed(() => ({\n  ...pick(props, [...btableLiteProps, ...btableSimpleProps]),\n  tableAttrs: {\n    ariaBusy: busyModel.value,\n  },\n  items: computedDisplayItems.value,\n  fields: computedFields.value as TableFieldRaw<Items>[],\n  tableClass: tableClasses.value,\n  tbodyTrClass: getRowClasses,\n  fieldColumnClass: getFieldColumnClasses,\n  id: computedId.value,\n  ...boundBTableLiteEmits,\n}))\n\ndefineExpose({\n  // The row selection methods are really for compat. Users should probably use the v-model though\n  ...exposedSelectableUtilities,\n  items: computedItems,\n  displayItems: computedDisplayItems,\n  getStringValue,\n  refresh: callItemsProvider,\n})\n</script>\n"],"names":["formatItem","item","fieldKey","formatter","val","get","isTableItem","value","isTableField","_props","__props","props","useDefaults","computedClasses","computed","variant","_createElementBlock","class","_renderSlot","_ctx","$slots","stickyColumn","colspan","_unref","rowspan","stackedHeading","_hoisted_2","key","localScope","scope","TABLE_TAG_NAMES","eventFilter","join","filterEvent","event","target","el","disabled","indexOf","tagName","closest","label","labelFor","getAttribute","input","document","getElementById","querySelector","matches","emit","__emit","slots","_useSlots","keyboardNavigation","inject","tableKeyboardNavigationKey","computedId","useId","id","detailsMap","ref","WeakMap","watch","items","forEach","set","_showDetails","generateDetailsItem","deep","immediate","computedTableClasses","tableClass","align","computedFields","fields","length","firstItem","Array","isArray","Object","keys","map","k","startCase","tdAttr","getDataLabelAttr","_noHeader","f","computedFieldsTotal","showComputedHeaders","every","footerProps","footVariant","headVariant","tfootClass","theadClass","callThAttr","field","type","String","thAttr","headerClicked","isFooter","toggleRowDetails","tr","prevValue","getFieldColumnClasses","thClass","fieldColumnClass","getFieldRowClasses","tdClass","_cellVariants","callTbodyTrAttrs","tbodyTrAttrs","getRowClasses","tbodyTrClass","shouldHeaderBeFocusable","headerNavigation","sortable","shouldRowBeFocusable","rowNavigation","handleHeaderKeydown","code","activeElement","stopEvent","handleRowNavigation","shiftKey","currentIndex","rows","from","querySelectorAll","targetIndex","CODE_DOWN","Math","min","CODE_UP","max","CODE_END","CODE_HOME","focus","computedSimpleProps","pick","btableSimpleProps","_openBlock","_createBlock","BTableSimple","_hoisted_1","_createVNode","BThead","_normalizeClass","columns","BTr","headRowVariant","theadTrClass","_Fragment","_renderList","BTh","_mergeProps","title","headerTitle","abbr","headerAbbr","style","thStyle","tabindex","ref_for","onClick","$event","onKeydown","column","isFoot","_createTextVNode","_toDisplayString","getTableFieldHeadLabel","BTd","BTbody","tbodyClass","stacked","itemIndex","primaryKey","primaryKeyValue","_rowVariant","onDblclick","onContextmenu","onMouseenter","onMouseleave","onMousedown","button","handleMiddleClick","handleRowKeydown","_resolveDynamicComponent","isRowHeader","getCellComponent","attr","itemAttributes","labelStacked","unformatted","index","toggleDetails","detailsShowing","role","detailsTdClass","footClone","BTfoot","footRowVariant","tfootTrClass","_createElementVNode","_hoisted_3","caption","_hoisted_4","currentSort","sortBy","find","fieldInfo","resolvedDirection","order","fieldInitialDirection","initialSortDirection","lastSorted","reverse","sort","iconPath","iconClass","iconOpacity","xmlns","width","height","fill","viewBox","d","dynamicCellSlots","filter","startsWith","dynamicFootSlots","sortByModel","_useModel","busyModel","selectedItemsModel","selectedItemsToSet","Set","newValue","oldValue","has","selectedItemsSetUtilities","add","clear","delete","pkey","v","i","selectedKey","itemKey","selected","internalItems","perPageNumber","useToNumber","perPage","method","currentPageNumber","currentPage","isFilterableTable","usesProvider","provider","isSelecting","size","isSortable","some","keyboardRowNavigation","selectable","noSelectOnClick","keyboardHeaderNavigation","provide","sb","sortValue","tableClasses","fixed","noBorderCollapse","getBusyRowClasses","selectionVariant","getFormatter","sortByFormatted","getStringValue","ob","sortField","JSON","stringify","toString","fieldByKey","Map","computedItems","sortByItems","mappedItems","reduce","acc","includes","newItem","mapItem","noProviderFiltering","entries","filterable","filterFunction","filterField","filterByFormatted","values","realVal","toLowerCase","filterItem","push","noLocalSorting","noProviderSorting","a","b","comparer","sortCompare","comparison","localeCompare","numeric","emptySlotScope","emptyFilteredText","emptyText","computedDisplayItems","Number","isNaN","noProviderPaging","slice","POSITIVE_INFINITY","callItemsProvider","async","response","Promise","providerPropsWatch","prop","oldVal","deepEqual","inNoProvider","noProvider","noProvideWhenPaging","noProvideWhenFiltering","noProvideWhenSorting","oldFilter","onMounted","exposedSelectableUtilities","clearSelected","selectAllRows","selectMode","selectRow","unselectRow","isRowSelected","boundBTableLiteEmits","onHeadClicked","fieldSortable","getLastSortDirection","getInitialSortDirection","resolveOrder","initial","must","mustSort","findIndex","originalValue","updatedValue","multisort","tmp","splice","handleMultiSort","handleSingleSort","handleFieldSorting","onRowClicked","row","e","shiftClicked","ctrlClicked","metaClicked","lastSelectedItem","pop","lastSelectedIndex","selectStartIndex","selectEndIndex","handleRowSelection","ctrlKey","metaKey","onRowDblclicked","args","onRowContextmenu","onRowHovered","onRowUnhovered","onRowMiddleClicked","computedLiteProps","btableLiteProps","tableAttrs","ariaBusy","__expose","displayItems","refresh","BTableLite","_createSlots","_withCtx","showEmpty","_normalizeProps","fn","rowSelected","name","noSortableIcon","SortIcon"],"mappings":"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"}