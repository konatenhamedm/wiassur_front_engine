{"version":3,"file":"BNavbarToggle.vue_vue_type_script_setup_true_lang-BOVCTLjN.mjs","sources":["../src/composables/useContainerClasses.ts","../src/components/BNavbar/BNavbar.vue","../src/components/BNavbar/BNavbarBrand.vue","../src/components/BNavbar/BNavbarNav.vue","../src/components/BNavbar/BNavbarToggle.vue"],"sourcesContent":["import type {Breakpoint} from '../types/BreakpointProps'\nimport {computed, type MaybeRefOrGetter, toValue} from 'vue'\n\nexport const useContainerClasses = (value: MaybeRefOrGetter<boolean | Breakpoint | 'fluid'>) =>\n  computed(() => {\n    const resolvedValue = toValue(value)\n    return {\n      container: resolvedValue === true,\n      [`container-${resolvedValue}`]: typeof resolvedValue === 'string',\n    }\n  })\n","<template>\n  <component :is=\"props.tag\" class=\"navbar\" :class=\"computedClasses\" :role=\"computedRole\">\n    <div v-if=\"props.container !== false\" :class=\"containerClass\">\n      <slot />\n    </div>\n    <slot v-else />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, provide, toRef} from 'vue'\nimport type {BNavbarProps} from '../../types/ComponentProps'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useContainerClasses} from '../../composables/useContainerClasses'\nimport {navbarInjectionKey} from '../../utils/keys'\nimport {useColorVariantClasses} from '../../composables/useColorVariantClasses'\nimport type {BNavbarSlots} from '../../types'\n\nconst _props = withDefaults(defineProps<BNavbarProps>(), {\n  container: 'fluid',\n  fixed: undefined,\n  noAutoClose: false,\n  print: false,\n  sticky: undefined,\n  tag: 'nav',\n  toggleable: false,\n  variant: null,\n})\nconst props = useDefaults(_props, 'BNavbar')\ndefineSlots<BNavbarSlots>()\n\nconst computedRole = computed(() => (props.tag === 'nav' ? undefined : 'navigation'))\n\nconst containerClass = useContainerClasses(() => props.container)\n\nconst colorClasses = useColorVariantClasses(\n  computed(() => ({\n    bgVariant: props.variant,\n  }))\n)\nconst computedClasses = computed(() => [\n  colorClasses.value,\n  {\n    'd-print': props.print,\n    [`sticky-${props.sticky}`]: props.sticky !== undefined,\n    [`fixed-${props.fixed}`]: props.fixed !== undefined,\n    'navbar-expand': props.toggleable === false,\n    [`navbar-expand-${props.toggleable}`]: typeof props.toggleable === 'string',\n  },\n])\n\nprovide(navbarInjectionKey, {\n  tag: toRef(() => props.tag),\n  noAutoClose: toRef(() => props.noAutoClose),\n})\n</script>\n","<template>\n  <component :is=\"computedTag\" class=\"navbar-brand\" v-bind=\"computedLinkProps\">\n    <slot />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport BLink from '../BLink/BLink.vue'\nimport type {BNavbarBrandProps} from '../../types/ComponentProps'\nimport {useBLinkHelper} from '../../composables/useBLinkHelper'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {computed} from 'vue'\nimport type {BNavbarBrandSlots} from '../../types'\n\nconst _props = withDefaults(defineProps<BNavbarBrandProps>(), {\n  tag: 'div',\n  // Link props\n  active: undefined,\n  activeClass: undefined,\n  disabled: undefined,\n  exactActiveClass: undefined,\n  href: undefined,\n  stretched: false,\n  icon: undefined,\n  opacity: undefined,\n  opacityHover: undefined,\n  rel: undefined,\n  replace: undefined,\n  routerComponentName: undefined,\n  target: undefined,\n  to: undefined,\n  underlineOffset: undefined,\n  underlineOffsetHover: undefined,\n  underlineOpacity: undefined,\n  underlineOpacityHover: undefined,\n  underlineVariant: undefined,\n  variant: undefined,\n  // End link props\n})\nconst props = useDefaults(_props, 'BNavbarBrand')\ndefineSlots<BNavbarBrandSlots>()\n\nconst {computedLink, computedLinkProps} = useBLinkHelper(props, [\n  'active',\n  'activeClass',\n  'append',\n  'disabled',\n  'href',\n  'rel',\n  'replace',\n  'routerComponentName',\n  'target',\n  'to',\n  'variant',\n  'opacity',\n  'opacityHover',\n  'underlineVariant',\n  'underlineOffset',\n  'underlineOffsetHover',\n  'underlineOpacity',\n  'underlineOpacityHover',\n  'icon',\n])\n\nconst computedTag = computed(() => (computedLink.value ? BLink : props.tag))\n</script>\n","<template>\n  <ul class=\"navbar-nav\" :class=\"computedClasses\">\n    <slot />\n  </ul>\n</template>\n\n<script setup lang=\"ts\">\nimport type {BNavbarNavProps} from '../../types/ComponentProps'\nimport {computed} from 'vue'\nimport {useAlignment} from '../../composables/useAlignment'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BNavbarNavSlots} from '../../types'\n\nconst _props = withDefaults(defineProps<BNavbarNavProps>(), {\n  align: undefined,\n  fill: false,\n  justified: false,\n  small: false,\n  tag: 'ul',\n})\nconst props = useDefaults(_props, 'BNavbarNav')\ndefineSlots<BNavbarNavSlots>()\n\nconst alignment = useAlignment(() => props.align)\n\nconst computedClasses = computed(() => ({\n  'nav-fill': props.fill,\n  'nav-justified': props.justified,\n  [alignment.value]: props.align !== undefined,\n  'small': props.small,\n}))\n</script>\n","<template>\n  <button\n    class=\"navbar-toggler\"\n    type=\"button\"\n    :class=\"computedClasses\"\n    :disabled=\"props.disabled\"\n    :aria-label=\"props.label\"\n    @click=\"onClick\"\n  >\n    <slot :expanded=\"collapseExpanded\">\n      <span class=\"navbar-toggler-icon\" />\n    </slot>\n  </button>\n</template>\n\n<script setup lang=\"ts\">\nimport type {BNavbarToggleProps} from '../../types/ComponentProps'\nimport {computed, inject, toValue} from 'vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {showHideRegistryKey} from '../../utils/keys'\nimport type {BNavbarToggleEmits, BNavbarToggleSlots} from '../../types'\n\nconst _props = withDefaults(defineProps<BNavbarToggleProps>(), {\n  label: 'Toggle navigation',\n  disabled: false,\n  target: undefined,\n})\nconst props = useDefaults(_props, 'BNavbarToggle')\nconst emit = defineEmits<BNavbarToggleEmits>()\ndefineSlots<BNavbarToggleSlots>()\n\nconst computedClasses = computed(() => ({\n  disabled: props.disabled,\n}))\n\nconst showHideData = inject(showHideRegistryKey, undefined)\n\nconst collapseExpanded = computed(() => {\n  if (!props.target || !showHideData) return false\n  if (typeof props.target === 'string')\n    return toValue(toValue(showHideData.values.value.get(props.target))?.value) || false\n  return props.target.some((target) => toValue(showHideData.values.value.get(target)?.value))\n})\nconst toggleExpand = () => {\n  if (!props.target || !showHideData) return\n  if (typeof props.target === 'string') {\n    toValue(showHideData.values.value.get(props.target))?.toggle()\n    return\n  }\n  props.target.forEach((target) => toValue(showHideData.values.value.get(target))?.toggle())\n}\n\nconst onClick = (e: Readonly<MouseEvent>): void => {\n  if (!props.disabled) {\n    emit('click', e)\n    toggleExpand()\n  }\n}\n</script>\n"],"names":["_createBlock","_resolveDynamicComponent","_unref","_normalizeClass","_createElementBlock","_renderSlot","BLink","_mergeProps","_createElementVNode"],"mappings":";;;;;;AAGO,MAAM,sBAAsB,CAAC,UAClC,SAAS,MAAM;AACb,QAAM,gBAAgB,QAAQ,KAAK;AACnC,SAAO;AAAA,IACL,WAAW,kBAAkB;AAAA,IAC7B,CAAC,aAAa,aAAa,EAAE,GAAG,OAAO,kBAAkB;AAAA,EAAA;AAE7D,CAAC;;;;;;;;;;;;;;ACQH,UAAM,SAAS;AAUf,UAAM,QAAQ,YAAY,QAAQ,SAAS;AAG3C,UAAM,eAAe,SAAS,MAAO,MAAM,QAAQ,QAAQ,SAAY,YAAa;AAEpF,UAAM,iBAAiB,oBAAoB,MAAM,MAAM,SAAS;AAEhE,UAAM,eAAe;AAAA,MACnB,SAAS,OAAO;AAAA,QACd,WAAW,MAAM;AAAA,MAAA,EACjB;AAAA,IAAA;AAEJ,UAAM,kBAAkB,SAAS,MAAM;AAAA,MACrC,aAAa;AAAA,MACb;AAAA,QACE,WAAW,MAAM;AAAA,QACjB,CAAC,UAAU,MAAM,MAAM,EAAE,GAAG,MAAM,WAAW;AAAA,QAC7C,CAAC,SAAS,MAAM,KAAK,EAAE,GAAG,MAAM,UAAU;AAAA,QAC1C,iBAAiB,MAAM,eAAe;AAAA,QACtC,CAAC,iBAAiB,MAAM,UAAU,EAAE,GAAG,OAAO,MAAM,eAAe;AAAA,MAAA;AAAA,IACrE,CACD;AAED,YAAQ,oBAAoB;AAAA,MAC1B,KAAK,MAAM,MAAM,MAAM,GAAG;AAAA,MAC1B,aAAa,MAAM,MAAM,MAAM,WAAW;AAAA,IAAA,CAC3C;;0BArDCA,YAKYC,wBALIC,MAAA,KAAA,EAAM,GAAG,GAAA;AAAA,QAAE,OAAKC,eAAA,CAAC,UAAiB,gBAAA,KAAe,CAAA;AAAA,QAAG,MAAM,aAAA;AAAA,MAAA;yBACxE,MAEM;AAAA,UAFKD,MAAA,KAAA,EAAM,cAAS,sBAA1BE,mBAEM,OAAA;AAAA;YAFiC,sBAAOF,MAAA,cAAA,CAAc;AAAA,UAAA;YAC1DG,WAAQ,KAAA,QAAA,SAAA;AAAA,UAAA,SAEVA,WAAe,KAAA,QAAA,WAAA,EAAA,KAAA,EAAA,CAAA;AAAA,QAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSnB,UAAM,SAAS;AAyBf,UAAM,QAAQ,YAAY,QAAQ,cAAc;AAGhD,UAAM,EAAC,cAAc,sBAAqB,eAAe,OAAO;AAAA,MAC9D;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,IAAA,CACD;AAED,UAAM,cAAc,SAAS,MAAO,aAAa,QAAQC,cAAQ,MAAM,GAAI;;0BA/DzEN,YAEYC,wBAFI,iBAAW,GAA3BM,WAEY,EAFiB,OAAM,eAAA,GAAuBL,MAAA,iBAAA,CAAiB,GAAA;AAAA,yBACzE,MAAQ;AAAA,UAARG,WAAQ,KAAA,QAAA,SAAA;AAAA,QAAA;;;;;;;;;;;;;;;;ACWZ,UAAM,SAAS;AAOf,UAAM,QAAQ,YAAY,QAAQ,YAAY;AAG9C,UAAM,YAAY,aAAa,MAAM,MAAM,KAAK;AAEhD,UAAM,kBAAkB,SAAS,OAAO;AAAA,MACtC,YAAY,MAAM;AAAA,MAClB,iBAAiB,MAAM;AAAA,MACvB,CAAC,UAAU,KAAK,GAAG,MAAM,UAAU;AAAA,MACnC,SAAS,MAAM;AAAA,IAAA,EACf;;0BA7BAD,mBAEK,MAAA;AAAA,QAFD,OAAKD,eAAA,CAAC,cAAqB,gBAAA,KAAe,CAAA;AAAA,MAAA;QAC5CE,WAAQ,KAAA,QAAA,SAAA;AAAA,MAAA;;;;;;;;;;;;;;ACoBZ,UAAM,SAAS;AAKf,UAAM,QAAQ,YAAY,QAAQ,eAAe;AACjD,UAAM,OAAO;AAGb,UAAM,kBAAkB,SAAS,OAAO;AAAA,MACtC,UAAU,MAAM;AAAA,IAAA,EAChB;AAEF,UAAM,eAAe,OAAO,qBAAqB,MAAS;AAE1D,UAAM,mBAAmB,SAAS,MAAM;AACtC,UAAI,CAAC,MAAM,UAAU,CAAC,aAAc,QAAO;AAC3C,UAAI,OAAO,MAAM,WAAW;AAC1B,eAAO,QAAQ,QAAQ,aAAa,OAAO,MAAM,IAAI,MAAM,MAAM,CAAC,GAAG,KAAK,KAAK;AACjF,aAAO,MAAM,OAAO,KAAK,CAAC,WAAW,QAAQ,aAAa,OAAO,MAAM,IAAI,MAAM,GAAG,KAAK,CAAC;AAAA,IAC5F,CAAC;AACD,UAAM,eAAe,MAAM;AACzB,UAAI,CAAC,MAAM,UAAU,CAAC,aAAc;AACpC,UAAI,OAAO,MAAM,WAAW,UAAU;AACpC,gBAAQ,aAAa,OAAO,MAAM,IAAI,MAAM,MAAM,CAAC,GAAG,OAAA;AACtD;AAAA,MACF;AACA,YAAM,OAAO,QAAQ,CAAC,WAAW,QAAQ,aAAa,OAAO,MAAM,IAAI,MAAM,CAAC,GAAG,QAAQ;AAAA,IAC3F;AAEA,UAAM,UAAU,CAAC,MAAkC;AACjD,UAAI,CAAC,MAAM,UAAU;AACnB,aAAK,SAAS,CAAC;AACf,qBAAA;AAAA,MACF;AAAA,IACF;;0BAxDED,mBAWS,UAAA;AAAA,QAVP,OAAKD,eAAA,CAAC,kBAEE,gBAAA,KAAe,CAAA;AAAA,QADvB,MAAK;AAAA,QAEJ,UAAUD,MAAA,KAAA,EAAM;AAAA,QAChB,cAAYA,MAAA,KAAA,EAAM;AAAA,QAClB;AAAA,MAAA;QAEDG,WAEO,KAAA,QAAA,WAAA,EAFA,UAAU,iBAAA,MAAA,GAAjB,MAEO;AAAA,oCADLG,mBAAoC,QAAA,EAA9B,OAAM,yBAAqB,MAAA,EAAA;AAAA,QAAA;;;;;"}