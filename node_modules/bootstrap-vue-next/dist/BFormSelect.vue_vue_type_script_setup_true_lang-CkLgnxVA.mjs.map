{"version":3,"file":"BFormSelect.vue_vue_type_script_setup_true_lang-CkLgnxVA.mjs","sources":["../src/components/BFormSelect/BFormSelectOptionGroup.vue","../src/components/BFormSelect/BFormSelect.vue"],"sourcesContent":["<template>\n  <optgroup :label=\"props.label\">\n    <slot name=\"first\" />\n    <BFormSelectOption\n      v-for=\"(option, index) in normalizedOptions\"\n      :key=\"index\"\n      :disabled=\"option.disabled\"\n      :value=\"option.value\"\n      v-bind=\"$attrs\"\n    >\n      <slot name=\"option\" v-bind=\"option\">\n        {{ option.text }}\n      </slot>\n    </BFormSelectOption>\n    <slot />\n  </optgroup>\n</template>\n\n<script setup lang=\"ts\" generic=\"T\">\nimport BFormSelectOption from './BFormSelectOption.vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BFormSelectOptionGroupProps} from '../../types/ComponentProps'\nimport type {ComputedRef} from 'vue'\nimport {useFormSelect} from '../../composables/useFormSelect'\nimport type {SelectOption} from '../../types/SelectTypes'\nimport type {BFormSelectOptionGroupSlots} from '../../types'\n\nconst _props = withDefaults(defineProps<BFormSelectOptionGroupProps>(), {\n  disabledField: 'disabled',\n  label: undefined,\n  options: () => [],\n  textField: 'text',\n  valueField: 'value',\n})\nconst props = useDefaults(_props, 'BFormSelectOptionGroup')\ndefineSlots<BFormSelectOptionGroupSlots<T>>()\n\n// The form select context is injected by BFormSelectOption components automatically\n// We don't need to handle the selected value here since each BFormSelectOption\n// will inject the context directly\n\nconst {normalizedOptions} = useFormSelect(() => props.options, props) as {\n  normalizedOptions: ComputedRef<SelectOption<T>[]>\n}\n</script>\n","<template>\n  <select\n    :id=\"computedId\"\n    ref=\"_input\"\n    v-model=\"localValue\"\n    :class=\"computedClasses\"\n    :name=\"props.name\"\n    :form=\"props.form || undefined\"\n    :multiple=\"props.multiple || undefined\"\n    :size=\"computedSelectSize\"\n    :disabled=\"props.disabled\"\n    :required=\"props.required || undefined\"\n    :aria-required=\"props.required || undefined\"\n    :aria-invalid=\"computedAriaInvalid\"\n  >\n    <slot name=\"first\" />\n    <template v-for=\"(option, index) in normalizedOptsWrapper\" :key=\"index\">\n      <BFormSelectOptionGroup\n        v-if=\"isComplex(option)\"\n        :label=\"option.label\"\n        :options=\"option.options\"\n        :value-field=\"props.valueField\"\n        :text-field=\"props.textField\"\n        :disabled-field=\"props.disabledField\"\n      />\n      <BFormSelectOption v-else :value=\"option.value\" :disabled=\"option.disabled\">\n        <slot name=\"option\" v-bind=\"option\">\n          {{ option.text }}\n        </slot>\n      </BFormSelectOption>\n    </template>\n    <slot />\n  </select>\n</template>\n\n<script setup lang=\"ts\" generic=\"T\">\nimport type {BFormSelectProps} from '../../types/ComponentProps'\nimport {computed, provide, readonly, useTemplateRef} from 'vue'\nimport BFormSelectOption from './BFormSelectOption.vue'\nimport BFormSelectOptionGroup from './BFormSelectOptionGroup.vue'\nimport {useAriaInvalid} from '../../composables/useAriaInvalid'\nimport {useFocus, useToNumber} from '@vueuse/core'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useId} from '../../composables/useId'\nimport {useStateClass} from '../../composables/useStateClass'\nimport {useFormSelect} from '../../composables/useFormSelect'\nimport type {ComplexSelectOptionRaw, SelectOption} from '../../types/SelectTypes'\nimport type {BFormSelectSlots} from '../../types'\nimport {formSelectKey} from '../../utils/keys'\n\nconst _props = withDefaults(defineProps<Omit<BFormSelectProps, 'modelValue'>>(), {\n  ariaInvalid: undefined,\n  autofocus: false,\n  disabled: false,\n  disabledField: 'disabled',\n  form: undefined,\n  id: undefined,\n  labelField: 'label',\n  multiple: false,\n  name: undefined,\n  options: () => [],\n  optionsField: 'options',\n  plain: false,\n  required: false,\n  selectSize: 0,\n  size: 'md',\n  state: null,\n  textField: 'text',\n  valueField: 'value',\n})\nconst props = useDefaults(_props, 'BFormSelect')\ndefineSlots<BFormSelectSlots<T>>()\n\nconst modelValue = defineModel<T>({\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  default: '' as any,\n})\n\nconst computedId = useId(() => props.id, 'input')\n\nconst selectSizeNumber = useToNumber(() => props.selectSize)\n\nconst stateClass = useStateClass(() => props.state)\n\nconst input = useTemplateRef('_input')\n\nconst {focused} = useFocus(input, {\n  initialValue: props.autofocus,\n})\n\nconst computedClasses = computed(() => [\n  stateClass.value,\n  {\n    'form-control': props.plain,\n    [`form-control-${props.size}`]: props.size !== 'md' && props.plain,\n    'form-select': !props.plain,\n    [`form-select-${props.size}`]: props.size !== 'md' && !props.plain,\n  },\n])\n\nconst computedSelectSize = computed(() =>\n  selectSizeNumber.value || props.plain ? selectSizeNumber.value : undefined\n)\n\nconst computedAriaInvalid = useAriaInvalid(\n  () => props.ariaInvalid,\n  () => props.state\n)\n\nconst {normalizedOptions, isComplex} = useFormSelect(() => props.options, props)\n\nconst normalizedOptsWrapper = computed(\n  () => normalizedOptions.value as readonly (ComplexSelectOptionRaw<T> | SelectOption<T>)[]\n)\n\nconst localValue = computed({\n  get: () => modelValue.value,\n  set: (newValue) => {\n    modelValue.value = newValue\n  },\n})\n\n// Provide the current model value for child components to inject\nprovide(formSelectKey, {\n  modelValue: readonly(localValue),\n})\n\ndefineExpose({\n  blur: () => {\n    focused.value = false\n  },\n  element: input,\n  focus: () => {\n    focused.value = true\n  },\n})\n</script>\n"],"names":["_createElementBlock","_unref","_renderSlot","_openBlock","_Fragment","_renderList","_createBlock","BFormSelectOption","_mergeProps","$attrs","_createTextVNode","_toDisplayString","_useModel","BFormSelectOptionGroup"],"mappings":";;;;;;;;;;;;;;;;;;;;AA2BA,UAAM,SAAS;AAOf,UAAM,QAAQ,YAAY,QAAQ,wBAAwB;AAO1D,UAAM,EAAC,kBAAA,IAAqB,cAAc,MAAM,MAAM,SAAS,KAAK;;0BAxClEA,mBAcW,YAAA;AAAA,QAdA,OAAOC,MAAA,KAAA,EAAM;AAAA,MAAA;QACtBC,WAAqB,KAAA,QAAA,OAAA;AAAA,SACrBC,UAAA,IAAA,GAAAH,mBAUoBI,UAAA,MAAAC,WATQJ,MAAA,iBAAA,GAAiB,CAAnC,QAAQ,UAAK;AADvB,iBAAAE,UAAA,GAAAG,YAUoBC,aAVpBC,WAUoB;AAAA,YARjB,KAAK;AAAA,YACL,UAAU,OAAO;AAAA,YACjB,OAAO,OAAO;AAAA,UAAA,sBACPC,KAAAA,MAAM,GAAA;AAAA,6BAEd,MAEO;AAAA,cAFPP,WAEO,KAAA,QAAA,UAFPM,WAEO,EAAA,SAAA,KAAA,GAFqB,MAAM,GAAlC,MAEO;AAAA,gBADFE,gBAAAC,gBAAA,OAAO,IAAI,GAAA,CAAA;AAAA,cAAA;;;;;QAGlBT,WAAQ,KAAA,QAAA,SAAA;AAAA,MAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACoCZ,UAAM,SAAS;AAoBf,UAAM,QAAQ,YAAY,QAAQ,aAAa;AAG/C,UAAM,aAAaU,SAAc,SAAA,YAGhC;AAED,UAAM,aAAa,MAAM,MAAM,MAAM,IAAI,OAAO;AAEhD,UAAM,mBAAmB,YAAY,MAAM,MAAM,UAAU;AAE3D,UAAM,aAAa,cAAc,MAAM,MAAM,KAAK;AAElD,UAAM,QAAQ,eAAe,QAAQ;AAErC,UAAM,EAAC,QAAA,IAAW,SAAS,OAAO;AAAA,MAChC,cAAc,MAAM;AAAA,IAAA,CACrB;AAED,UAAM,kBAAkB,SAAS,MAAM;AAAA,MACrC,WAAW;AAAA,MACX;AAAA,QACE,gBAAgB,MAAM;AAAA,QACtB,CAAC,gBAAgB,MAAM,IAAI,EAAE,GAAG,MAAM,SAAS,QAAQ,MAAM;AAAA,QAC7D,eAAe,CAAC,MAAM;AAAA,QACtB,CAAC,eAAe,MAAM,IAAI,EAAE,GAAG,MAAM,SAAS,QAAQ,CAAC,MAAM;AAAA,MAAA;AAAA,IAC/D,CACD;AAED,UAAM,qBAAqB;AAAA,MAAS,MAClC,iBAAiB,SAAS,MAAM,QAAQ,iBAAiB,QAAQ;AAAA,IAAA;AAGnE,UAAM,sBAAsB;AAAA,MAC1B,MAAM,MAAM;AAAA,MACZ,MAAM,MAAM;AAAA,IAAA;AAGd,UAAM,EAAC,mBAAmB,UAAA,IAAa,cAAc,MAAM,MAAM,SAAS,KAAK;AAE/E,UAAM,wBAAwB;AAAA,MAC5B,MAAM,kBAAkB;AAAA,IAAA;AAG1B,UAAM,aAAa,SAAS;AAAA,MAC1B,KAAK,MAAM,WAAW;AAAA,MACtB,KAAK,CAAC,aAAa;AACjB,mBAAW,QAAQ;AAAA,MACrB;AAAA,IAAA,CACD;AAGD,YAAQ,eAAe;AAAA,MACrB,YAAY,SAAS,UAAU;AAAA,IAAA,CAChC;AAED,aAAa;AAAA,MACX,MAAM,MAAM;AACV,gBAAQ,QAAQ;AAAA,MAClB;AAAA,MACA,SAAS;AAAA,MACT,OAAO,MAAM;AACX,gBAAQ,QAAQ;AAAA,MAClB;AAAA,IAAA,CACD;;0CAtICZ,mBA+BS,UAAA;AAAA,QA9BN,IAAIC,MAAA,UAAA;AAAA,QACL,KAAI;AAAA,qEACK,WAAU,QAAA;AAAA,QAClB,sBAAO,gBAAA,KAAe;AAAA,QACtB,MAAMA,MAAA,KAAA,EAAM;AAAA,QACZ,MAAMA,MAAA,KAAA,EAAM,QAAQ;AAAA,QACpB,UAAUA,MAAA,KAAA,EAAM,YAAY;AAAA,QAC5B,MAAM,mBAAA;AAAA,QACN,UAAUA,MAAA,KAAA,EAAM;AAAA,QAChB,UAAUA,MAAA,KAAA,EAAM,YAAY;AAAA,QAC5B,iBAAeA,MAAA,KAAA,EAAM,YAAY;AAAA,QACjC,gBAAcA,MAAA,mBAAA;AAAA,MAAA;QAEfC,WAAqB,KAAA,QAAA,OAAA;AAAA,SACrBC,UAAA,IAAA,GAAAH,mBAcWI,UAAA,MAAAC,WAdyB,sBAAA,OAAqB,CAAvC,QAAQ,UAAK;kEAAkC,SAAK;AAAA,YAE5DJ,MAAA,SAAA,EAAU,MAAM,kBADxBK,YAOEO,aAAA;AAAA;cALC,OAAO,OAAO;AAAA,cACd,SAAS,OAAO;AAAA,cAChB,eAAaZ,MAAA,KAAA,EAAM;AAAA,cACnB,cAAYA,MAAA,KAAA,EAAM;AAAA,cAClB,kBAAgBA,MAAA,KAAA,EAAM;AAAA,YAAA,kGAEzBK,YAIoBC,aAAA;AAAA;cAJO,OAAO,OAAO;AAAA,cAAQ,UAAU,OAAO;AAAA,YAAA;+BAChE,MAEO;AAAA,gBAFPL,WAEO,KAAA,QAAA,UAFPM,WAEO,EAAA,SAAA,KAAA,GAFqB,MAAM,GAAlC,MAEO;AAAA,kBADFE,gBAAAC,gBAAA,OAAO,IAAI,GAAA,CAAA;AAAA,gBAAA;;;;;;QAIpBT,WAAQ,KAAA,QAAA,SAAA;AAAA,MAAA;uBA3BC,WAAA,KAAU;AAAA,MAAA;;;;"}