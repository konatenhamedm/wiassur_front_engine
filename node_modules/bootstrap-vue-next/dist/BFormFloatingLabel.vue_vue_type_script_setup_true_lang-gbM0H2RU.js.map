{"version":3,"file":"BFormFloatingLabel.vue_vue_type_script_setup_true_lang-gbM0H2RU.js","sources":["../src/components/BForm/BFormDatalist.vue","../src/components/BForm/BFormFloatingLabel.vue"],"sourcesContent":["<template>\n  <datalist :id=\"computedId\">\n    <slot name=\"first\" />\n    <BFormSelectOption\n      v-for=\"(option, index) in normalizedOptsWrapper\"\n      :key=\"index\"\n      v-bind=\"option\"\n    >\n      <slot name=\"option\" v-bind=\"option\">\n        {{ option.text }}\n      </slot>\n    </BFormSelectOption>\n    <slot />\n  </datalist>\n</template>\n\n<script setup lang=\"ts\" generic=\"T\">\nimport type {BFormDatalistProps} from '../../types/ComponentProps'\nimport {computed} from 'vue'\nimport BFormSelectOption from '../BFormSelect/BFormSelectOption.vue'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {useId} from '../../composables/useId'\nimport {useFormSelect} from '../../composables/useFormSelect'\nimport type {SelectOption} from '../../types/SelectTypes'\nimport type {BFormDatalistSlots} from '../../types'\n\nconst _props = withDefaults(defineProps<BFormDatalistProps>(), {\n  disabled: false,\n  disabledField: 'disabled',\n  id: undefined,\n  options: () => [],\n  textField: 'text',\n  valueField: 'value',\n})\nconst props = useDefaults(_props, 'BFormDatalist')\ndefineSlots<BFormDatalistSlots<T>>()\n\nconst computedId = useId(() => props.id, 'datalist')\n\nconst {normalizedOptions, isComplex} = useFormSelect(\n  () => props.options,\n  computed(() => ({...props, optionsField: 'options', labelField: 'label'}))\n)\n\nconst normalizedOptsWrapper = computed(\n  () =>\n    // Datalist doesn't support complex options\n    normalizedOptions.value.filter((opt) => !isComplex(opt)) as readonly SelectOption<T>[]\n)\n</script>\n","<template>\n  <div class=\"form-floating\">\n    <slot />\n    <label :for=\"props.labelFor\">\n      <slot name=\"label\">\n        {{ props.label }}\n      </slot>\n    </label>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport type {BFormFloatingLabelSlots} from '../../types'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {BFormFloatingLabelProps} from '../../types/ComponentProps'\n\nconst _props = withDefaults(defineProps<BFormFloatingLabelProps>(), {\n  label: undefined,\n  labelFor: undefined,\n  text: undefined,\n})\nconst props = useDefaults(_props, 'BFormFloatingLabel')\ndefineSlots<BFormFloatingLabelSlots>()\n</script>\n"],"names":["_props","__props","props","useDefaults","computedId","useId","id","normalizedOptions","isComplex","useFormSelect","options","computed","optionsField","labelField","normalizedOptsWrapper","value","filter","opt","_createElementBlock","_unref","_renderSlot","_ctx","$slots","_openBlock","_Fragment","_renderList","option","index","_createBlock","BFormSelectOption","_mergeProps","key","ref_for","_createTextVNode","_toDisplayString","text","_hoisted_1","_createElementVNode","for","labelFor","label"],"mappings":"mWA0BA,MAAMA,EAASC,EAQTC,EAAQC,EAAAA,YAAYH,EAAQ,iBAG5BI,EAAaC,EAAAA,MAAM,IAAMH,EAAMI,GAAI,aAEnCC,kBAACA,EAAAC,UAAmBA,GAAaC,EAAAA,cACrC,IAAMP,EAAMQ,QACZC,EAAAA,SAAS,KAAA,IAAWT,EAAOU,aAAc,UAAWC,WAAY,YAG5DC,EAAwBH,EAAAA,SAC5B,IAEEJ,EAAkBQ,MAAMC,OAAQC,IAAST,EAAUS,iCA9CrDC,EAAAA,mBAYW,WAAA,CAZAZ,GAAIa,EAAAA,MAAAf,IAAU,CACvBgB,aAAqBC,EAAAC,OAAA,UACrBC,EAAAA,WAAA,GAAAL,EAAAA,mBAQoBM,WAAA,KAAAC,EAAAA,WAPQX,EAAAC,MAAqB,CAAvCW,EAAQC,KADlBJ,EAAAA,YAAAK,EAAAA,YAQoBC,EAAAA,UARpBC,EAAAA,WAQoB,CANjBC,IAAKJ,gBACED,GAAM,mBAEd,IAEO,CAFPN,aAEOC,EAAAC,OAAA,SAFPQ,EAAAA,WAEO,CAAAE,SAAA,GAFqBN,GAA5B,IAEO,CADFO,EAAAA,gBAAAC,EAAAA,gBAAAR,EAAOS,MAAI,0BAGlBf,aAAQC,EAAAC,OAAA,4KCIZ,MAAMtB,EAASC,EAKTC,EAAQC,EAAAA,YAAYH,EAAQ,oCApBhCuB,cAAAL,qBAOM,MAPNkB,EAOM,CANJhB,aAAQC,EAAAC,OAAA,WACRe,EAAAA,mBAIQ,QAAA,CAJAC,IAAKnB,EAAAA,MAAAjB,GAAMqC,WACjBnB,EAAAA,WAEOC,oBAFP,IAEO,CADFY,EAAAA,gBAAAC,EAAAA,gBAAAf,EAAAA,MAAAjB,GAAMsC,OAAK"}