{"version":3,"file":"BOrchestrator.vue_vue_type_script_setup_true_lang-Dz_rJ4Bq.mjs","sources":["../src/utils/positionClasses.ts","../src/components/BApp/BOrchestrator.vue"],"sourcesContent":["import type {ContainerPosition} from '../types/Alignment'\n\nexport const positionClasses = {\n  'top-start': 'top-0 start-0',\n  'top-center': 'top-0 start-50 translate-middle-x',\n  'top-end': 'top-0 end-0',\n  'middle-start': 'top-50 start-0 translate-middle-y',\n  'middle-center': 'top-50 start-50 translate-middle',\n  'middle-end': 'top-50 end-0 translate-middle-y',\n  'bottom-start': 'bottom-0 start-0',\n  'bottom-center': 'bottom-0 start-50 translate-middle-x',\n  'bottom-end': 'bottom-0 end-0',\n} as const satisfies Record<ContainerPosition, string>\n","<template>\n  <ConditionalTeleport :to=\"teleportTo\" :disabled=\"!teleportTo\">\n    <div class=\"orchestrator-container\" v-bind=\"$attrs\">\n      <div\n        v-for=\"(value, key) in ComputedPositionClasses\"\n        :key=\"key\"\n        :class=\"value.class\"\n        :style=\"value.style\"\n      >\n        <TransitionGroup\n          :name=\"\n            items?.filter((el) => el.position === key)?.some((el) => el.type === 'toast')\n              ? 'b-list'\n              : undefined\n          \"\n        >\n          <!-- eslint-disable vue/no-unused-vars -->\n          <span\n            v-for=\"{\n              _self,\n              type,\n              position,\n              slots,\n              promise,\n              options,\n              _component,\n              ...val\n            } in items?.filter((el) => el.position === key) || []\"\n            :key=\"_self\"\n          >\n            <component\n              :is=\"_component\"\n              v-bind=\"val\"\n              :ref=\"(ref: ComponentPublicInstance) => (promise.value.ref = ref)\"\n              initial-animation\n              :teleport-disabled=\"true\"\n              @hide=\"\n                (e: BvTriggerableEvent) => {\n                  setEventOk(e)\n                  val.onHide?.(e)\n                  if (e.defaultPrevented) {\n                    return\n                  }\n                  promise.stop?.()\n                  if (options?.resolveOnHide) {\n                    promise.resolve(e)\n                  }\n                }\n              \"\n              @hidden=\"\n                (e: BvTriggerableEvent) => {\n                  setEventOk(e)\n                  val.onHidden?.(e)\n                  if (e.defaultPrevented) {\n                    return\n                  }\n                  if (!options?.resolveOnHide) {\n                    promise.resolve(e)\n                  }\n                  if (!options?.keep) {\n                    promise.value.destroy?.()\n                  }\n                }\n              \"\n            >\n              <template v-for=\"(comp, slot) in slots\" #[slot]=\"scope\" :key=\"slot\">\n                <component :is=\"comp\" v-bind=\"scope\" />\n              </template>\n            </component>\n          </span>\n        </TransitionGroup>\n      </div>\n    </div>\n  </ConditionalTeleport>\n</template>\n\n<script setup lang=\"ts\">\nimport {type ComponentPublicInstance, computed, inject, watch} from 'vue'\nimport {orchestratorRegistryKey} from '../../utils/keys'\nimport {positionClasses} from '../../utils/positionClasses'\nimport type {BvTriggerableEvent} from '../../utils'\nimport type {BOrchestratorProps} from '../../types/ComponentProps'\nimport ConditionalTeleport from '../ConditionalTeleport.vue'\n\nfunction setEventOk(event: BvTriggerableEvent): void {\n  event.ok = event.trigger === 'ok' ? true : event.trigger === 'cancel' ? false : null\n}\n\nconst props = withDefaults(defineProps<BOrchestratorProps>(), {\n  noPopovers: false,\n  noToasts: false,\n  noModals: false,\n  appendToast: false,\n  filter: () => true,\n})\n\nconst orchestratorRegistry = inject(orchestratorRegistryKey)\n\nif (orchestratorRegistry) {\n  if (!orchestratorRegistry._isOrchestratorInstalled.value) {\n    orchestratorRegistry._isOrchestratorInstalled.value = true\n  }\n} else {\n  if (process.env.NODE_ENV === 'development') {\n    // eslint-disable-next-line no-console\n    console.warn(\n      '[BOrchestrator] The orchestrator registry not found. Please use BApp, useRegistry or provide the plugin.'\n    )\n  }\n}\n\nwatch(\n  () => props.appendToast,\n  (value) => {\n    if (orchestratorRegistry && value !== undefined) {\n      orchestratorRegistry._isToastAppend.value = value\n    }\n  },\n  {immediate: true}\n)\n\nconst ComputedPositionClasses = computed(() => {\n  const positionsActive = items.value?.reduce(\n    (acc, item) => {\n      if (item.position) {\n        acc[item.position] = true\n      }\n      return acc\n    },\n    {} as Record<string, boolean>\n  )\n  const classes: Record<string, {class: string; style: string}> = {}\n  for (const position in positionClasses) {\n    if (positionsActive?.[position]) {\n      classes[position] = {\n        class: `${\n          positionClasses[position as keyof typeof positionClasses]\n        } toast-container position-fixed p-3`,\n        style:\n          'width: calc(var(--bs-toast-max-width, 350px) + var(--bs-toast-padding-x, 1rem) * 2)',\n      }\n    }\n  }\n  if (positionsActive?.['modal']) {\n    classes['modal'] = {\n      class: '',\n      style: '',\n    }\n  }\n  if (positionsActive?.['popover']) {\n    classes['popover'] = {\n      class: '',\n      style: '',\n    }\n  }\n  return classes\n})\n\nconst items = computed(() => {\n  const store = orchestratorRegistry?.store.value ?? []\n  return store\n    .filter((el) => !props.noPopovers || el.type !== 'popover')\n    .filter((el) => !props.noToasts || el.type !== 'toast')\n    .filter((el) => !props.noModals || el.type !== 'modal')\n    .filter(props.filter)\n})\n</script>\n"],"names":["_createBlock","ConditionalTeleport","teleportTo","_createElementVNode","_mergeProps","$attrs","_openBlock","_createElementBlock","_Fragment","_renderList","_normalizeClass","_normalizeStyle","_createVNode","_TransitionGroup","_resolveDynamicComponent","_withCtx"],"mappings":"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"}