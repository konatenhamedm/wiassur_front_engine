{"version":3,"file":"BTabs.vue_vue_type_script_setup_true_lang-DJniJmO4.mjs","sources":["../src/components/BTabs/BTab.vue","../src/components/BTabs/BTabs.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"props.tag\"\n    :id=\"computedId\"\n    ref=\"_el\"\n    class=\"tab-pane\"\n    :class=\"computedClasses\"\n    role=\"tabpanel\"\n    :aria-labelledby=\"computedButtonId\"\n    v-bind=\"processedAttrs\"\n  >\n    <slot v-if=\"showSlot\" />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {computed, inject, onUnmounted, ref, useAttrs, useTemplateRef, watch} from 'vue'\nimport {useId} from '../../composables/useId'\nimport {useDefaults} from '../../composables/useDefaults'\nimport type {TabType} from '../../types/Tab'\nimport type {BTabProps} from '../../types/ComponentProps'\nimport {tabsInjectionKey} from '../../utils/keys'\nimport type {BTabSlots} from '../../types/ComponentSlots'\n\ndefineOptions({\n  inheritAttrs: false,\n})\n\nconst _props = withDefaults(defineProps<Omit<BTabProps, 'active'>>(), {\n  buttonId: undefined,\n  disabled: false,\n  id: undefined,\n  lazy: undefined,\n  unmountLazy: undefined,\n  noBody: false,\n  tag: 'div',\n  title: undefined,\n  titleItemClass: undefined,\n  titleLinkAttrs: undefined,\n  titleLinkClass: undefined,\n})\nconst props = useDefaults(_props, 'BTab')\nconst slots = defineSlots<BTabSlots>()\nconst attrs = useAttrs()\n\nconst activeModel = defineModel<Exclude<BTabProps['active'], undefined>>('active', {\n  default: false,\n})\n\nconst parentData = inject(tabsInjectionKey, null)\n\nconst localId = ref(props.id)\nconst internalId = useId('', 'tabpane')\nconst computedId = computed(() => props.id ?? localId.value ?? internalId.value)\nconst computedButtonId = useId(() => props.buttonId, 'tab')\n\nconst lazyRenderCompleted = ref(false)\nconst el = useTemplateRef('_el')\n\nconst processedAttrs = computed(() => {\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const {onClick: _, ...tabAttrs} = attrs\n  return tabAttrs\n})\n\nfunction updateTab() {\n  if (!parentData) return\n  const newId = parentData.registerTab(\n    computed(\n      () =>\n        ({\n          internalId: internalId.value,\n          id: computedId.value,\n          active: activeModel.value,\n          buttonId: computedButtonId.value,\n          disabled: props.disabled,\n          title: props.title,\n          titleComponent: slots.title,\n          titleItemClass: props.titleItemClass,\n          titleLinkAttrs: props.titleLinkAttrs,\n          titleLinkClass: props.titleLinkClass,\n          onClick: attrs.onClick,\n          el,\n        }) as TabType\n    )\n  )\n  if (newId !== localId.value) {\n    localId.value = newId\n  }\n}\n\nif (parentData) {\n  updateTab()\n  if (activeModel.value) {\n    parentData.activateTab(internalId.value)\n  }\n}\n\nonUnmounted(() => {\n  if (!parentData) return\n  parentData.unregisterTab(internalId.value)\n})\n\nconst isActive = computed(() => parentData?.activeId.value === computedId.value)\nconst show = ref(isActive.value)\n\nconst computedLazy = computed(() => !!(parentData?.lazy.value || props.lazy))\n\nconst computedActive = computed(() => isActive.value && !props.disabled)\nconst showSlot = computed(\n  () =>\n    computedActive.value ||\n    !computedLazy.value ||\n    (computedLazy.value && !props.unmountLazy && lazyRenderCompleted.value)\n)\n\nwatch(showSlot, (shown) => {\n  if (shown && !lazyRenderCompleted.value) lazyRenderCompleted.value = true\n})\n\nwatch(isActive, (active) => {\n  if (active) {\n    activeModel.value = true\n    setTimeout(() => {\n      show.value = true\n    }, 0)\n    return\n  }\n  show.value = false\n  activeModel.value = false\n})\n\nwatch(activeModel, (active) => {\n  if (props.disabled) {\n    activeModel.value = false\n    return\n  }\n  if (!parentData) return\n  if (!active) {\n    if (isActive.value) {\n      parentData.activateTab(undefined)\n    }\n    return\n  }\n  if (!isActive.value) {\n    parentData.activateTab(internalId.value)\n  }\n})\n\nconst computedClasses = computed(() => [\n  {\n    'active': isActive.value,\n    'show': show.value,\n    'card-body': parentData?.card.value && props.noBody === false,\n    'fade': !parentData?.noFade.value,\n  },\n  show.value ? parentData?.activeTabClass.value : parentData?.inactiveTabClass.value,\n  parentData?.tabClass.value,\n])\n\ndefineExpose({\n  activate: () => {\n    activeModel.value = true\n  },\n  deactivate: () => {\n    activeModel.value = false\n  },\n})\n</script>\n","<template>\n  <component :is=\"props.tag\" :id=\"props.id\" class=\"tabs\" :class=\"computedClasses\">\n    <ReusableEmptyTab.define>\n      <div class=\"tab-content\" :class=\"props.contentClass\">\n        <slot />\n        <div\n          v-if=\"showEmpty\"\n          key=\"bv-empty-tab\"\n          class=\"tab-pane active\"\n          :class=\"{'card-body': props.card}\"\n        >\n          <slot name=\"empty\" />\n        </div>\n      </div>\n    </ReusableEmptyTab.define>\n\n    <ReusableEmptyTab.reuse v-if=\"props.end\" />\n    <div\n      :class=\"[\n        props.navWrapperClass,\n        {'card-header': props.card, 'ms-auto': vertical && props.end},\n      ]\"\n    >\n      <ul\n        class=\"nav\"\n        :class=\"[navTabsClasses, props.navClass]\"\n        role=\"tablist\"\n        :aria-orientation=\"props.vertical ? 'vertical' : 'horizontal'\"\n      >\n        <slot name=\"tabs-start\" />\n        <li\n          v-for=\"(tab, idx) in tabs\"\n          :key=\"tab.id ?? tab.internalId\"\n          class=\"nav-item\"\n          :class=\"tab.titleItemClass\"\n          role=\"presentation\"\n        >\n          <button\n            :id=\"tab.buttonId\"\n            class=\"nav-link\"\n            :class=\"[tab.navItemClasses, tab.titleLinkClass]\"\n            role=\"tab\"\n            :aria-controls=\"tab.id\"\n            :aria-selected=\"tab.active\"\n            :disabled=\"tab.disabled\"\n            :tabindex=\"props.noKeyNav ? undefined : tab.active ? undefined : -1\"\n            type=\"button\"\n            v-bind=\"tab.titleLinkAttrs\"\n            @keydown.left.exact=\"!props.vertical && keynav($event, -1)\"\n            @keydown.left.shift=\"!props.vertical && keynav($event, -999)\"\n            @keydown.up.exact=\"props.vertical && keynav($event, -1)\"\n            @keydown.up.shift=\"props.vertical && keynav($event, -999)\"\n            @keydown.right.exact=\"!props.vertical && keynav($event, 1)\"\n            @keydown.right.shift=\"!props.vertical && keynav($event, 999)\"\n            @keydown.down.exact=\"props.vertical && keynav($event, 1)\"\n            @keydown.down.shift=\"props.vertical && keynav($event, 999)\"\n            @keydown.page-up=\"keynav($event, -999)\"\n            @keydown.page-down=\"keynav($event, 999)\"\n            @keydown.home=\"keynav($event, -999)\"\n            @keydown.end=\"keynav($event, 999)\"\n            @click.stop=\"(e) => handleClick(e, idx)\"\n          >\n            <component :is=\"tab.titleComponent\" v-if=\"tab.titleComponent\" />\n            <template v-else>\n              {{ tab.title }}\n            </template>\n          </button>\n        </li>\n        <slot name=\"tabs-end\" />\n      </ul>\n    </div>\n    <ReusableEmptyTab.reuse v-if=\"!props.end\" />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport {\n  computed,\n  nextTick,\n  onMounted,\n  provide,\n  type Ref,\n  ref,\n  toRef,\n  unref,\n  type VNode,\n  watch,\n} from 'vue'\nimport {BvEvent} from '../../utils/classes'\nimport {useAlignment} from '../../composables/useAlignment'\nimport {useId} from '../../composables/useId'\nimport {createReusableTemplate} from '@vueuse/core'\nimport type {TabType} from '../../types/Tab'\nimport type {BTabsProps} from '../../types/ComponentProps'\nimport {tabsInjectionKey} from '../../utils/keys'\nimport {useDefaults} from '../../composables/useDefaults'\nimport {sortSlotElementsByPosition} from '../../utils/dom'\nimport {flattenFragments} from '../../utils/flattenFragments'\nimport BTab from './BTab.vue'\nimport type {BTabsEmits, BTabsSlots} from '../../types'\n\nconst _props = withDefaults(defineProps<Omit<BTabsProps, 'modelValue' | 'activeIndex'>>(), {\n  activeNavItemClass: undefined,\n  activeTabClass: undefined,\n  align: undefined,\n  card: false,\n  contentClass: undefined,\n  end: false,\n  fill: false,\n  id: undefined,\n  inactiveNavItemClass: undefined,\n  inactiveTabClass: undefined,\n  justified: false,\n  lazy: false,\n  navClass: undefined,\n  navItemClass: undefined,\n  navWrapperClass: undefined,\n  noFade: false,\n  noKeyNav: false,\n  noNavStyle: false,\n  pills: false,\n  small: false,\n  tag: 'div',\n  tabClass: undefined,\n  underline: false,\n  vertical: false,\n})\nconst props = useDefaults(_props, 'BTabs')\nconst emit = defineEmits<BTabsEmits>()\nconst slots = defineSlots<BTabsSlots>()\n\nconst activeIndex = defineModel<Exclude<BTabsProps['index'], undefined>>('index', {\n  default: -1,\n})\nconst activeId = defineModel<BTabsProps['modelValue']>({\n  default: undefined,\n})\n\nconst ReusableEmptyTab = createReusableTemplate()\n\nconst tabsInternal = ref<Ref<TabType>[]>([])\n\nconst tabElementsArray = ref<VNode[]>([])\n\nconst isChildActive = ref(false)\nconst initialIds = ref<string[]>([])\n\nconst updateTabElementsArray = () => {\n  const tabElements = flattenFragments(slots.default?.({}) ?? [])\n  tabElementsArray.value = (Array.isArray(tabElements) ? tabElements : [tabElements]).filter(\n    (tab) => tab.type === BTab\n  )\n  // only get the ids once in setup context\n  if (initialIds.value.length === 0) {\n    // we need to get the ids of the tabs before they are registered. After that we use the internalId for the tabpane\n    initialIds.value = tabElementsArray.value.map((tab) =>\n      unref(useId(() => tab.props?.id, 'tabpane'))\n    )\n  }\n  isChildActive.value = tabElementsArray.value.some(\n    (tab) => tab.props?.active !== undefined && tab.props?.active !== false\n  )\n}\nupdateTabElementsArray()\n\nwatch(\n  () => slots.default?.({}),\n  () => {\n    updateTabElementsArray()\n    nextTick(() => {\n      sortTabs()\n    })\n  }\n)\n\nconst tabs = computed(() => {\n  if (tabsInternal.value.length === 0) {\n    // fail back on the slot elements, the children haven't been registered yet\n    const _activeIndex = tabElementsArray.value.findIndex(\n      (tab) =>\n        (tab.props?.active !== undefined &&\n          (tab.props.disabled === false || tab.props.disabled === undefined)) ||\n        (activeId.value && tab.props?.id === activeId.value)\n    )\n    return tabElementsArray.value.map((tab, index) => {\n      const active =\n        _activeIndex !== -1\n          ? index === _activeIndex\n          : activeIndex.value > -1\n            ? index === activeIndex.value\n            : index === 0\n      return {\n        id: tab.props?.id ?? initialIds.value[index],\n        internalId: `premount-${index}`, // temporary id for the tab\n        buttonId: tab.props?.buttonId,\n        disabled: tab.props?.disabled,\n        title: tab.props?.title,\n        titleComponent: (tab.children as {title: unknown})?.title,\n        titleItemClass: tab.props?.titleItemClass,\n        titleLinkAttrs: tab.props?.titleLinkAttrs,\n        titleLinkClass: tab.props?.titleLinkClass,\n        onClick: tab.props?.onClick,\n        active,\n        navItemClasses: [\n          {\n            active,\n            disabled: !(tab.props?.disabled === false || tab.props?.disabled === undefined),\n          },\n          active ? props.activeNavItemClass : props.inactiveNavItemClass,\n          props.navItemClass,\n        ],\n      }\n    })\n  }\n  return tabsInternal.value.map((_tab) => {\n    const tab = unref(_tab)\n    const active = tab.id === activeId.value\n\n    return {\n      ...tab,\n      active,\n      navItemClasses: [\n        {\n          active,\n          disabled: tab.disabled,\n        },\n        active ? props.activeNavItemClass : props.inactiveNavItemClass,\n        props.navItemClass,\n      ],\n    }\n  })\n})\n\nlet initialized = false\nlet updateInitialActiveIndex = false\nlet updateInitialActiveId = false\nif (activeIndex.value === -1 && activeId.value) {\n  if (tabs.value.findIndex((t) => t.id === activeId.value) !== -1) {\n    activeIndex.value = tabs.value.findIndex((t) => t.id === activeId.value)\n  } else {\n    updateInitialActiveIndex = true\n  }\n} else if (activeIndex.value > -1 && !activeId.value) {\n  if (tabs.value[activeIndex.value]?.id) {\n    activeId.value = tabs.value[activeIndex.value]?.id\n  } else {\n    updateInitialActiveId = true\n  }\n} else if (activeIndex.value === -1 && !activeId.value && !isChildActive.value) {\n  activeIndex.value = tabs.value.findIndex((t) => t.disabled === undefined || t.disabled === false)\n  activeId.value = tabs.value[activeIndex.value]?.id\n} else if (activeIndex.value === -1 && !activeId.value && isChildActive.value) {\n  activeIndex.value = tabs.value.findIndex(\n    (t) =>\n      t.active !== undefined &&\n      t.active !== false &&\n      (t.disabled === undefined || t.disabled === false)\n  )\n  activeId.value = tabs.value[activeIndex.value]?.id\n}\n\nfunction updateInitialIndexAndId() {\n  // we get the computedIds after registering the tabs\n  if (updateInitialActiveIndex) {\n    const index = tabs.value.findIndex((t) => t.id === activeId.value)\n    if (index !== -1) {\n      nextTick(() => {\n        activeIndex.value = index\n        updateInitialActiveIndex = false\n      })\n    }\n  }\n  if (updateInitialActiveId) {\n    if (activeIndex.value > -1 && tabs.value[activeIndex.value]?.id) {\n      nextTick(() => {\n        activeId.value = tabs.value[activeIndex.value]?.id\n        updateInitialActiveId = false\n      })\n    }\n  }\n}\n\nupdateInitialIndexAndId()\n\nconst showEmpty = computed(() => !(tabs?.value && tabs.value.length > 0))\n\nconst computedClasses = computed(() => ({\n  'd-flex': props.vertical,\n  'align-items-start': props.vertical,\n}))\n\nconst alignment = useAlignment(() => props.align)\n\nconst navTabsClasses = computed(() => ({\n  'nav-pills': props.pills,\n  'nav-underline': props.underline,\n  'flex-column me-3': props.vertical,\n  [alignment.value]: props.align !== undefined,\n  'nav-fill': props.fill,\n  'card-header-tabs': props.card && !props.pills && !props.underline,\n  'card-header-pills': props.card && props.pills,\n  'nav-justified': props.justified,\n  'nav-tabs': !props.noNavStyle && !props.pills && !props.underline,\n  'small': props.small,\n}))\n\nconst handleClick = (event: Readonly<MouseEvent>, index: number) => {\n  if (\n    index >= 0 &&\n    !tabs.value[index].disabled &&\n    tabs.value[index]?.onClick &&\n    typeof tabs.value[index].onClick === 'function'\n  ) {\n    tabs.value[index].onClick?.(event)\n    if (event.defaultPrevented) {\n      document.getElementById(tabs.value[index].buttonId)?.blur()\n      return\n    }\n  }\n  activeIndex.value = index\n}\n\nconst keynav = (e: Event, direction: number) => {\n  if (tabs.value.length <= 0 || props.noKeyNav) return\n  e.preventDefault()\n  e.stopPropagation()\n  activeIndex.value = nextIndex(activeIndex.value + direction, direction)\n  nextTick(() => {\n    if (activeIndex.value >= 0) {\n      document.getElementById(tabs.value[activeIndex.value]?.buttonId)?.focus()\n    }\n  })\n}\n\nconst nextIndex = (start: number, direction: number) => {\n  let index = start\n  let minIdx = -1\n  let maxIdx = -1\n\n  for (let i = 0; i < tabs.value.length; i++) {\n    if (!tabs.value[i].disabled) {\n      if (minIdx === -1) minIdx = i\n      maxIdx = i\n    }\n  }\n\n  while (index >= minIdx && index <= maxIdx && tabs.value[index].disabled) {\n    index += direction\n  }\n\n  if (index < minIdx) index = minIdx\n  if (index > maxIdx) index = maxIdx\n\n  return index\n}\n\nlet previousIndex: number | undefined\nlet isReverting = false\nwatch(activeIndex, (newValue, oldValue) => {\n  // Early exit if there are no tabs or all tabs are disabled\n  if (tabs.value.length <= 0 || tabs.value.filter((t) => !t.disabled).length <= 0) {\n    return\n  }\n\n  // If we're reverting due to a prevented event, don't process further\n  if (isReverting) {\n    isReverting = false\n    return\n  }\n  // Calculate the next valid index\n  const index = nextIndex(newValue, newValue > oldValue ? 1 : -1)\n  if (index !== newValue) {\n    // If the index is not the same as the new value, set the previous index to the old value\n    // this is to prevent the event from being emitted twice\n    previousIndex = oldValue\n    activeIndex.value = index\n    return\n  }\n  // Emit the activate-tab event\n  const tabEvent = new BvEvent('activate-tab', {cancelable: true})\n  emit(\n    'activate-tab',\n    tabs.value[index]?.id,\n    tabs.value[previousIndex ?? oldValue]?.id,\n    index,\n    previousIndex ?? oldValue,\n    tabEvent\n  )\n  // If the event is prevented, revert to the previous index\n  if (tabEvent.defaultPrevented) {\n    isReverting = true\n    const prev = previousIndex ?? oldValue ?? nextIndex(0, 1)\n    previousIndex = undefined\n    // Update the active id this will also trigger the activeId watch which will update the activeIndex\n    // this is to make sure we handle case that starts with id change.\n    if (activeId.value !== tabs.value[prev]?.id) {\n      activeId.value = tabs.value[prev]?.id\n    }\n    nextTick(() => {\n      if (prev >= 0) {\n        document.getElementById(tabs.value[prev]?.buttonId)?.focus()\n      }\n    })\n    return\n  }\n\n  // Update the active id\n  if (activeId.value !== tabs.value[index]?.id) {\n    activeId.value = tabs.value[index]?.id\n  }\n  previousIndex = undefined\n})\n\nwatch(activeId, (newValue, oldValue) => {\n  if (tabs.value.length <= 0 || tabs.value.filter((t) => !t.disabled).length <= 0) {\n    return\n  }\n  const index = tabs.value.findIndex((t) => t.id === newValue)\n  // If the new tab is the same as the current tab, do nothing\n  if (index === activeIndex.value) return\n  const oldIndex = tabs.value.findIndex((t) => t.id === oldValue)\n  // If the new tab is disabled, find the next enabled tab\n  if (tabs.value[index]?.disabled) {\n    // activeIndex watcher will update the activeId to the next enabled tab\n    activeIndex.value = nextIndex(index, index > oldIndex ? 1 : -1)\n    return\n  }\n  // If the new tab is not found, find the first enabled tab\n  if (index === -1) {\n    // activeIndex watcher will update the activeId to the first enabled tab\n    activeIndex.value = nextIndex(0, 1)\n    nextTick(() => {\n      activeId.value = tabs.value[activeIndex.value]?.id\n    })\n    return\n  }\n  // change to the next tab\n  activeIndex.value = index\n})\n\nconst registerTab = (tab: Ref<TabType>) => {\n  const idx = tabsInternal.value.findIndex((t) => t.value.internalId === tab.value.internalId)\n  if (idx === -1) {\n    tabsInternal.value.push(tab)\n    if (initialized) {\n      nextTick(() => {\n        sortTabs()\n      })\n    }\n  } else {\n    tabsInternal.value[idx] = tab\n    if (initialized) {\n      // sort just in case the tab was moved\n      sortTabs()\n    }\n  }\n  const idx2 = tabsInternal.value.findIndex((t) => t.value.internalId === tab.value.internalId)\n  return tab.value.id ?? (!initialized ? initialIds.value[idx2] : tab.value.internalId)\n}\n\nonMounted(() => {\n  updateInitialIndexAndId()\n  sortTabs()\n  initialized = true\n})\n\nconst sortTabs = () => {\n  tabsInternal.value.sort((a, b) => sortSlotElementsByPosition(a.value.el.value, b.value.el.value))\n  if (\n    activeId.value &&\n    activeIndex.value !== tabs.value.findIndex((t) => t.id === activeId.value)\n  ) {\n    activeIndex.value = tabs.value.findIndex((t) => t.id === activeId.value)\n  }\n}\n\nconst unregisterTab = (id: string) => {\n  tabsInternal.value = tabsInternal.value.filter((t) => t.value.internalId !== id)\n}\n\nprovide(tabsInjectionKey, {\n  lazy: toRef(() => props.lazy),\n  card: toRef(() => props.card),\n  noFade: toRef(() => props.noFade),\n  activeTabClass: toRef(() => props.activeTabClass),\n  inactiveTabClass: toRef(() => props.inactiveTabClass),\n  tabClass: toRef(() => props.tabClass),\n  registerTab,\n  unregisterTab,\n  activeId,\n  activateTab: (internalId) => {\n    const idx = tabs.value.findIndex((t) => t.internalId === internalId)\n    if (internalId === undefined || idx === -1) {\n      activeIndex.value = nextIndex(0, 1)\n      return\n    }\n    activeIndex.value = idx\n  },\n})\n</script>\n"],"names":["_useSlots","_useModel","_openBlock","_createBlock","_resolveDynamicComponent","_unref","_mergeProps","_renderSlot","BTab","_normalizeClass","_createVNode","_createElementVNode","_createElementBlock","vertical","_Fragment","_renderList","_withKeys","_withModifiers","_createTextVNode","_toDisplayString"],"mappings":"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"}