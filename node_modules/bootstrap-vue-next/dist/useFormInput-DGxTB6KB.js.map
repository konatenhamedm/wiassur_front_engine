{"version":3,"file":"useFormInput-DGxTB6KB.js","sources":["../src/utils/debounce.ts","../src/utils/normalizeInput.ts","../src/composables/useFormInput.ts"],"sourcesContent":["import {type MaybeRefOrGetter, toValue} from 'vue'\nimport type {\n  AnyFn,\n  ArgumentsType,\n  DebounceFilterOptions,\n  EventFilter,\n  FunctionArgs,\n  UseDebounceFnReturn,\n} from '@vueuse/core'\n\nexport const noop = () => {}\n\n/**\n * @internal\n */\nfunction createFilterWrapper<T extends AnyFn>(filter: EventFilter & {cancel: () => void}, fn: T) {\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  function wrapper(this: any, ...args: ArgumentsType<T>) {\n    return new Promise<Awaited<ReturnType<T>>>((resolve, reject) => {\n      // make sure it's a promise\n      Promise.resolve(filter(() => fn.apply(this, args), {fn, thisArg: this, args}))\n        .then(resolve)\n        .catch(reject)\n    })\n  }\n\n  // https://github.com/vueuse/vueuse/pull/4561\n  wrapper.cancel = filter.cancel\n  return wrapper\n}\n\n/**\n * Create an EventFilter that debounce the events\n */\nfunction debounceFilter(ms: MaybeRefOrGetter<number>, options: DebounceFilterOptions = {}) {\n  let timer: ReturnType<typeof setTimeout> | undefined\n  let maxTimer: ReturnType<typeof setTimeout> | undefined | null\n  let lastRejector: AnyFn = noop\n\n  const _clearTimeout = (timer: ReturnType<typeof setTimeout>) => {\n    clearTimeout(timer)\n    lastRejector()\n    lastRejector = noop\n  }\n\n  let lastInvoker: () => void\n\n  const filter: EventFilter & {cancel: () => void} = (invoke) => {\n    const duration = toValue(ms)\n    const maxDuration = toValue(options.maxWait)\n\n    if (timer) _clearTimeout(timer)\n\n    if (duration <= 0 || (maxDuration !== undefined && maxDuration <= 0)) {\n      if (maxTimer) {\n        _clearTimeout(maxTimer)\n        maxTimer = null\n      }\n      return Promise.resolve(invoke())\n    }\n\n    return new Promise((resolve, reject) => {\n      lastRejector = options.rejectOnCancel ? reject : resolve\n      lastInvoker = invoke\n      // Create the maxTimer. Clears the regular timer on invoke\n      if (maxDuration && !maxTimer) {\n        maxTimer = setTimeout(() => {\n          if (timer) _clearTimeout(timer)\n          maxTimer = null\n          resolve(lastInvoker())\n        }, maxDuration)\n      }\n\n      // Create the regular timer. Clears the max timer on invoke\n      timer = setTimeout(() => {\n        if (maxTimer) _clearTimeout(maxTimer)\n        maxTimer = null\n        resolve(invoke())\n      }, duration)\n    })\n  }\n\n  // https://github.com/vueuse/vueuse/pull/4561\n  filter.cancel = () => {\n    if (timer) _clearTimeout(timer)\n    if (maxTimer) _clearTimeout(maxTimer)\n    maxTimer = null\n  }\n\n  return filter\n}\n\n/**\n * Debounce execution of a function.\n *\n * @see https://vueuse.org/useDebounceFn\n * @param  fn          A function to be executed after delay milliseconds debounced.\n * @param  ms          A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\n * @param  options     Options\n *\n * @return A new, debounce, function, provided with a cancel method.\n */\nexport function useDebounceFn<T extends FunctionArgs>(\n  fn: T,\n  ms: MaybeRefOrGetter<number> = 200,\n  options: DebounceFilterOptions = {}\n): UseDebounceFnReturn<T> & {cancel: () => void} {\n  return createFilterWrapper(debounceFilter(ms, options), fn)\n}\n","import type {Numberish} from '../types/CommonTypes'\n\nexport const normalizeInput = (\n  v: Numberish | null,\n  modelModifiers: Record<'number' | 'lazy' | 'trim', true | undefined>\n) => {\n  if (v === null) return\n  let update = v\n  if (modelModifiers.number && typeof update === 'string' && update !== '') {\n    const parsed = Number.parseFloat(update)\n    update = Number.isNaN(parsed) ? update : parsed\n  }\n  return update\n}\n","import type {Numberish} from '../types/CommonTypes'\nimport {\n  computed,\n  inject,\n  nextTick,\n  onActivated,\n  onMounted,\n  ref,\n  type Ref,\n  type ShallowRef,\n} from 'vue'\nimport {useAriaInvalid} from './useAriaInvalid'\nimport {useId} from './useId'\nimport {useFocus, useToNumber} from '@vueuse/core'\nimport type {CommonInputProps} from '../types/FormCommonInputProps'\nimport {formGroupKey} from '../utils/keys'\nimport {useDebounceFn} from '../utils/debounce'\nimport {useStateClass} from './useStateClass'\n\nexport const useFormInput = (\n  props: Readonly<CommonInputProps>,\n  input:\n    | Readonly<ShallowRef<HTMLInputElement | null>>\n    | Readonly<ShallowRef<HTMLTextAreaElement | null>>,\n  modelValue: Ref<Numberish | null>,\n  modelModifiers: Record<'number' | 'lazy' | 'trim', true | undefined>\n) => {\n  const forceUpdateKey = ref(0)\n\n  const computedId = useId(() => props.id, 'input')\n  const debounceNumber = useToNumber(() => props.debounce ?? 0, {nanToZero: true})\n  const debounceMaxWaitNumber = useToNumber(() => props.debounceMaxWait ?? NaN)\n\n  // This automatically adds the appropriate \"for\" attribute to a BFormGroup label\n  const formGroupData = inject(formGroupKey, null)?.(computedId)\n  const computedState = computed(() =>\n    props.state !== undefined ? props.state : (formGroupData?.state.value ?? null)\n  )\n  const computedAriaInvalid = useAriaInvalid(() => props.ariaInvalid, computedState)\n  const stateClass = useStateClass(computedState)\n\n  const internalUpdateModelValue = useDebounceFn(\n    (value: Numberish) => {\n      modelValue.value = value\n    },\n    () => (modelModifiers.lazy === true ? 0 : debounceNumber.value),\n    {maxWait: () => (modelModifiers.lazy === true ? NaN : debounceMaxWaitNumber.value)}\n  )\n\n  const updateModelValue = (value: Numberish, force = false, immediate = false) => {\n    if (modelModifiers.lazy === true && force === false) return\n    if (immediate) {\n      modelValue.value = value\n    } else {\n      internalUpdateModelValue(value)\n    }\n  }\n\n  const {focused} = useFocus(input, {\n    initialValue: props.autofocus,\n  })\n\n  const _formatValue = (value: string, evt: Readonly<Event>, force = false) => {\n    if (props.formatter !== undefined && (!props.lazyFormatter || force)) {\n      return props.formatter(value, evt)\n    }\n    return value\n  }\n  onMounted(() => {\n    if (input.value) {\n      input.value.value = modelValue.value?.toString() ?? ''\n    }\n  })\n\n  onActivated(() => {\n    nextTick(() => {\n      if (props.autofocus) {\n        focused.value = true\n      }\n    })\n  })\n\n  const onInput = (evt: Readonly<Event>) => {\n    const {value} = evt.target as HTMLInputElement\n    const formattedValue = _formatValue(value, evt)\n    if (evt.defaultPrevented) {\n      evt.preventDefault()\n      return\n    }\n\n    const nextModel = formattedValue\n\n    updateModelValue(nextModel)\n  }\n\n  const onChange = (evt: Readonly<Event>) => {\n    const {value} = evt.target as HTMLInputElement\n    const formattedValue = _formatValue(value, evt)\n    if (evt.defaultPrevented) {\n      evt.preventDefault()\n      return\n    }\n\n    const nextModel = formattedValue\n    if (modelValue.value !== nextModel) {\n      updateModelValue(formattedValue, true)\n    }\n  }\n\n  const onBlur = (evt: Readonly<FocusEvent>) => {\n    if (\n      !modelModifiers.lazy &&\n      !props.lazyFormatter &&\n      !modelModifiers.trim &&\n      debounceNumber.value <= 0\n    )\n      return\n\n    const {value} = evt.target as HTMLInputElement\n    const formattedValue = _formatValue(value, evt, true)\n\n    const nextModel = modelModifiers.trim ? formattedValue.trim() : formattedValue\n    const needsForceUpdate = nextModel.length !== formattedValue.length\n    // Cancel before modelValue.value comparison and update\n    internalUpdateModelValue.cancel()\n    if (modelValue.value !== nextModel) {\n      updateModelValue(formattedValue, true, true)\n    }\n    if (modelModifiers.trim && needsForceUpdate) {\n      // The value is trimmed but there would still exist some white space\n      // So, force update the value. You need to bind this to :key on the input element\n      forceUpdateKey.value = forceUpdateKey.value + 1\n    }\n  }\n\n  const focus = () => {\n    if (!props.disabled) {\n      focused.value = true\n    }\n  }\n\n  const blur = () => {\n    if (!props.disabled) {\n      focused.value = false\n    }\n  }\n\n  return {\n    input,\n    computedId,\n    computedAriaInvalid,\n    onInput,\n    onChange,\n    onBlur,\n    focus,\n    blur,\n    forceUpdateKey,\n    stateClass,\n  }\n}\n"],"names":["noop","useDebounceFn","fn","ms","options","filter","wrapper","args","Promise","resolve","reject","apply","this","thisArg","then","catch","cancel","createFilterWrapper","timer","maxTimer","lastRejector","_clearTimeout","clearTimeout","lastInvoker","invoke","duration","toValue","maxDuration","maxWait","rejectOnCancel","setTimeout","debounceFilter","v","modelModifiers","update","number","parsed","Number","parseFloat","isNaN","props","input","modelValue","forceUpdateKey","ref","computedId","useId","id","debounceNumber","useToNumber","debounce","nanToZero","debounceMaxWaitNumber","debounceMaxWait","NaN","formGroupData","inject","formGroupKey","computedState","computed","state","value","computedAriaInvalid","useAriaInvalid","ariaInvalid","stateClass","useStateClass","internalUpdateModelValue","lazy","updateModelValue","force","immediate","focused","useFocus","initialValue","autofocus","_formatValue","evt","formatter","lazyFormatter","onMounted","toString","onActivated","nextTick","onInput","target","formattedValue","defaultPrevented","preventDefault","onChange","nextModel","onBlur","trim","needsForceUpdate","length","focus","disabled","blur"],"mappings":"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"}